//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.5.1 JavaJava.g3 2018-03-21 20:46:56

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// CLS compliance checking will not be performed on 'type' because it is not visible from outside this assembly.
#pragma warning disable 3019


using System;


using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;


using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.5.1")]
[System.CLSCompliant(false)]
public partial class JavaJavaParser : Antlr.Runtime.Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ASSERT", "COMMENT", "CharacterLiteral", "DecimalLiteral", "ENUM", "EscapeSequence", "Exponent", "FloatTypeSuffix", "FloatingPointLiteral", "HexDigit", "HexLiteral", "Identifier", "IntegerTypeSuffix", "JavaIDDigit", "LINE_COMMENT", "Letter", "OctalEscape", "OctalLiteral", "StringLiteral", "UnicodeEscape", "WS", "'!'", "'!='", "'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "')'", "'*'", "'*='", "'+'", "'++'", "'+='", "','", "'-'", "'--'", "'-='", "'.'", "'...'", "'/'", "'/='", "':'", "';'", "'<'", "'='", "'=='", "'>'", "'?'", "'@'", "'['", "']'", "'^'", "'^='", "'abstract'", "'bool'", "'break'", "'byte'", "'case'", "'catch'", "'char'", "'class'", "'continue'", "'default'", "'do'", "'double'", "'else'", "'extends'", "'false'", "'final'", "'finally'", "'float'", "'for'", "'if'", "'implements'", "'import'", "'instanceof'", "'int'", "'interface'", "'long'", "'native'", "'new'", "'null'", "'package'", "'private'", "'protected'", "'public'", "'return'", "'short'", "'static'", "'strictfp'", "'super'", "'switch'", "'synchronized'", "'this'", "'throw'", "'throws'", "'transient'", "'true'", "'try'", "'void'", "'volatile'", "'while'", "'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
	};
	public const int EOF=-1;
	public const int ASSERT=4;
	public const int COMMENT=5;
	public const int CharacterLiteral=6;
	public const int DecimalLiteral=7;
	public const int ENUM=8;
	public const int EscapeSequence=9;
	public const int Exponent=10;
	public const int FloatTypeSuffix=11;
	public const int FloatingPointLiteral=12;
	public const int HexDigit=13;
	public const int HexLiteral=14;
	public const int Identifier=15;
	public const int IntegerTypeSuffix=16;
	public const int JavaIDDigit=17;
	public const int LINE_COMMENT=18;
	public const int Letter=19;
	public const int OctalEscape=20;
	public const int OctalLiteral=21;
	public const int StringLiteral=22;
	public const int UnicodeEscape=23;
	public const int WS=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int T__29=29;
	public const int T__30=30;
	public const int T__31=31;
	public const int T__32=32;
	public const int T__33=33;
	public const int T__34=34;
	public const int T__35=35;
	public const int T__36=36;
	public const int T__37=37;
	public const int T__38=38;
	public const int T__39=39;
	public const int T__40=40;
	public const int T__41=41;
	public const int T__42=42;
	public const int T__43=43;
	public const int T__44=44;
	public const int T__45=45;
	public const int T__46=46;
	public const int T__47=47;
	public const int T__48=48;
	public const int T__49=49;
	public const int T__50=50;
	public const int T__51=51;
	public const int T__52=52;
	public const int T__53=53;
	public const int T__54=54;
	public const int T__55=55;
	public const int T__56=56;
	public const int T__57=57;
	public const int T__58=58;
	public const int T__59=59;
	public const int T__60=60;
	public const int T__61=61;
	public const int T__62=62;
	public const int T__63=63;
	public const int T__64=64;
	public const int T__65=65;
	public const int T__66=66;
	public const int T__67=67;
	public const int T__68=68;
	public const int T__69=69;
	public const int T__70=70;
	public const int T__71=71;
	public const int T__72=72;
	public const int T__73=73;
	public const int T__74=74;
	public const int T__75=75;
	public const int T__76=76;
	public const int T__77=77;
	public const int T__78=78;
	public const int T__79=79;
	public const int T__80=80;
	public const int T__81=81;
	public const int T__82=82;
	public const int T__83=83;
	public const int T__84=84;
	public const int T__85=85;
	public const int T__86=86;
	public const int T__87=87;
	public const int T__88=88;
	public const int T__89=89;
	public const int T__90=90;
	public const int T__91=91;
	public const int T__92=92;
	public const int T__93=93;
	public const int T__94=94;
	public const int T__95=95;
	public const int T__96=96;
	public const int T__97=97;
	public const int T__98=98;
	public const int T__99=99;
	public const int T__100=100;
	public const int T__101=101;
	public const int T__102=102;
	public const int T__103=103;
	public const int T__104=104;
	public const int T__105=105;
	public const int T__106=106;
	public const int T__107=107;
	public const int T__108=108;
	public const int T__109=109;
	public const int T__110=110;
	public const int T__111=111;
	public const int T__112=112;
	public const int T__113=113;

	public JavaJavaParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public JavaJavaParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[407+1];


		ITreeAdaptor treeAdaptor = default(ITreeAdaptor);
		CreateTreeAdaptor(ref treeAdaptor);
		TreeAdaptor = treeAdaptor ?? new CommonTreeAdaptor();
		OnCreated();
	}
	// Implement this function in your helper file to use a custom tree adaptor
	partial void CreateTreeAdaptor(ref ITreeAdaptor adaptor);

	private ITreeAdaptor adaptor;

	public ITreeAdaptor TreeAdaptor
	{
		get
		{
			return adaptor;
		}

		set
		{
			this.adaptor = value;
		}
	}

	public override string[] TokenNames { get { return JavaJavaParser.tokenNames; } }
	public override string GrammarFileName { get { return "JavaJava.g3"; } }


	    public int cc = 0, ec=0;
	    String ca;
	    static public int linecount=0;
	    bool bextends = false, field=false, param=false;
	    bool primitive=false, classtype=false, local=false;
	    bool methodcall = false, constructorcall = false;
	    bool bimplements;
	    
	    bool	inPackage = false;
	    ////
	    bool	inMethod=false;
	    ////
	    
	    //McCabe var
	    int mmc = 0;
	    String methodName;
	    String PrimitiveType = "default";
	    String ClassType = "default";
	    String one, two;
	    String interfacemethodname;
	    int InterfaceFieldLine;
	    bool RHS=false, Assignment=false;
	    int LastKnownLine=0;
	    int classCount = 0;
	    public static int keywordCount = 0;
	    public static int specialcount = 0;
	    public static int identcount = 0;
	    ////////////////imports separate
	    public static int importKWCount=0;
	    public static int importIDCount=0;
	    /////////////////////////////////
	    String myID;
	    String packageName, className;
	    void s(String sp){ 
	         specialcount++; 
	        // Console.Write(sp);
	         JavaMetrics.UniqueSpecial.Add(sp);
	    }
	    void id(String s){
	    	identcount++;
	    	JavaMetrics.UniqueIdentifiers.Add(s);
	    	//Console.Write("ID=====>" + s);
	    }
	 

	partial void OnCreated();
	partial void EnterRule(string ruleName, int ruleIndex);
	partial void LeaveRule(string ruleName, int ruleIndex);

	#region Rules
	partial void EnterRule_compilationUnit();
	partial void LeaveRule_compilationUnit();
	// $ANTLR start "compilationUnit"
	// JavaJava.g3:77:8: public compilationUnit : ( annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) | ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* );
	[GrammarRule("compilationUnit")]
	public AstParserRuleReturnScope<object, IToken> compilationUnit()
	{
		EnterRule_compilationUnit();
		EnterRule("compilationUnit", 1);
		TraceIn("compilationUnit", 1);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int compilationUnit_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> annotations1 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> packageDeclaration2 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> importDeclaration3 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeDeclaration4 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classOrInterfaceDeclaration5 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeDeclaration6 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> packageDeclaration7 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> importDeclaration8 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeDeclaration9 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "compilationUnit");
		DebugLocation(77, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 1)) { return retval; }

			// JavaJava.g3:78:5: ( annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) | ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )* )
			int alt8=2;
			try { DebugEnterDecision(8, false);
			int LA8_1 = input.LA(1);

			if ((LA8_1==54))
			{
				int LA8_2 = input.LA(2);

				if ((EvaluatePredicate(synpred5_JavaJava_fragment)))
				{
					alt8 = 1;
				}
				else if ((true))
				{
					alt8 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 8, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA8_1==EOF||LA8_1==ENUM||LA8_1==48||LA8_1==59||LA8_1==66||LA8_1==74||LA8_1==80||LA8_1==83||(LA8_1>=88 && LA8_1<=91)||(LA8_1>=94 && LA8_1<=95)))
			{
				alt8 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 8, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:78:9: annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(78, 9);
				PushFollow(Follow._annotations_in_compilationUnit75);
				annotations1=annotations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotations1.Tree);
				DebugLocation(79, 9);
				// JavaJava.g3:79:9: ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* )
				int alt4=2;
				try { DebugEnterSubRule(4);
				try { DebugEnterDecision(4, false);
				int LA4_1 = input.LA(1);

				if ((LA4_1==88))
				{
					alt4 = 1;
				}
				else if ((LA4_1==ENUM||LA4_1==54||LA4_1==59||LA4_1==66||LA4_1==74||LA4_1==83||(LA4_1>=89 && LA4_1<=91)||(LA4_1>=94 && LA4_1<=95)))
				{
					alt4 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 4, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(4); }
				switch (alt4)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:79:13: packageDeclaration ( importDeclaration )* ( typeDeclaration )*
					{
					DebugLocation(79, 13);
					PushFollow(Follow._packageDeclaration_in_compilationUnit89);
					packageDeclaration2=packageDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, packageDeclaration2.Tree);
					DebugLocation(79, 32);
					// JavaJava.g3:79:32: ( importDeclaration )*
					try { DebugEnterSubRule(1);
					while (true)
					{
						int alt1=2;
						try { DebugEnterDecision(1, false);
						int LA1_1 = input.LA(1);

						if ((LA1_1==80))
						{
							alt1 = 1;
						}


						} finally { DebugExitDecision(1); }
						switch ( alt1 )
						{
						case 1:
							DebugEnterAlt(1);
							// JavaJava.g3:79:32: importDeclaration
							{
							DebugLocation(79, 32);
							PushFollow(Follow._importDeclaration_in_compilationUnit91);
							importDeclaration3=importDeclaration();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, importDeclaration3.Tree);

							}
							break;

						default:
							goto loop1;
						}
					}

					loop1:
						;

					} finally { DebugExitSubRule(1); }

					DebugLocation(79, 51);
					// JavaJava.g3:79:51: ( typeDeclaration )*
					try { DebugEnterSubRule(2);
					while (true)
					{
						int alt2=2;
						try { DebugEnterDecision(2, false);
						int LA2_1 = input.LA(1);

						if ((LA2_1==ENUM||LA2_1==48||LA2_1==54||LA2_1==59||LA2_1==66||LA2_1==74||LA2_1==83||(LA2_1>=89 && LA2_1<=91)||(LA2_1>=94 && LA2_1<=95)))
						{
							alt2 = 1;
						}


						} finally { DebugExitDecision(2); }
						switch ( alt2 )
						{
						case 1:
							DebugEnterAlt(1);
							// JavaJava.g3:79:51: typeDeclaration
							{
							DebugLocation(79, 51);
							PushFollow(Follow._typeDeclaration_in_compilationUnit94);
							typeDeclaration4=typeDeclaration();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, typeDeclaration4.Tree);

							}
							break;

						default:
							goto loop2;
						}
					}

					loop2:
						;

					} finally { DebugExitSubRule(2); }


					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:80:13: classOrInterfaceDeclaration ( typeDeclaration )*
					{
					DebugLocation(80, 13);
					PushFollow(Follow._classOrInterfaceDeclaration_in_compilationUnit109);
					classOrInterfaceDeclaration5=classOrInterfaceDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceDeclaration5.Tree);
					DebugLocation(80, 41);
					// JavaJava.g3:80:41: ( typeDeclaration )*
					try { DebugEnterSubRule(3);
					while (true)
					{
						int alt3=2;
						try { DebugEnterDecision(3, false);
						int LA3_1 = input.LA(1);

						if ((LA3_1==ENUM||LA3_1==48||LA3_1==54||LA3_1==59||LA3_1==66||LA3_1==74||LA3_1==83||(LA3_1>=89 && LA3_1<=91)||(LA3_1>=94 && LA3_1<=95)))
						{
							alt3 = 1;
						}


						} finally { DebugExitDecision(3); }
						switch ( alt3 )
						{
						case 1:
							DebugEnterAlt(1);
							// JavaJava.g3:80:41: typeDeclaration
							{
							DebugLocation(80, 41);
							PushFollow(Follow._typeDeclaration_in_compilationUnit111);
							typeDeclaration6=typeDeclaration();
							PopFollow();
							if (state.failed) return retval;
							if (state.backtracking == 0) adaptor.AddChild(root_0, typeDeclaration6.Tree);

							}
							break;

						default:
							goto loop3;
						}
					}

					loop3:
						;

					} finally { DebugExitSubRule(3); }


					}
					break;

				}
				} finally { DebugExitSubRule(4); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:82:9: ( packageDeclaration )? ( importDeclaration )* ( typeDeclaration )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(82, 9);
				// JavaJava.g3:82:9: ( packageDeclaration )?
				int alt5=2;
				try { DebugEnterSubRule(5);
				try { DebugEnterDecision(5, false);
				int LA5_1 = input.LA(1);

				if ((LA5_1==88))
				{
					alt5 = 1;
				}
				} finally { DebugExitDecision(5); }
				switch (alt5)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:82:9: packageDeclaration
					{
					DebugLocation(82, 9);
					PushFollow(Follow._packageDeclaration_in_compilationUnit132);
					packageDeclaration7=packageDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, packageDeclaration7.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(5); }

				DebugLocation(82, 29);
				// JavaJava.g3:82:29: ( importDeclaration )*
				try { DebugEnterSubRule(6);
				while (true)
				{
					int alt6=2;
					try { DebugEnterDecision(6, false);
					int LA6_1 = input.LA(1);

					if ((LA6_1==80))
					{
						alt6 = 1;
					}


					} finally { DebugExitDecision(6); }
					switch ( alt6 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:82:29: importDeclaration
						{
						DebugLocation(82, 29);
						PushFollow(Follow._importDeclaration_in_compilationUnit135);
						importDeclaration8=importDeclaration();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, importDeclaration8.Tree);

						}
						break;

					default:
						goto loop6;
					}
				}

				loop6:
					;

				} finally { DebugExitSubRule(6); }

				DebugLocation(82, 48);
				// JavaJava.g3:82:48: ( typeDeclaration )*
				try { DebugEnterSubRule(7);
				while (true)
				{
					int alt7=2;
					try { DebugEnterDecision(7, false);
					int LA7_1 = input.LA(1);

					if ((LA7_1==ENUM||LA7_1==48||LA7_1==54||LA7_1==59||LA7_1==66||LA7_1==74||LA7_1==83||(LA7_1>=89 && LA7_1<=91)||(LA7_1>=94 && LA7_1<=95)))
					{
						alt7 = 1;
					}


					} finally { DebugExitDecision(7); }
					switch ( alt7 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:82:48: typeDeclaration
						{
						DebugLocation(82, 48);
						PushFollow(Follow._typeDeclaration_in_compilationUnit138);
						typeDeclaration9=typeDeclaration();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, typeDeclaration9.Tree);

						}
						break;

					default:
						goto loop7;
					}
				}

				loop7:
					;

				} finally { DebugExitSubRule(7); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("compilationUnit", 1);
			LeaveRule("compilationUnit", 1);
			LeaveRule_compilationUnit();
			if (state.backtracking > 0) { Memoize(input, 1, compilationUnit_StartIndex); }

		}
		DebugLocation(83, 4);
		} finally { DebugExitRule(GrammarFileName, "compilationUnit"); }
		return retval;

	}
	// $ANTLR end "compilationUnit"

	partial void EnterRule_packageDeclaration();
	partial void LeaveRule_packageDeclaration();
	// $ANTLR start "packageDeclaration"
	// JavaJava.g3:85:1: packageDeclaration : 'package' qualifiedName ';' ;
	[GrammarRule("packageDeclaration")]
	private AstParserRuleReturnScope<object, IToken> packageDeclaration()
	{
		EnterRule_packageDeclaration();
		EnterRule("packageDeclaration", 2);
		TraceIn("packageDeclaration", 2);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int packageDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal10 = default(IToken);
		IToken char_literal12 = default(IToken);
		AstParserRuleReturnScope<object, IToken> qualifiedName11 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal10_tree = default(object);
		object char_literal12_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "packageDeclaration");
		DebugLocation(85, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 2)) { return retval; }

			// JavaJava.g3:86:5: ( 'package' qualifiedName ';' )
			DebugEnterAlt(1);
			// JavaJava.g3:86:9: 'package' qualifiedName ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(86, 9);
			string_literal10=(IToken)Match(input,88,Follow._88_in_packageDeclaration158); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal10_tree = (object)adaptor.Create(string_literal10);
			adaptor.AddChild(root_0, string_literal10_tree);
			}
			DebugLocation(86, 18);
			if (state.backtracking == 0)
			{
				importKWCount++;
			}
			DebugLocation(86, 37);
			PushFollow(Follow._qualifiedName_in_packageDeclaration161);
			qualifiedName11=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName11.Tree);
			DebugLocation(86, 51);
			char_literal12=(IToken)Match(input,48,Follow._48_in_packageDeclaration163); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal12_tree = (object)adaptor.Create(char_literal12);
			adaptor.AddChild(root_0, char_literal12_tree);
			}
			DebugLocation(86, 55);
			if (state.backtracking == 0)
			{
				 s(";"); importIDCount++; packageName = myID;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("packageDeclaration", 2);
			LeaveRule("packageDeclaration", 2);
			LeaveRule_packageDeclaration();
			if (state.backtracking > 0) { Memoize(input, 2, packageDeclaration_StartIndex); }

		}
		DebugLocation(87, 4);
		} finally { DebugExitRule(GrammarFileName, "packageDeclaration"); }
		return retval;

	}
	// $ANTLR end "packageDeclaration"

	partial void EnterRule_importDeclaration();
	partial void LeaveRule_importDeclaration();
	// $ANTLR start "importDeclaration"
	// JavaJava.g3:89:1: importDeclaration : 'import' ( 'static' )? qualifiedName ( '.' '*' )? ';' ;
	[GrammarRule("importDeclaration")]
	private AstParserRuleReturnScope<object, IToken> importDeclaration()
	{
		EnterRule_importDeclaration();
		EnterRule("importDeclaration", 3);
		TraceIn("importDeclaration", 3);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int importDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal13 = default(IToken);
		IToken string_literal14 = default(IToken);
		IToken char_literal16 = default(IToken);
		IToken char_literal17 = default(IToken);
		IToken char_literal18 = default(IToken);
		AstParserRuleReturnScope<object, IToken> qualifiedName15 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal13_tree = default(object);
		object string_literal14_tree = default(object);
		object char_literal16_tree = default(object);
		object char_literal17_tree = default(object);
		object char_literal18_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "importDeclaration");
		DebugLocation(89, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 3)) { return retval; }

			// JavaJava.g3:90:5: ( 'import' ( 'static' )? qualifiedName ( '.' '*' )? ';' )
			DebugEnterAlt(1);
			// JavaJava.g3:90:9: 'import' ( 'static' )? qualifiedName ( '.' '*' )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(90, 9);
			string_literal13=(IToken)Match(input,80,Follow._80_in_importDeclaration188); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal13_tree = (object)adaptor.Create(string_literal13);
			adaptor.AddChild(root_0, string_literal13_tree);
			}
			DebugLocation(90, 18);
			if (state.backtracking == 0)
			{
				importKWCount++;
			}
			DebugLocation(90, 37);
			// JavaJava.g3:90:37: ( 'static' )?
			int alt9=2;
			try { DebugEnterSubRule(9);
			try { DebugEnterDecision(9, false);
			int LA9_1 = input.LA(1);

			if ((LA9_1==94))
			{
				alt9 = 1;
			}
			} finally { DebugExitDecision(9); }
			switch (alt9)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:90:37: 'static'
				{
				DebugLocation(90, 37);
				string_literal14=(IToken)Match(input,94,Follow._94_in_importDeclaration192); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal14_tree = (object)adaptor.Create(string_literal14);
				adaptor.AddChild(root_0, string_literal14_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(9); }

			DebugLocation(90, 47);
			PushFollow(Follow._qualifiedName_in_importDeclaration195);
			qualifiedName15=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName15.Tree);
			DebugLocation(90, 61);
			if (state.backtracking == 0)
			{
				importIDCount++;
			}
			DebugLocation(90, 80);
			// JavaJava.g3:90:80: ( '.' '*' )?
			int alt10=2;
			try { DebugEnterSubRule(10);
			try { DebugEnterDecision(10, false);
			int LA10_1 = input.LA(1);

			if ((LA10_1==43))
			{
				alt10 = 1;
			}
			} finally { DebugExitDecision(10); }
			switch (alt10)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:90:81: '.' '*'
				{
				DebugLocation(90, 81);
				char_literal16=(IToken)Match(input,43,Follow._43_in_importDeclaration200); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal16_tree = (object)adaptor.Create(char_literal16);
				adaptor.AddChild(root_0, char_literal16_tree);
				}
				DebugLocation(90, 85);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(90, 95);
				char_literal17=(IToken)Match(input,34,Follow._34_in_importDeclaration204); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal17_tree = (object)adaptor.Create(char_literal17);
				adaptor.AddChild(root_0, char_literal17_tree);
				}
				DebugLocation(90, 99);
				if (state.backtracking == 0)
				{
					s("*");
				}

				}
				break;

			}
			} finally { DebugExitSubRule(10); }

			DebugLocation(90, 111);
			char_literal18=(IToken)Match(input,48,Follow._48_in_importDeclaration210); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal18_tree = (object)adaptor.Create(char_literal18);
			adaptor.AddChild(root_0, char_literal18_tree);
			}
			DebugLocation(90, 115);
			if (state.backtracking == 0)
			{
				s(";");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("importDeclaration", 3);
			LeaveRule("importDeclaration", 3);
			LeaveRule_importDeclaration();
			if (state.backtracking > 0) { Memoize(input, 3, importDeclaration_StartIndex); }

		}
		DebugLocation(91, 4);
		} finally { DebugExitRule(GrammarFileName, "importDeclaration"); }
		return retval;

	}
	// $ANTLR end "importDeclaration"

	partial void EnterRule_typeDeclaration();
	partial void LeaveRule_typeDeclaration();
	// $ANTLR start "typeDeclaration"
	// JavaJava.g3:93:1: typeDeclaration : ( classOrInterfaceDeclaration | ';' );
	[GrammarRule("typeDeclaration")]
	private AstParserRuleReturnScope<object, IToken> typeDeclaration()
	{
		EnterRule_typeDeclaration();
		EnterRule("typeDeclaration", 4);
		TraceIn("typeDeclaration", 4);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal20 = default(IToken);
		AstParserRuleReturnScope<object, IToken> classOrInterfaceDeclaration19 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal20_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeDeclaration");
		DebugLocation(93, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 4)) { return retval; }

			// JavaJava.g3:94:5: ( classOrInterfaceDeclaration | ';' )
			int alt11=2;
			try { DebugEnterDecision(11, false);
			int LA11_1 = input.LA(1);

			if ((LA11_1==ENUM||LA11_1==54||LA11_1==59||LA11_1==66||LA11_1==74||LA11_1==83||(LA11_1>=89 && LA11_1<=91)||(LA11_1>=94 && LA11_1<=95)))
			{
				alt11 = 1;
			}
			else if ((LA11_1==48))
			{
				alt11 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 11, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:94:9: classOrInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(94, 9);
				PushFollow(Follow._classOrInterfaceDeclaration_in_typeDeclaration235);
				classOrInterfaceDeclaration19=classOrInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceDeclaration19.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:95:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(95, 9);
				char_literal20=(IToken)Match(input,48,Follow._48_in_typeDeclaration245); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal20_tree = (object)adaptor.Create(char_literal20);
				adaptor.AddChild(root_0, char_literal20_tree);
				}
				DebugLocation(95, 12);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeDeclaration", 4);
			LeaveRule("typeDeclaration", 4);
			LeaveRule_typeDeclaration();
			if (state.backtracking > 0) { Memoize(input, 4, typeDeclaration_StartIndex); }

		}
		DebugLocation(96, 4);
		} finally { DebugExitRule(GrammarFileName, "typeDeclaration"); }
		return retval;

	}
	// $ANTLR end "typeDeclaration"

	partial void EnterRule_classOrInterfaceDeclaration();
	partial void LeaveRule_classOrInterfaceDeclaration();
	// $ANTLR start "classOrInterfaceDeclaration"
	// JavaJava.g3:98:1: classOrInterfaceDeclaration : classOrInterfaceModifiers ( classDeclaration | interfaceDeclaration ) ;
	[GrammarRule("classOrInterfaceDeclaration")]
	private AstParserRuleReturnScope<object, IToken> classOrInterfaceDeclaration()
	{
		EnterRule_classOrInterfaceDeclaration();
		EnterRule("classOrInterfaceDeclaration", 5);
		TraceIn("classOrInterfaceDeclaration", 5);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> classOrInterfaceModifiers21 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classDeclaration22 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceDeclaration23 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "classOrInterfaceDeclaration");
		DebugLocation(98, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 5)) { return retval; }

			// JavaJava.g3:99:5: ( classOrInterfaceModifiers ( classDeclaration | interfaceDeclaration ) )
			DebugEnterAlt(1);
			// JavaJava.g3:99:9: classOrInterfaceModifiers ( classDeclaration | interfaceDeclaration )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(99, 9);
			PushFollow(Follow._classOrInterfaceModifiers_in_classOrInterfaceDeclaration269);
			classOrInterfaceModifiers21=classOrInterfaceModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceModifiers21.Tree);
			DebugLocation(99, 35);
			// JavaJava.g3:99:35: ( classDeclaration | interfaceDeclaration )
			int alt12=2;
			try { DebugEnterSubRule(12);
			try { DebugEnterDecision(12, false);
			int LA12_1 = input.LA(1);

			if ((LA12_1==ENUM||LA12_1==66))
			{
				alt12 = 1;
			}
			else if ((LA12_1==54||LA12_1==83))
			{
				alt12 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 12, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:99:36: classDeclaration
				{
				DebugLocation(99, 36);
				PushFollow(Follow._classDeclaration_in_classOrInterfaceDeclaration272);
				classDeclaration22=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration22.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:99:55: interfaceDeclaration
				{
				DebugLocation(99, 55);
				PushFollow(Follow._interfaceDeclaration_in_classOrInterfaceDeclaration276);
				interfaceDeclaration23=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration23.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(12); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceDeclaration", 5);
			LeaveRule("classOrInterfaceDeclaration", 5);
			LeaveRule_classOrInterfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 5, classOrInterfaceDeclaration_StartIndex); }

		}
		DebugLocation(100, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceDeclaration"

	partial void EnterRule_classOrInterfaceModifiers();
	partial void LeaveRule_classOrInterfaceModifiers();
	// $ANTLR start "classOrInterfaceModifiers"
	// JavaJava.g3:102:1: classOrInterfaceModifiers : ( classOrInterfaceModifier )* ;
	[GrammarRule("classOrInterfaceModifiers")]
	private AstParserRuleReturnScope<object, IToken> classOrInterfaceModifiers()
	{
		EnterRule_classOrInterfaceModifiers();
		EnterRule("classOrInterfaceModifiers", 6);
		TraceIn("classOrInterfaceModifiers", 6);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceModifiers_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> classOrInterfaceModifier24 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "classOrInterfaceModifiers");
		DebugLocation(102, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 6)) { return retval; }

			// JavaJava.g3:103:5: ( ( classOrInterfaceModifier )* )
			DebugEnterAlt(1);
			// JavaJava.g3:103:9: ( classOrInterfaceModifier )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(103, 9);
			// JavaJava.g3:103:9: ( classOrInterfaceModifier )*
			try { DebugEnterSubRule(13);
			while (true)
			{
				int alt13=2;
				try { DebugEnterDecision(13, false);
				int LA13_1 = input.LA(1);

				if ((LA13_1==54))
				{
					int LA13_2 = input.LA(2);

					if ((LA13_2==Identifier))
					{
						alt13 = 1;
					}


				}
				else if ((LA13_1==59||LA13_1==74||(LA13_1>=89 && LA13_1<=91)||(LA13_1>=94 && LA13_1<=95)))
				{
					alt13 = 1;
				}


				} finally { DebugExitDecision(13); }
				switch ( alt13 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:103:9: classOrInterfaceModifier
					{
					DebugLocation(103, 9);
					PushFollow(Follow._classOrInterfaceModifier_in_classOrInterfaceModifiers300);
					classOrInterfaceModifier24=classOrInterfaceModifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceModifier24.Tree);

					}
					break;

				default:
					goto loop13;
				}
			}

			loop13:
				;

			} finally { DebugExitSubRule(13); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceModifiers", 6);
			LeaveRule("classOrInterfaceModifiers", 6);
			LeaveRule_classOrInterfaceModifiers();
			if (state.backtracking > 0) { Memoize(input, 6, classOrInterfaceModifiers_StartIndex); }

		}
		DebugLocation(104, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceModifiers"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceModifiers"

	partial void EnterRule_classOrInterfaceModifier();
	partial void LeaveRule_classOrInterfaceModifier();
	// $ANTLR start "classOrInterfaceModifier"
	// JavaJava.g3:106:1: classOrInterfaceModifier : ( annotation | 'public' | 'protected' | 'private' | 'abstract' | 'static' | 'final' | 'strictfp' );
	[GrammarRule("classOrInterfaceModifier")]
	private AstParserRuleReturnScope<object, IToken> classOrInterfaceModifier()
	{
		EnterRule_classOrInterfaceModifier();
		EnterRule("classOrInterfaceModifier", 7);
		TraceIn("classOrInterfaceModifier", 7);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceModifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal26 = default(IToken);
		IToken string_literal27 = default(IToken);
		IToken string_literal28 = default(IToken);
		IToken string_literal29 = default(IToken);
		IToken string_literal30 = default(IToken);
		IToken string_literal31 = default(IToken);
		IToken string_literal32 = default(IToken);
		AstParserRuleReturnScope<object, IToken> annotation25 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal26_tree = default(object);
		object string_literal27_tree = default(object);
		object string_literal28_tree = default(object);
		object string_literal29_tree = default(object);
		object string_literal30_tree = default(object);
		object string_literal31_tree = default(object);
		object string_literal32_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classOrInterfaceModifier");
		DebugLocation(106, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 7)) { return retval; }

			// JavaJava.g3:107:5: ( annotation | 'public' | 'protected' | 'private' | 'abstract' | 'static' | 'final' | 'strictfp' )
			int alt14=8;
			try { DebugEnterDecision(14, false);
			switch (input.LA(1))
			{
			case 54:
				{
				alt14 = 1;
				}
				break;
			case 91:
				{
				alt14 = 2;
				}
				break;
			case 90:
				{
				alt14 = 3;
				}
				break;
			case 89:
				{
				alt14 = 4;
				}
				break;
			case 59:
				{
				alt14 = 5;
				}
				break;
			case 94:
				{
				alt14 = 6;
				}
				break;
			case 74:
				{
				alt14 = 7;
				}
				break;
			case 95:
				{
				alt14 = 8;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 14, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(14); }
			switch (alt14)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:107:9: annotation
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(107, 9);
				PushFollow(Follow._annotation_in_classOrInterfaceModifier320);
				annotation25=annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotation25.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:108:9: 'public'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(108, 9);
				string_literal26=(IToken)Match(input,91,Follow._91_in_classOrInterfaceModifier333); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal26_tree = (object)adaptor.Create(string_literal26);
				adaptor.AddChild(root_0, string_literal26_tree);
				}
				DebugLocation(108, 22);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("public");
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:109:9: 'protected'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(109, 9);
				string_literal27=(IToken)Match(input,90,Follow._90_in_classOrInterfaceModifier349); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal27_tree = (object)adaptor.Create(string_literal27);
				adaptor.AddChild(root_0, string_literal27_tree);
				}
				DebugLocation(109, 22);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("protected");
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:110:9: 'private'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(110, 9);
				string_literal28=(IToken)Match(input,89,Follow._89_in_classOrInterfaceModifier362); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal28_tree = (object)adaptor.Create(string_literal28);
				adaptor.AddChild(root_0, string_literal28_tree);
				}
				DebugLocation(110, 22);
				if (state.backtracking == 0)
				{
					keywordCount++; JavaMetrics.UniqueKeywords.Add("private");
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:111:9: 'abstract'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(111, 9);
				string_literal29=(IToken)Match(input,59,Follow._59_in_classOrInterfaceModifier377); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal29_tree = (object)adaptor.Create(string_literal29);
				adaptor.AddChild(root_0, string_literal29_tree);
				}
				DebugLocation(111, 22);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("abstract");
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:112:9: 'static'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(112, 9);
				string_literal30=(IToken)Match(input,94,Follow._94_in_classOrInterfaceModifier391); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal30_tree = (object)adaptor.Create(string_literal30);
				adaptor.AddChild(root_0, string_literal30_tree);
				}
				DebugLocation(112, 22);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("static");
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// JavaJava.g3:113:9: 'final'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(113, 9);
				string_literal31=(IToken)Match(input,74,Follow._74_in_classOrInterfaceModifier407); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal31_tree = (object)adaptor.Create(string_literal31);
				adaptor.AddChild(root_0, string_literal31_tree);
				}
				DebugLocation(113, 22);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("final");
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// JavaJava.g3:114:9: 'strictfp'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(114, 9);
				string_literal32=(IToken)Match(input,95,Follow._95_in_classOrInterfaceModifier424); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal32_tree = (object)adaptor.Create(string_literal32);
				adaptor.AddChild(root_0, string_literal32_tree);
				}
				DebugLocation(114, 22);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("strictfp");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceModifier", 7);
			LeaveRule("classOrInterfaceModifier", 7);
			LeaveRule_classOrInterfaceModifier();
			if (state.backtracking > 0) { Memoize(input, 7, classOrInterfaceModifier_StartIndex); }

		}
		DebugLocation(115, 4);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceModifier"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceModifier"

	partial void EnterRule_modifiers();
	partial void LeaveRule_modifiers();
	// $ANTLR start "modifiers"
	// JavaJava.g3:117:1: modifiers : ( modifier )* ;
	[GrammarRule("modifiers")]
	private AstParserRuleReturnScope<object, IToken> modifiers()
	{
		EnterRule_modifiers();
		EnterRule("modifiers", 8);
		TraceIn("modifiers", 8);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int modifiers_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> modifier33 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "modifiers");
		DebugLocation(117, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 8)) { return retval; }

			// JavaJava.g3:118:5: ( ( modifier )* )
			DebugEnterAlt(1);
			// JavaJava.g3:118:9: ( modifier )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(118, 9);
			// JavaJava.g3:118:9: ( modifier )*
			try { DebugEnterSubRule(15);
			while (true)
			{
				int alt15=2;
				try { DebugEnterDecision(15, false);
				int LA15_1 = input.LA(1);

				if ((LA15_1==54))
				{
					int LA15_2 = input.LA(2);

					if ((LA15_2==Identifier))
					{
						alt15 = 1;
					}


				}
				else if ((LA15_1==59||LA15_1==74||LA15_1==85||(LA15_1>=89 && LA15_1<=91)||(LA15_1>=94 && LA15_1<=95)||LA15_1==98||LA15_1==102||LA15_1==106))
				{
					alt15 = 1;
				}


				} finally { DebugExitDecision(15); }
				switch ( alt15 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:118:9: modifier
					{
					DebugLocation(118, 9);
					PushFollow(Follow._modifier_in_modifiers447);
					modifier33=modifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, modifier33.Tree);

					}
					break;

				default:
					goto loop15;
				}
			}

			loop15:
				;

			} finally { DebugExitSubRule(15); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifiers", 8);
			LeaveRule("modifiers", 8);
			LeaveRule_modifiers();
			if (state.backtracking > 0) { Memoize(input, 8, modifiers_StartIndex); }

		}
		DebugLocation(119, 4);
		} finally { DebugExitRule(GrammarFileName, "modifiers"); }
		return retval;

	}
	// $ANTLR end "modifiers"

	partial void EnterRule_classDeclaration();
	partial void LeaveRule_classDeclaration();
	// $ANTLR start "classDeclaration"
	// JavaJava.g3:121:1: classDeclaration : ( normalClassDeclaration | enumDeclaration );
	[GrammarRule("classDeclaration")]
	private AstParserRuleReturnScope<object, IToken> classDeclaration()
	{
		EnterRule_classDeclaration();
		EnterRule("classDeclaration", 9);
		TraceIn("classDeclaration", 9);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> normalClassDeclaration34 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> enumDeclaration35 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "classDeclaration");
		DebugLocation(121, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 9)) { return retval; }

			// JavaJava.g3:122:5: ( normalClassDeclaration | enumDeclaration )
			int alt16=2;
			try { DebugEnterDecision(16, false);
			int LA16_1 = input.LA(1);

			if ((LA16_1==66))
			{
				alt16 = 1;
			}
			else if ((LA16_1==ENUM))
			{
				alt16 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 16, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(16); }
			switch (alt16)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:122:9: normalClassDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(122, 9);
				PushFollow(Follow._normalClassDeclaration_in_classDeclaration467);
				normalClassDeclaration34=normalClassDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalClassDeclaration34.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:123:9: enumDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(123, 9);
				PushFollow(Follow._enumDeclaration_in_classDeclaration477);
				enumDeclaration35=enumDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumDeclaration35.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classDeclaration", 9);
			LeaveRule("classDeclaration", 9);
			LeaveRule_classDeclaration();
			if (state.backtracking > 0) { Memoize(input, 9, classDeclaration_StartIndex); }

		}
		DebugLocation(124, 4);
		} finally { DebugExitRule(GrammarFileName, "classDeclaration"); }
		return retval;

	}
	// $ANTLR end "classDeclaration"

	partial void EnterRule_normalClassDeclaration();
	partial void LeaveRule_normalClassDeclaration();
	// $ANTLR start "normalClassDeclaration"
	// JavaJava.g3:126:1: normalClassDeclaration : 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody ;
	[GrammarRule("normalClassDeclaration")]
	private AstParserRuleReturnScope<object, IToken> normalClassDeclaration()
	{
		EnterRule_normalClassDeclaration();
		EnterRule("normalClassDeclaration", 10);
		TraceIn("normalClassDeclaration", 10);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int normalClassDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal36 = default(IToken);
		IToken Identifier37 = default(IToken);
		IToken string_literal39 = default(IToken);
		IToken string_literal41 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeParameters38 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type40 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeList42 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classBody43 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal36_tree = default(object);
		object Identifier37_tree = default(object);
		object string_literal39_tree = default(object);
		object string_literal41_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalClassDeclaration");
		DebugLocation(126, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 10)) { return retval; }

			// JavaJava.g3:127:5: ( 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody )
			DebugEnterAlt(1);
			// JavaJava.g3:127:9: 'class' Identifier ( typeParameters )? ( 'extends' type )? ( 'implements' typeList )? classBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(127, 9);
			string_literal36=(IToken)Match(input,66,Follow._66_in_normalClassDeclaration500); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal36_tree = (object)adaptor.Create(string_literal36);
			adaptor.AddChild(root_0, string_literal36_tree);
			}
			DebugLocation(127, 17);
			Identifier37=(IToken)Match(input,Identifier,Follow._Identifier_in_normalClassDeclaration502); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier37_tree = (object)adaptor.Create(Identifier37);
			adaptor.AddChild(root_0, Identifier37_tree);
			}
			DebugLocation(127, 28);
			if (state.backtracking == 0)
			{
				 className=(Identifier37!=null?Identifier37.Text:default(string)); classCount++;
			}
			DebugLocation(127, 72);
			if (state.backtracking == 0)
			{
				keywordCount++; JavaMetrics.UniqueKeywords.Add("class"); id((Identifier37!=null?Identifier37.Text:default(string)));
			}
			DebugLocation(127, 153);
			// JavaJava.g3:127:153: ( typeParameters )?
			int alt17=2;
			try { DebugEnterSubRule(17);
			try { DebugEnterDecision(17, false);
			int LA17_1 = input.LA(1);

			if ((LA17_1==49))
			{
				alt17 = 1;
			}
			} finally { DebugExitDecision(17); }
			switch (alt17)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:127:153: typeParameters
				{
				DebugLocation(127, 153);
				PushFollow(Follow._typeParameters_in_normalClassDeclaration507);
				typeParameters38=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters38.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(17); }

			DebugLocation(128, 9);
			// JavaJava.g3:128:9: ( 'extends' type )?
			int alt18=2;
			try { DebugEnterSubRule(18);
			try { DebugEnterDecision(18, false);
			int LA18_1 = input.LA(1);

			if ((LA18_1==72))
			{
				alt18 = 1;
			}
			} finally { DebugExitDecision(18); }
			switch (alt18)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:128:10: 'extends' type
				{
				DebugLocation(128, 10);
				string_literal39=(IToken)Match(input,72,Follow._72_in_normalClassDeclaration519); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal39_tree = (object)adaptor.Create(string_literal39);
				adaptor.AddChild(root_0, string_literal39_tree);
				}
				DebugLocation(128, 20);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("extends");
				}
				DebugLocation(128, 79);
				PushFollow(Follow._type_in_normalClassDeclaration522);
				type40=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type40.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(18); }

			DebugLocation(129, 9);
			// JavaJava.g3:129:9: ( 'implements' typeList )?
			int alt19=2;
			try { DebugEnterSubRule(19);
			try { DebugEnterDecision(19, false);
			int LA19_1 = input.LA(1);

			if ((LA19_1==79))
			{
				alt19 = 1;
			}
			} finally { DebugExitDecision(19); }
			switch (alt19)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:129:10: 'implements' typeList
				{
				DebugLocation(129, 10);
				string_literal41=(IToken)Match(input,79,Follow._79_in_normalClassDeclaration536); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal41_tree = (object)adaptor.Create(string_literal41);
				adaptor.AddChild(root_0, string_literal41_tree);
				}
				DebugLocation(129, 23);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("implements");
				}
				DebugLocation(129, 86);
				PushFollow(Follow._typeList_in_normalClassDeclaration540);
				typeList42=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList42.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(19); }

			DebugLocation(130, 9);
			PushFollow(Follow._classBody_in_normalClassDeclaration553);
			classBody43=classBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, classBody43.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalClassDeclaration", 10);
			LeaveRule("normalClassDeclaration", 10);
			LeaveRule_normalClassDeclaration();
			if (state.backtracking > 0) { Memoize(input, 10, normalClassDeclaration_StartIndex); }

		}
		DebugLocation(131, 4);
		} finally { DebugExitRule(GrammarFileName, "normalClassDeclaration"); }
		return retval;

	}
	// $ANTLR end "normalClassDeclaration"

	partial void EnterRule_typeParameters();
	partial void LeaveRule_typeParameters();
	// $ANTLR start "typeParameters"
	// JavaJava.g3:133:1: typeParameters : '<' typeParameter ( ',' typeParameter )* '>' ;
	[GrammarRule("typeParameters")]
	private AstParserRuleReturnScope<object, IToken> typeParameters()
	{
		EnterRule_typeParameters();
		EnterRule("typeParameters", 11);
		TraceIn("typeParameters", 11);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeParameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal44 = default(IToken);
		IToken char_literal46 = default(IToken);
		IToken char_literal48 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeParameter45 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeParameter47 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal44_tree = default(object);
		object char_literal46_tree = default(object);
		object char_literal48_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeParameters");
		DebugLocation(133, 8);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 11)) { return retval; }

			// JavaJava.g3:134:5: ( '<' typeParameter ( ',' typeParameter )* '>' )
			DebugEnterAlt(1);
			// JavaJava.g3:134:9: '<' typeParameter ( ',' typeParameter )* '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(134, 9);
			char_literal44=(IToken)Match(input,49,Follow._49_in_typeParameters576); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal44_tree = (object)adaptor.Create(char_literal44);
			adaptor.AddChild(root_0, char_literal44_tree);
			}
			DebugLocation(134, 12);
			if (state.backtracking == 0)
			{
				s("<");
			}
			DebugLocation(134, 22);
			PushFollow(Follow._typeParameter_in_typeParameters579);
			typeParameter45=typeParameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameter45.Tree);
			DebugLocation(134, 36);
			// JavaJava.g3:134:36: ( ',' typeParameter )*
			try { DebugEnterSubRule(20);
			while (true)
			{
				int alt20=2;
				try { DebugEnterDecision(20, false);
				int LA20_1 = input.LA(1);

				if ((LA20_1==39))
				{
					alt20 = 1;
				}


				} finally { DebugExitDecision(20); }
				switch ( alt20 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:134:37: ',' typeParameter
					{
					DebugLocation(134, 37);
					char_literal46=(IToken)Match(input,39,Follow._39_in_typeParameters582); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal46_tree = (object)adaptor.Create(char_literal46);
					adaptor.AddChild(root_0, char_literal46_tree);
					}
					DebugLocation(134, 40);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(134, 50);
					PushFollow(Follow._typeParameter_in_typeParameters585);
					typeParameter47=typeParameter();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameter47.Tree);

					}
					break;

				default:
					goto loop20;
				}
			}

			loop20:
				;

			} finally { DebugExitSubRule(20); }

			DebugLocation(134, 66);
			char_literal48=(IToken)Match(input,52,Follow._52_in_typeParameters589); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal48_tree = (object)adaptor.Create(char_literal48);
			adaptor.AddChild(root_0, char_literal48_tree);
			}
			DebugLocation(134, 70);
			if (state.backtracking == 0)
			{
				s(">");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeParameters", 11);
			LeaveRule("typeParameters", 11);
			LeaveRule_typeParameters();
			if (state.backtracking > 0) { Memoize(input, 11, typeParameters_StartIndex); }

		}
		DebugLocation(135, 8);
		} finally { DebugExitRule(GrammarFileName, "typeParameters"); }
		return retval;

	}
	// $ANTLR end "typeParameters"

	partial void EnterRule_typeParameter();
	partial void LeaveRule_typeParameter();
	// $ANTLR start "typeParameter"
	// JavaJava.g3:137:1: typeParameter : Identifier ( 'extends' typeBound )? ;
	[GrammarRule("typeParameter")]
	private AstParserRuleReturnScope<object, IToken> typeParameter()
	{
		EnterRule_typeParameter();
		EnterRule("typeParameter", 12);
		TraceIn("typeParameter", 12);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeParameter_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier49 = default(IToken);
		IToken string_literal50 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeBound51 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier49_tree = default(object);
		object string_literal50_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeParameter");
		DebugLocation(137, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 12)) { return retval; }

			// JavaJava.g3:138:5: ( Identifier ( 'extends' typeBound )? )
			DebugEnterAlt(1);
			// JavaJava.g3:138:9: Identifier ( 'extends' typeBound )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(138, 9);
			Identifier49=(IToken)Match(input,Identifier,Follow._Identifier_in_typeParameter614); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier49_tree = (object)adaptor.Create(Identifier49);
			adaptor.AddChild(root_0, Identifier49_tree);
			}
			DebugLocation(138, 19);
			// JavaJava.g3:138:19: ( 'extends' typeBound )?
			int alt21=2;
			try { DebugEnterSubRule(21);
			try { DebugEnterDecision(21, false);
			int LA21_1 = input.LA(1);

			if ((LA21_1==72))
			{
				alt21 = 1;
			}
			} finally { DebugExitDecision(21); }
			switch (alt21)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:138:20: 'extends' typeBound
				{
				DebugLocation(138, 20);
				string_literal50=(IToken)Match(input,72,Follow._72_in_typeParameter616); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal50_tree = (object)adaptor.Create(string_literal50);
				adaptor.AddChild(root_0, string_literal50_tree);
				}
				DebugLocation(138, 29);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("extends");
				}
				DebugLocation(138, 89);
				PushFollow(Follow._typeBound_in_typeParameter619);
				typeBound51=typeBound();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeBound51.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(21); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeParameter", 12);
			LeaveRule("typeParameter", 12);
			LeaveRule_typeParameter();
			if (state.backtracking > 0) { Memoize(input, 12, typeParameter_StartIndex); }

		}
		DebugLocation(139, 4);
		} finally { DebugExitRule(GrammarFileName, "typeParameter"); }
		return retval;

	}
	// $ANTLR end "typeParameter"

	partial void EnterRule_typeBound();
	partial void LeaveRule_typeBound();
	// $ANTLR start "typeBound"
	// JavaJava.g3:141:1: typeBound : type ( '&' type )* ;
	[GrammarRule("typeBound")]
	private AstParserRuleReturnScope<object, IToken> typeBound()
	{
		EnterRule_typeBound();
		EnterRule("typeBound", 13);
		TraceIn("typeBound", 13);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeBound_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal53 = default(IToken);
		AstParserRuleReturnScope<object, IToken> type52 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type54 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal53_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeBound");
		DebugLocation(141, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 13)) { return retval; }

			// JavaJava.g3:142:5: ( type ( '&' type )* )
			DebugEnterAlt(1);
			// JavaJava.g3:142:9: type ( '&' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(142, 9);
			PushFollow(Follow._type_in_typeBound648);
			type52=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type52.Tree);
			DebugLocation(142, 14);
			// JavaJava.g3:142:14: ( '&' type )*
			try { DebugEnterSubRule(22);
			while (true)
			{
				int alt22=2;
				try { DebugEnterDecision(22, false);
				int LA22_1 = input.LA(1);

				if ((LA22_1==30))
				{
					alt22 = 1;
				}


				} finally { DebugExitDecision(22); }
				switch ( alt22 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:142:15: '&' type
					{
					DebugLocation(142, 15);
					char_literal53=(IToken)Match(input,30,Follow._30_in_typeBound651); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal53_tree = (object)adaptor.Create(char_literal53);
					adaptor.AddChild(root_0, char_literal53_tree);
					}
					DebugLocation(142, 19);
					PushFollow(Follow._type_in_typeBound653);
					type54=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type54.Tree);

					}
					break;

				default:
					goto loop22;
				}
			}

			loop22:
				;

			} finally { DebugExitSubRule(22); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeBound", 13);
			LeaveRule("typeBound", 13);
			LeaveRule_typeBound();
			if (state.backtracking > 0) { Memoize(input, 13, typeBound_StartIndex); }

		}
		DebugLocation(143, 4);
		} finally { DebugExitRule(GrammarFileName, "typeBound"); }
		return retval;

	}
	// $ANTLR end "typeBound"

	partial void EnterRule_enumDeclaration();
	partial void LeaveRule_enumDeclaration();
	// $ANTLR start "enumDeclaration"
	// JavaJava.g3:145:1: enumDeclaration : ENUM Identifier ( 'implements' typeList )? enumBody ;
	[GrammarRule("enumDeclaration")]
	private AstParserRuleReturnScope<object, IToken> enumDeclaration()
	{
		EnterRule_enumDeclaration();
		EnterRule("enumDeclaration", 14);
		TraceIn("enumDeclaration", 14);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int enumDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken ENUM55 = default(IToken);
		IToken Identifier56 = default(IToken);
		IToken string_literal57 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeList58 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> enumBody59 = default(AstParserRuleReturnScope<object, IToken>);

		object ENUM55_tree = default(object);
		object Identifier56_tree = default(object);
		object string_literal57_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumDeclaration");
		DebugLocation(145, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 14)) { return retval; }

			// JavaJava.g3:146:5: ( ENUM Identifier ( 'implements' typeList )? enumBody )
			DebugEnterAlt(1);
			// JavaJava.g3:146:9: ENUM Identifier ( 'implements' typeList )? enumBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(146, 9);
			ENUM55=(IToken)Match(input,ENUM,Follow._ENUM_in_enumDeclaration674); if (state.failed) return retval;
			if (state.backtracking == 0) {
			ENUM55_tree = (object)adaptor.Create(ENUM55);
			adaptor.AddChild(root_0, ENUM55_tree);
			}
			DebugLocation(146, 14);
			Identifier56=(IToken)Match(input,Identifier,Follow._Identifier_in_enumDeclaration676); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier56_tree = (object)adaptor.Create(Identifier56);
			adaptor.AddChild(root_0, Identifier56_tree);
			}
			DebugLocation(146, 25);
			// JavaJava.g3:146:25: ( 'implements' typeList )?
			int alt23=2;
			try { DebugEnterSubRule(23);
			try { DebugEnterDecision(23, false);
			int LA23_1 = input.LA(1);

			if ((LA23_1==79))
			{
				alt23 = 1;
			}
			} finally { DebugExitDecision(23); }
			switch (alt23)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:146:26: 'implements' typeList
				{
				DebugLocation(146, 26);
				string_literal57=(IToken)Match(input,79,Follow._79_in_enumDeclaration679); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal57_tree = (object)adaptor.Create(string_literal57);
				adaptor.AddChild(root_0, string_literal57_tree);
				}
				DebugLocation(146, 39);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("implements");
				}
				DebugLocation(146, 102);
				PushFollow(Follow._typeList_in_enumDeclaration683);
				typeList58=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList58.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(23); }

			DebugLocation(146, 113);
			PushFollow(Follow._enumBody_in_enumDeclaration687);
			enumBody59=enumBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enumBody59.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumDeclaration", 14);
			LeaveRule("enumDeclaration", 14);
			LeaveRule_enumDeclaration();
			if (state.backtracking > 0) { Memoize(input, 14, enumDeclaration_StartIndex); }

		}
		DebugLocation(147, 4);
		} finally { DebugExitRule(GrammarFileName, "enumDeclaration"); }
		return retval;

	}
	// $ANTLR end "enumDeclaration"

	partial void EnterRule_enumBody();
	partial void LeaveRule_enumBody();
	// $ANTLR start "enumBody"
	// JavaJava.g3:149:1: enumBody : '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' ;
	[GrammarRule("enumBody")]
	private AstParserRuleReturnScope<object, IToken> enumBody()
	{
		EnterRule_enumBody();
		EnterRule("enumBody", 15);
		TraceIn("enumBody", 15);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int enumBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal60 = default(IToken);
		IToken char_literal62 = default(IToken);
		IToken char_literal64 = default(IToken);
		AstParserRuleReturnScope<object, IToken> enumConstants61 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> enumBodyDeclarations63 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal60_tree = default(object);
		object char_literal62_tree = default(object);
		object char_literal64_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumBody");
		DebugLocation(149, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 15)) { return retval; }

			// JavaJava.g3:150:5: ( '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:150:9: '{' ( enumConstants )? ( ',' )? ( enumBodyDeclarations )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(150, 9);
			char_literal60=(IToken)Match(input,108,Follow._108_in_enumBody706); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal60_tree = (object)adaptor.Create(char_literal60);
			adaptor.AddChild(root_0, char_literal60_tree);
			}
			DebugLocation(150, 13);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(150, 23);
			// JavaJava.g3:150:23: ( enumConstants )?
			int alt24=2;
			try { DebugEnterSubRule(24);
			try { DebugEnterDecision(24, false);
			int LA24_1 = input.LA(1);

			if ((LA24_1==Identifier||LA24_1==54))
			{
				alt24 = 1;
			}
			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:150:23: enumConstants
				{
				DebugLocation(150, 23);
				PushFollow(Follow._enumConstants_in_enumBody710);
				enumConstants61=enumConstants();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstants61.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(24); }

			DebugLocation(150, 38);
			// JavaJava.g3:150:38: ( ',' )?
			int alt25=2;
			try { DebugEnterSubRule(25);
			try { DebugEnterDecision(25, false);
			int LA25_1 = input.LA(1);

			if ((LA25_1==39))
			{
				alt25 = 1;
			}
			} finally { DebugExitDecision(25); }
			switch (alt25)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:150:38: ','
				{
				DebugLocation(150, 38);
				char_literal62=(IToken)Match(input,39,Follow._39_in_enumBody713); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal62_tree = (object)adaptor.Create(char_literal62);
				adaptor.AddChild(root_0, char_literal62_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(25); }

			DebugLocation(150, 43);
			// JavaJava.g3:150:43: ( enumBodyDeclarations )?
			int alt26=2;
			try { DebugEnterSubRule(26);
			try { DebugEnterDecision(26, false);
			int LA26_1 = input.LA(1);

			if ((LA26_1==48))
			{
				alt26 = 1;
			}
			} finally { DebugExitDecision(26); }
			switch (alt26)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:150:43: enumBodyDeclarations
				{
				DebugLocation(150, 43);
				PushFollow(Follow._enumBodyDeclarations_in_enumBody716);
				enumBodyDeclarations63=enumBodyDeclarations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumBodyDeclarations63.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(26); }

			DebugLocation(150, 65);
			char_literal64=(IToken)Match(input,112,Follow._112_in_enumBody719); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal64_tree = (object)adaptor.Create(char_literal64);
			adaptor.AddChild(root_0, char_literal64_tree);
			}
			DebugLocation(150, 69);
			if (state.backtracking == 0)
			{
				s("}");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumBody", 15);
			LeaveRule("enumBody", 15);
			LeaveRule_enumBody();
			if (state.backtracking > 0) { Memoize(input, 15, enumBody_StartIndex); }

		}
		DebugLocation(151, 4);
		} finally { DebugExitRule(GrammarFileName, "enumBody"); }
		return retval;

	}
	// $ANTLR end "enumBody"

	partial void EnterRule_enumConstants();
	partial void LeaveRule_enumConstants();
	// $ANTLR start "enumConstants"
	// JavaJava.g3:153:1: enumConstants : enumConstant ( ',' enumConstant )* ;
	[GrammarRule("enumConstants")]
	private AstParserRuleReturnScope<object, IToken> enumConstants()
	{
		EnterRule_enumConstants();
		EnterRule("enumConstants", 16);
		TraceIn("enumConstants", 16);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int enumConstants_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal66 = default(IToken);
		AstParserRuleReturnScope<object, IToken> enumConstant65 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> enumConstant67 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal66_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumConstants");
		DebugLocation(153, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 16)) { return retval; }

			// JavaJava.g3:154:5: ( enumConstant ( ',' enumConstant )* )
			DebugEnterAlt(1);
			// JavaJava.g3:154:9: enumConstant ( ',' enumConstant )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(154, 9);
			PushFollow(Follow._enumConstant_in_enumConstants740);
			enumConstant65=enumConstant();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstant65.Tree);
			DebugLocation(154, 22);
			// JavaJava.g3:154:22: ( ',' enumConstant )*
			try { DebugEnterSubRule(27);
			while (true)
			{
				int alt27=2;
				try { DebugEnterDecision(27, false);
				int LA27_1 = input.LA(1);

				if ((LA27_1==39))
				{
					int LA27_2 = input.LA(2);

					if ((LA27_2==Identifier||LA27_2==54))
					{
						alt27 = 1;
					}


				}


				} finally { DebugExitDecision(27); }
				switch ( alt27 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:154:23: ',' enumConstant
					{
					DebugLocation(154, 23);
					char_literal66=(IToken)Match(input,39,Follow._39_in_enumConstants743); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal66_tree = (object)adaptor.Create(char_literal66);
					adaptor.AddChild(root_0, char_literal66_tree);
					}
					DebugLocation(154, 27);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(154, 37);
					PushFollow(Follow._enumConstant_in_enumConstants747);
					enumConstant67=enumConstant();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstant67.Tree);

					}
					break;

				default:
					goto loop27;
				}
			}

			loop27:
				;

			} finally { DebugExitSubRule(27); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumConstants", 16);
			LeaveRule("enumConstants", 16);
			LeaveRule_enumConstants();
			if (state.backtracking > 0) { Memoize(input, 16, enumConstants_StartIndex); }

		}
		DebugLocation(155, 4);
		} finally { DebugExitRule(GrammarFileName, "enumConstants"); }
		return retval;

	}
	// $ANTLR end "enumConstants"

	partial void EnterRule_enumConstant();
	partial void LeaveRule_enumConstant();
	// $ANTLR start "enumConstant"
	// JavaJava.g3:157:1: enumConstant : ( annotations )? Identifier ( arguments )? ( classBody )? ;
	[GrammarRule("enumConstant")]
	private AstParserRuleReturnScope<object, IToken> enumConstant()
	{
		EnterRule_enumConstant();
		EnterRule("enumConstant", 17);
		TraceIn("enumConstant", 17);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int enumConstant_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier69 = default(IToken);
		AstParserRuleReturnScope<object, IToken> annotations68 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arguments70 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classBody71 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier69_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumConstant");
		DebugLocation(157, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 17)) { return retval; }

			// JavaJava.g3:158:5: ( ( annotations )? Identifier ( arguments )? ( classBody )? )
			DebugEnterAlt(1);
			// JavaJava.g3:158:9: ( annotations )? Identifier ( arguments )? ( classBody )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(158, 9);
			// JavaJava.g3:158:9: ( annotations )?
			int alt28=2;
			try { DebugEnterSubRule(28);
			try { DebugEnterDecision(28, false);
			int LA28_1 = input.LA(1);

			if ((LA28_1==54))
			{
				alt28 = 1;
			}
			} finally { DebugExitDecision(28); }
			switch (alt28)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:158:9: annotations
				{
				DebugLocation(158, 9);
				PushFollow(Follow._annotations_in_enumConstant772);
				annotations68=annotations();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotations68.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(28); }

			DebugLocation(158, 22);
			Identifier69=(IToken)Match(input,Identifier,Follow._Identifier_in_enumConstant775); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier69_tree = (object)adaptor.Create(Identifier69);
			adaptor.AddChild(root_0, Identifier69_tree);
			}
			DebugLocation(158, 33);
			// JavaJava.g3:158:33: ( arguments )?
			int alt29=2;
			try { DebugEnterSubRule(29);
			try { DebugEnterDecision(29, false);
			int LA29_1 = input.LA(1);

			if ((LA29_1==32))
			{
				alt29 = 1;
			}
			} finally { DebugExitDecision(29); }
			switch (alt29)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:158:33: arguments
				{
				DebugLocation(158, 33);
				PushFollow(Follow._arguments_in_enumConstant777);
				arguments70=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments70.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(29); }

			DebugLocation(158, 44);
			// JavaJava.g3:158:44: ( classBody )?
			int alt30=2;
			try { DebugEnterSubRule(30);
			try { DebugEnterDecision(30, false);
			int LA30_1 = input.LA(1);

			if ((LA30_1==108))
			{
				alt30 = 1;
			}
			} finally { DebugExitDecision(30); }
			switch (alt30)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:158:44: classBody
				{
				DebugLocation(158, 44);
				PushFollow(Follow._classBody_in_enumConstant780);
				classBody71=classBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classBody71.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(30); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumConstant", 17);
			LeaveRule("enumConstant", 17);
			LeaveRule_enumConstant();
			if (state.backtracking > 0) { Memoize(input, 17, enumConstant_StartIndex); }

		}
		DebugLocation(159, 4);
		} finally { DebugExitRule(GrammarFileName, "enumConstant"); }
		return retval;

	}
	// $ANTLR end "enumConstant"

	partial void EnterRule_enumBodyDeclarations();
	partial void LeaveRule_enumBodyDeclarations();
	// $ANTLR start "enumBodyDeclarations"
	// JavaJava.g3:161:1: enumBodyDeclarations : ';' ( classBodyDeclaration )* ;
	[GrammarRule("enumBodyDeclarations")]
	private AstParserRuleReturnScope<object, IToken> enumBodyDeclarations()
	{
		EnterRule_enumBodyDeclarations();
		EnterRule("enumBodyDeclarations", 18);
		TraceIn("enumBodyDeclarations", 18);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int enumBodyDeclarations_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal72 = default(IToken);
		AstParserRuleReturnScope<object, IToken> classBodyDeclaration73 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal72_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumBodyDeclarations");
		DebugLocation(161, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 18)) { return retval; }

			// JavaJava.g3:162:5: ( ';' ( classBodyDeclaration )* )
			DebugEnterAlt(1);
			// JavaJava.g3:162:9: ';' ( classBodyDeclaration )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(162, 9);
			char_literal72=(IToken)Match(input,48,Follow._48_in_enumBodyDeclarations804); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal72_tree = (object)adaptor.Create(char_literal72);
			adaptor.AddChild(root_0, char_literal72_tree);
			}
			DebugLocation(162, 13);
			// JavaJava.g3:162:13: ( classBodyDeclaration )*
			try { DebugEnterSubRule(31);
			while (true)
			{
				int alt31=2;
				try { DebugEnterDecision(31, false);
				int LA31_1 = input.LA(1);

				if ((LA31_1==ENUM||LA31_1==Identifier||(LA31_1>=48 && LA31_1<=49)||LA31_1==54||(LA31_1>=59 && LA31_1<=60)||LA31_1==62||(LA31_1>=65 && LA31_1<=66)||LA31_1==70||LA31_1==74||LA31_1==76||(LA31_1>=82 && LA31_1<=85)||(LA31_1>=89 && LA31_1<=91)||(LA31_1>=93 && LA31_1<=95)||LA31_1==98||LA31_1==102||(LA31_1>=105 && LA31_1<=106)||LA31_1==108))
				{
					alt31 = 1;
				}


				} finally { DebugExitDecision(31); }
				switch ( alt31 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:162:14: classBodyDeclaration
					{
					DebugLocation(162, 14);
					PushFollow(Follow._classBodyDeclaration_in_enumBodyDeclarations807);
					classBodyDeclaration73=classBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classBodyDeclaration73.Tree);

					}
					break;

				default:
					goto loop31;
				}
			}

			loop31:
				;

			} finally { DebugExitSubRule(31); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumBodyDeclarations", 18);
			LeaveRule("enumBodyDeclarations", 18);
			LeaveRule_enumBodyDeclarations();
			if (state.backtracking > 0) { Memoize(input, 18, enumBodyDeclarations_StartIndex); }

		}
		DebugLocation(163, 4);
		} finally { DebugExitRule(GrammarFileName, "enumBodyDeclarations"); }
		return retval;

	}
	// $ANTLR end "enumBodyDeclarations"

	partial void EnterRule_interfaceDeclaration();
	partial void LeaveRule_interfaceDeclaration();
	// $ANTLR start "interfaceDeclaration"
	// JavaJava.g3:165:1: interfaceDeclaration : ( normalInterfaceDeclaration | annotationTypeDeclaration );
	[GrammarRule("interfaceDeclaration")]
	private AstParserRuleReturnScope<object, IToken> interfaceDeclaration()
	{
		EnterRule_interfaceDeclaration();
		EnterRule("interfaceDeclaration", 19);
		TraceIn("interfaceDeclaration", 19);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> normalInterfaceDeclaration74 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> annotationTypeDeclaration75 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "interfaceDeclaration");
		DebugLocation(165, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 19)) { return retval; }

			// JavaJava.g3:166:5: ( normalInterfaceDeclaration | annotationTypeDeclaration )
			int alt32=2;
			try { DebugEnterDecision(32, false);
			int LA32_1 = input.LA(1);

			if ((LA32_1==83))
			{
				alt32 = 1;
			}
			else if ((LA32_1==54))
			{
				alt32 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 32, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(32); }
			switch (alt32)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:166:9: normalInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(166, 9);
				PushFollow(Follow._normalInterfaceDeclaration_in_interfaceDeclaration832);
				normalInterfaceDeclaration74=normalInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalInterfaceDeclaration74.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:167:9: annotationTypeDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(167, 9);
				PushFollow(Follow._annotationTypeDeclaration_in_interfaceDeclaration842);
				annotationTypeDeclaration75=annotationTypeDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeDeclaration75.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceDeclaration", 19);
			LeaveRule("interfaceDeclaration", 19);
			LeaveRule_interfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 19, interfaceDeclaration_StartIndex); }

		}
		DebugLocation(168, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceDeclaration"

	partial void EnterRule_normalInterfaceDeclaration();
	partial void LeaveRule_normalInterfaceDeclaration();
	// $ANTLR start "normalInterfaceDeclaration"
	// JavaJava.g3:170:1: normalInterfaceDeclaration : 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody ;
	[GrammarRule("normalInterfaceDeclaration")]
	private AstParserRuleReturnScope<object, IToken> normalInterfaceDeclaration()
	{
		EnterRule_normalInterfaceDeclaration();
		EnterRule("normalInterfaceDeclaration", 20);
		TraceIn("normalInterfaceDeclaration", 20);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int normalInterfaceDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal76 = default(IToken);
		IToken Identifier77 = default(IToken);
		IToken string_literal79 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeParameters78 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeList80 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceBody81 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal76_tree = default(object);
		object Identifier77_tree = default(object);
		object string_literal79_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "normalInterfaceDeclaration");
		DebugLocation(170, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 20)) { return retval; }

			// JavaJava.g3:171:5: ( 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody )
			DebugEnterAlt(1);
			// JavaJava.g3:171:9: 'interface' Identifier ( typeParameters )? ( 'extends' typeList )? interfaceBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(171, 9);
			string_literal76=(IToken)Match(input,83,Follow._83_in_normalInterfaceDeclaration865); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal76_tree = (object)adaptor.Create(string_literal76);
			adaptor.AddChild(root_0, string_literal76_tree);
			}
			DebugLocation(171, 21);
			if (state.backtracking == 0)
			{
				keywordCount++;JavaMetrics.UniqueKeywords.Add("interface");
			}
			DebugLocation(171, 83);
			Identifier77=(IToken)Match(input,Identifier,Follow._Identifier_in_normalInterfaceDeclaration869); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier77_tree = (object)adaptor.Create(Identifier77);
			adaptor.AddChild(root_0, Identifier77_tree);
			}
			DebugLocation(171, 94);
			if (state.backtracking == 0)
			{
				id((Identifier77!=null?Identifier77.Text:default(string)));
			}
			DebugLocation(171, 118);
			// JavaJava.g3:171:118: ( typeParameters )?
			int alt33=2;
			try { DebugEnterSubRule(33);
			try { DebugEnterDecision(33, false);
			int LA33_1 = input.LA(1);

			if ((LA33_1==49))
			{
				alt33 = 1;
			}
			} finally { DebugExitDecision(33); }
			switch (alt33)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:171:118: typeParameters
				{
				DebugLocation(171, 118);
				PushFollow(Follow._typeParameters_in_normalInterfaceDeclaration873);
				typeParameters78=typeParameters();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters78.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(33); }

			DebugLocation(171, 134);
			// JavaJava.g3:171:134: ( 'extends' typeList )?
			int alt34=2;
			try { DebugEnterSubRule(34);
			try { DebugEnterDecision(34, false);
			int LA34_1 = input.LA(1);

			if ((LA34_1==72))
			{
				alt34 = 1;
			}
			} finally { DebugExitDecision(34); }
			switch (alt34)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:171:135: 'extends' typeList
				{
				DebugLocation(171, 135);
				string_literal79=(IToken)Match(input,72,Follow._72_in_normalInterfaceDeclaration877); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal79_tree = (object)adaptor.Create(string_literal79);
				adaptor.AddChild(root_0, string_literal79_tree);
				}
				DebugLocation(171, 144);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("extends");
				}
				DebugLocation(171, 204);
				PushFollow(Follow._typeList_in_normalInterfaceDeclaration880);
				typeList80=typeList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeList80.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(34); }

			DebugLocation(171, 215);
			PushFollow(Follow._interfaceBody_in_normalInterfaceDeclaration884);
			interfaceBody81=interfaceBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceBody81.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("normalInterfaceDeclaration", 20);
			LeaveRule("normalInterfaceDeclaration", 20);
			LeaveRule_normalInterfaceDeclaration();
			if (state.backtracking > 0) { Memoize(input, 20, normalInterfaceDeclaration_StartIndex); }

		}
		DebugLocation(172, 4);
		} finally { DebugExitRule(GrammarFileName, "normalInterfaceDeclaration"); }
		return retval;

	}
	// $ANTLR end "normalInterfaceDeclaration"

	partial void EnterRule_typeList();
	partial void LeaveRule_typeList();
	// $ANTLR start "typeList"
	// JavaJava.g3:174:1: typeList : type ( ',' type )* ;
	[GrammarRule("typeList")]
	private AstParserRuleReturnScope<object, IToken> typeList()
	{
		EnterRule_typeList();
		EnterRule("typeList", 21);
		TraceIn("typeList", 21);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal83 = default(IToken);
		AstParserRuleReturnScope<object, IToken> type82 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type84 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal83_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeList");
		DebugLocation(174, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 21)) { return retval; }

			// JavaJava.g3:175:5: ( type ( ',' type )* )
			DebugEnterAlt(1);
			// JavaJava.g3:175:9: type ( ',' type )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(175, 9);
			PushFollow(Follow._type_in_typeList907);
			type82=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type82.Tree);
			DebugLocation(175, 14);
			// JavaJava.g3:175:14: ( ',' type )*
			try { DebugEnterSubRule(35);
			while (true)
			{
				int alt35=2;
				try { DebugEnterDecision(35, false);
				int LA35_1 = input.LA(1);

				if ((LA35_1==39))
				{
					alt35 = 1;
				}


				} finally { DebugExitDecision(35); }
				switch ( alt35 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:175:15: ',' type
					{
					DebugLocation(175, 15);
					char_literal83=(IToken)Match(input,39,Follow._39_in_typeList910); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal83_tree = (object)adaptor.Create(char_literal83);
					adaptor.AddChild(root_0, char_literal83_tree);
					}
					DebugLocation(175, 19);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(175, 29);
					PushFollow(Follow._type_in_typeList914);
					type84=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type84.Tree);

					}
					break;

				default:
					goto loop35;
				}
			}

			loop35:
				;

			} finally { DebugExitSubRule(35); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeList", 21);
			LeaveRule("typeList", 21);
			LeaveRule_typeList();
			if (state.backtracking > 0) { Memoize(input, 21, typeList_StartIndex); }

		}
		DebugLocation(176, 4);
		} finally { DebugExitRule(GrammarFileName, "typeList"); }
		return retval;

	}
	// $ANTLR end "typeList"

	partial void EnterRule_classBody();
	partial void LeaveRule_classBody();
	// $ANTLR start "classBody"
	// JavaJava.g3:178:1: classBody : '{' ( classBodyDeclaration )* '}' ;
	[GrammarRule("classBody")]
	private AstParserRuleReturnScope<object, IToken> classBody()
	{
		EnterRule_classBody();
		EnterRule("classBody", 22);
		TraceIn("classBody", 22);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal85 = default(IToken);
		IToken char_literal87 = default(IToken);
		AstParserRuleReturnScope<object, IToken> classBodyDeclaration86 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal85_tree = default(object);
		object char_literal87_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classBody");
		DebugLocation(178, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 22)) { return retval; }

			// JavaJava.g3:179:5: ( '{' ( classBodyDeclaration )* '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:179:9: '{' ( classBodyDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(179, 9);
			char_literal85=(IToken)Match(input,108,Follow._108_in_classBody939); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal85_tree = (object)adaptor.Create(char_literal85);
			adaptor.AddChild(root_0, char_literal85_tree);
			}
			DebugLocation(179, 12);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(179, 23);
			// JavaJava.g3:179:23: ( classBodyDeclaration )*
			try { DebugEnterSubRule(36);
			while (true)
			{
				int alt36=2;
				try { DebugEnterDecision(36, false);
				int LA36_1 = input.LA(1);

				if ((LA36_1==ENUM||LA36_1==Identifier||(LA36_1>=48 && LA36_1<=49)||LA36_1==54||(LA36_1>=59 && LA36_1<=60)||LA36_1==62||(LA36_1>=65 && LA36_1<=66)||LA36_1==70||LA36_1==74||LA36_1==76||(LA36_1>=82 && LA36_1<=85)||(LA36_1>=89 && LA36_1<=91)||(LA36_1>=93 && LA36_1<=95)||LA36_1==98||LA36_1==102||(LA36_1>=105 && LA36_1<=106)||LA36_1==108))
				{
					alt36 = 1;
				}


				} finally { DebugExitDecision(36); }
				switch ( alt36 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:179:23: classBodyDeclaration
					{
					DebugLocation(179, 23);
					PushFollow(Follow._classBodyDeclaration_in_classBody943);
					classBodyDeclaration86=classBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classBodyDeclaration86.Tree);

					}
					break;

				default:
					goto loop36;
				}
			}

			loop36:
				;

			} finally { DebugExitSubRule(36); }

			DebugLocation(179, 45);
			char_literal87=(IToken)Match(input,112,Follow._112_in_classBody946); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal87_tree = (object)adaptor.Create(char_literal87);
			adaptor.AddChild(root_0, char_literal87_tree);
			}
			DebugLocation(179, 48);
			if (state.backtracking == 0)
			{
				s("}");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classBody", 22);
			LeaveRule("classBody", 22);
			LeaveRule_classBody();
			if (state.backtracking > 0) { Memoize(input, 22, classBody_StartIndex); }

		}
		DebugLocation(180, 4);
		} finally { DebugExitRule(GrammarFileName, "classBody"); }
		return retval;

	}
	// $ANTLR end "classBody"

	partial void EnterRule_interfaceBody();
	partial void LeaveRule_interfaceBody();
	// $ANTLR start "interfaceBody"
	// JavaJava.g3:182:1: interfaceBody : '{' ( interfaceBodyDeclaration )* '}' ;
	[GrammarRule("interfaceBody")]
	private AstParserRuleReturnScope<object, IToken> interfaceBody()
	{
		EnterRule_interfaceBody();
		EnterRule("interfaceBody", 23);
		TraceIn("interfaceBody", 23);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal88 = default(IToken);
		IToken char_literal90 = default(IToken);
		AstParserRuleReturnScope<object, IToken> interfaceBodyDeclaration89 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal88_tree = default(object);
		object char_literal90_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceBody");
		DebugLocation(182, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 23)) { return retval; }

			// JavaJava.g3:183:5: ( '{' ( interfaceBodyDeclaration )* '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:183:9: '{' ( interfaceBodyDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(183, 9);
			char_literal88=(IToken)Match(input,108,Follow._108_in_interfaceBody970); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal88_tree = (object)adaptor.Create(char_literal88);
			adaptor.AddChild(root_0, char_literal88_tree);
			}
			DebugLocation(183, 12);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(183, 22);
			// JavaJava.g3:183:22: ( interfaceBodyDeclaration )*
			try { DebugEnterSubRule(37);
			while (true)
			{
				int alt37=2;
				try { DebugEnterDecision(37, false);
				int LA37_1 = input.LA(1);

				if ((LA37_1==ENUM||LA37_1==Identifier||(LA37_1>=48 && LA37_1<=49)||LA37_1==54||(LA37_1>=59 && LA37_1<=60)||LA37_1==62||(LA37_1>=65 && LA37_1<=66)||LA37_1==70||LA37_1==74||LA37_1==76||(LA37_1>=82 && LA37_1<=85)||(LA37_1>=89 && LA37_1<=91)||(LA37_1>=93 && LA37_1<=95)||LA37_1==98||LA37_1==102||(LA37_1>=105 && LA37_1<=106)))
				{
					alt37 = 1;
				}


				} finally { DebugExitDecision(37); }
				switch ( alt37 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:183:22: interfaceBodyDeclaration
					{
					DebugLocation(183, 22);
					PushFollow(Follow._interfaceBodyDeclaration_in_interfaceBody973);
					interfaceBodyDeclaration89=interfaceBodyDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceBodyDeclaration89.Tree);

					}
					break;

				default:
					goto loop37;
				}
			}

			loop37:
				;

			} finally { DebugExitSubRule(37); }

			DebugLocation(183, 48);
			char_literal90=(IToken)Match(input,112,Follow._112_in_interfaceBody976); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal90_tree = (object)adaptor.Create(char_literal90);
			adaptor.AddChild(root_0, char_literal90_tree);
			}
			DebugLocation(183, 51);
			if (state.backtracking == 0)
			{
				s("}");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceBody", 23);
			LeaveRule("interfaceBody", 23);
			LeaveRule_interfaceBody();
			if (state.backtracking > 0) { Memoize(input, 23, interfaceBody_StartIndex); }

		}
		DebugLocation(184, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceBody"); }
		return retval;

	}
	// $ANTLR end "interfaceBody"

	partial void EnterRule_classBodyDeclaration();
	partial void LeaveRule_classBodyDeclaration();
	// $ANTLR start "classBodyDeclaration"
	// JavaJava.g3:186:1: classBodyDeclaration : ( ';' | ( 'static' )? block | modifiers memberDecl );
	[GrammarRule("classBodyDeclaration")]
	private AstParserRuleReturnScope<object, IToken> classBodyDeclaration()
	{
		EnterRule_classBodyDeclaration();
		EnterRule("classBodyDeclaration", 24);
		TraceIn("classBodyDeclaration", 24);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classBodyDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal91 = default(IToken);
		IToken string_literal92 = default(IToken);
		AstParserRuleReturnScope<object, IToken> block93 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> modifiers94 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> memberDecl95 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal91_tree = default(object);
		object string_literal92_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classBodyDeclaration");
		DebugLocation(186, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 24)) { return retval; }

			// JavaJava.g3:187:5: ( ';' | ( 'static' )? block | modifiers memberDecl )
			int alt39=3;
			try { DebugEnterDecision(39, false);
			switch (input.LA(1))
			{
			case 48:
				{
				alt39 = 1;
				}
				break;
			case 94:
				{
				int LA39_2 = input.LA(2);

				if ((LA39_2==108))
				{
					alt39 = 2;
				}
				else if ((LA39_2==ENUM||LA39_2==Identifier||LA39_2==49||LA39_2==54||(LA39_2>=59 && LA39_2<=60)||LA39_2==62||(LA39_2>=65 && LA39_2<=66)||LA39_2==70||LA39_2==74||LA39_2==76||(LA39_2>=82 && LA39_2<=85)||(LA39_2>=89 && LA39_2<=91)||(LA39_2>=93 && LA39_2<=95)||LA39_2==98||LA39_2==102||(LA39_2>=105 && LA39_2<=106)))
				{
					alt39 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 108:
				{
				alt39 = 2;
				}
				break;
			case ENUM:
			case Identifier:
			case 49:
			case 54:
			case 59:
			case 60:
			case 62:
			case 65:
			case 66:
			case 70:
			case 74:
			case 76:
			case 82:
			case 83:
			case 84:
			case 85:
			case 89:
			case 90:
			case 91:
			case 93:
			case 95:
			case 98:
			case 102:
			case 105:
			case 106:
				{
				alt39 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 39, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(39); }
			switch (alt39)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:187:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(187, 9);
				char_literal91=(IToken)Match(input,48,Follow._48_in_classBodyDeclaration996); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal91_tree = (object)adaptor.Create(char_literal91);
				adaptor.AddChild(root_0, char_literal91_tree);
				}
				DebugLocation(187, 13);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:188:9: ( 'static' )? block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(188, 9);
				// JavaJava.g3:188:9: ( 'static' )?
				int alt38=2;
				try { DebugEnterSubRule(38);
				try { DebugEnterDecision(38, false);
				int LA38_1 = input.LA(1);

				if ((LA38_1==94))
				{
					alt38 = 1;
				}
				} finally { DebugExitDecision(38); }
				switch (alt38)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:188:9: 'static'
					{
					DebugLocation(188, 9);
					string_literal92=(IToken)Match(input,94,Follow._94_in_classBodyDeclaration1008); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal92_tree = (object)adaptor.Create(string_literal92);
					adaptor.AddChild(root_0, string_literal92_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(38); }

				DebugLocation(188, 19);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("static");
				}
				DebugLocation(188, 80);
				PushFollow(Follow._block_in_classBodyDeclaration1015);
				block93=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block93.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:189:9: modifiers memberDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(189, 9);
				PushFollow(Follow._modifiers_in_classBodyDeclaration1025);
				modifiers94=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers94.Tree);
				DebugLocation(189, 19);
				PushFollow(Follow._memberDecl_in_classBodyDeclaration1027);
				memberDecl95=memberDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, memberDecl95.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classBodyDeclaration", 24);
			LeaveRule("classBodyDeclaration", 24);
			LeaveRule_classBodyDeclaration();
			if (state.backtracking > 0) { Memoize(input, 24, classBodyDeclaration_StartIndex); }

		}
		DebugLocation(190, 4);
		} finally { DebugExitRule(GrammarFileName, "classBodyDeclaration"); }
		return retval;

	}
	// $ANTLR end "classBodyDeclaration"

	partial void EnterRule_memberDecl();
	partial void LeaveRule_memberDecl();
	// $ANTLR start "memberDecl"
	// JavaJava.g3:192:1: memberDecl : ( genericMethodOrConstructorDecl | memberDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration );
	[GrammarRule("memberDecl")]
	private AstParserRuleReturnScope<object, IToken> memberDecl()
	{
		EnterRule_memberDecl();
		EnterRule("memberDecl", 25);
		TraceIn("memberDecl", 25);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int memberDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal98 = default(IToken);
		IToken Identifier99 = default(IToken);
		IToken Identifier101 = default(IToken);
		AstParserRuleReturnScope<object, IToken> genericMethodOrConstructorDecl96 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> memberDeclaration97 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> voidMethodDeclaratorRest100 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> constructorDeclaratorRest102 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceDeclaration103 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classDeclaration104 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal98_tree = default(object);
		object Identifier99_tree = default(object);
		object Identifier101_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "memberDecl");
		DebugLocation(192, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 25)) { return retval; }

			// JavaJava.g3:193:5: ( genericMethodOrConstructorDecl | memberDeclaration | 'void' Identifier voidMethodDeclaratorRest | Identifier constructorDeclaratorRest | interfaceDeclaration | classDeclaration )
			int alt40=6;
			try { DebugEnterDecision(40, false);
			switch (input.LA(1))
			{
			case 49:
				{
				alt40 = 1;
				}
				break;
			case Identifier:
				{
				int LA40_2 = input.LA(2);

				if ((LA40_2==Identifier||LA40_2==43||LA40_2==49||LA40_2==55))
				{
					alt40 = 2;
				}
				else if ((LA40_2==32))
				{
					alt40 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 40, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 60:
			case 62:
			case 65:
			case 70:
			case 76:
			case 82:
			case 84:
			case 93:
				{
				alt40 = 2;
				}
				break;
			case 105:
				{
				alt40 = 3;
				}
				break;
			case 54:
			case 83:
				{
				alt40 = 5;
				}
				break;
			case ENUM:
			case 66:
				{
				alt40 = 6;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 40, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(40); }
			switch (alt40)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:193:9: genericMethodOrConstructorDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(193, 9);
				if (state.backtracking == 0)
				{
					inMethod=true;
				}
				DebugLocation(193, 26);
				PushFollow(Follow._genericMethodOrConstructorDecl_in_memberDecl1052);
				genericMethodOrConstructorDecl96=genericMethodOrConstructorDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, genericMethodOrConstructorDecl96.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:194:9: memberDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(194, 9);
				PushFollow(Follow._memberDeclaration_in_memberDecl1062);
				memberDeclaration97=memberDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, memberDeclaration97.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:195:9: 'void' Identifier voidMethodDeclaratorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(195, 9);
				if (state.backtracking == 0)
				{
					inMethod=true;
				}
				DebugLocation(195, 26);
				string_literal98=(IToken)Match(input,105,Follow._105_in_memberDecl1074); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal98_tree = (object)adaptor.Create(string_literal98);
				adaptor.AddChild(root_0, string_literal98_tree);
				}
				DebugLocation(195, 32);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("void");
				}
				DebugLocation(195, 89);
				Identifier99=(IToken)Match(input,Identifier,Follow._Identifier_in_memberDecl1077); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier99_tree = (object)adaptor.Create(Identifier99);
				adaptor.AddChild(root_0, Identifier99_tree);
				}
				DebugLocation(195, 100);
				if (state.backtracking == 0)
				{
					id((Identifier99!=null?Identifier99.Text:default(string))); methodName = (Identifier99!=null?Identifier99.Text:default(string));
				}
				DebugLocation(195, 156);
				PushFollow(Follow._voidMethodDeclaratorRest_in_memberDecl1082);
				voidMethodDeclaratorRest100=voidMethodDeclaratorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, voidMethodDeclaratorRest100.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:196:9: Identifier constructorDeclaratorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(196, 9);
				if (state.backtracking == 0)
				{
					inMethod=true;
				}
				DebugLocation(196, 26);
				Identifier101=(IToken)Match(input,Identifier,Follow._Identifier_in_memberDecl1094); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier101_tree = (object)adaptor.Create(Identifier101);
				adaptor.AddChild(root_0, Identifier101_tree);
				}
				DebugLocation(196, 37);
				if (state.backtracking == 0)
				{
					{id((Identifier101!=null?Identifier101.Text:default(string)));} methodName = (Identifier101!=null?Identifier101.Text:default(string));
				}
				DebugLocation(196, 95);
				PushFollow(Follow._constructorDeclaratorRest_in_memberDecl1099);
				constructorDeclaratorRest102=constructorDeclaratorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructorDeclaratorRest102.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:197:9: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(197, 9);
				PushFollow(Follow._interfaceDeclaration_in_memberDecl1109);
				interfaceDeclaration103=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration103.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:198:9: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(198, 9);
				PushFollow(Follow._classDeclaration_in_memberDecl1119);
				classDeclaration104=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration104.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("memberDecl", 25);
			LeaveRule("memberDecl", 25);
			LeaveRule_memberDecl();
			if (state.backtracking > 0) { Memoize(input, 25, memberDecl_StartIndex); }

		}
		DebugLocation(199, 4);
		} finally { DebugExitRule(GrammarFileName, "memberDecl"); }
		return retval;

	}
	// $ANTLR end "memberDecl"

	partial void EnterRule_memberDeclaration();
	partial void LeaveRule_memberDeclaration();
	// $ANTLR start "memberDeclaration"
	// JavaJava.g3:201:1: memberDeclaration : type ( methodDeclaration | fieldDeclaration ) ;
	[GrammarRule("memberDeclaration")]
	private AstParserRuleReturnScope<object, IToken> memberDeclaration()
	{
		EnterRule_memberDeclaration();
		EnterRule("memberDeclaration", 26);
		TraceIn("memberDeclaration", 26);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int memberDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> type105 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> methodDeclaration106 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> fieldDeclaration107 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "memberDeclaration");
		DebugLocation(201, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 26)) { return retval; }

			// JavaJava.g3:202:5: ( type ( methodDeclaration | fieldDeclaration ) )
			DebugEnterAlt(1);
			// JavaJava.g3:202:9: type ( methodDeclaration | fieldDeclaration )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(202, 9);
			PushFollow(Follow._type_in_memberDeclaration1142);
			type105=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type105.Tree);
			DebugLocation(202, 14);
			// JavaJava.g3:202:14: ( methodDeclaration | fieldDeclaration )
			int alt41=2;
			try { DebugEnterSubRule(41);
			try { DebugEnterDecision(41, false);
			int LA41_1 = input.LA(1);

			if ((LA41_1==Identifier))
			{
				int LA41_2 = input.LA(2);

				if ((LA41_2==32))
				{
					alt41 = 1;
				}
				else if ((LA41_2==39||LA41_2==48||LA41_2==50||LA41_2==55))
				{
					alt41 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 41, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 41, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(41); }
			switch (alt41)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:202:15: methodDeclaration
				{
				DebugLocation(202, 15);
				if (state.backtracking == 0)
				{
					inMethod=true;
				}
				DebugLocation(202, 32);
				PushFollow(Follow._methodDeclaration_in_memberDeclaration1147);
				methodDeclaration106=methodDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, methodDeclaration106.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:202:54: fieldDeclaration
				{
				DebugLocation(202, 54);
				if (state.backtracking == 0)
				{
					inMethod=false;
				}
				DebugLocation(202, 72);
				PushFollow(Follow._fieldDeclaration_in_memberDeclaration1155);
				fieldDeclaration107=fieldDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, fieldDeclaration107.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(41); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("memberDeclaration", 26);
			LeaveRule("memberDeclaration", 26);
			LeaveRule_memberDeclaration();
			if (state.backtracking > 0) { Memoize(input, 26, memberDeclaration_StartIndex); }

		}
		DebugLocation(203, 4);
		} finally { DebugExitRule(GrammarFileName, "memberDeclaration"); }
		return retval;

	}
	// $ANTLR end "memberDeclaration"

	partial void EnterRule_genericMethodOrConstructorDecl();
	partial void LeaveRule_genericMethodOrConstructorDecl();
	// $ANTLR start "genericMethodOrConstructorDecl"
	// JavaJava.g3:205:1: genericMethodOrConstructorDecl : typeParameters genericMethodOrConstructorRest ;
	[GrammarRule("genericMethodOrConstructorDecl")]
	private AstParserRuleReturnScope<object, IToken> genericMethodOrConstructorDecl()
	{
		EnterRule_genericMethodOrConstructorDecl();
		EnterRule("genericMethodOrConstructorDecl", 27);
		TraceIn("genericMethodOrConstructorDecl", 27);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int genericMethodOrConstructorDecl_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> typeParameters108 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> genericMethodOrConstructorRest109 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "genericMethodOrConstructorDecl");
		DebugLocation(205, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 27)) { return retval; }

			// JavaJava.g3:206:5: ( typeParameters genericMethodOrConstructorRest )
			DebugEnterAlt(1);
			// JavaJava.g3:206:9: typeParameters genericMethodOrConstructorRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(206, 9);
			PushFollow(Follow._typeParameters_in_genericMethodOrConstructorDecl1175);
			typeParameters108=typeParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters108.Tree);
			DebugLocation(206, 24);
			PushFollow(Follow._genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl1177);
			genericMethodOrConstructorRest109=genericMethodOrConstructorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, genericMethodOrConstructorRest109.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("genericMethodOrConstructorDecl", 27);
			LeaveRule("genericMethodOrConstructorDecl", 27);
			LeaveRule_genericMethodOrConstructorDecl();
			if (state.backtracking > 0) { Memoize(input, 27, genericMethodOrConstructorDecl_StartIndex); }

		}
		DebugLocation(207, 4);
		} finally { DebugExitRule(GrammarFileName, "genericMethodOrConstructorDecl"); }
		return retval;

	}
	// $ANTLR end "genericMethodOrConstructorDecl"

	partial void EnterRule_genericMethodOrConstructorRest();
	partial void LeaveRule_genericMethodOrConstructorRest();
	// $ANTLR start "genericMethodOrConstructorRest"
	// JavaJava.g3:209:1: genericMethodOrConstructorRest : ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest );
	[GrammarRule("genericMethodOrConstructorRest")]
	private AstParserRuleReturnScope<object, IToken> genericMethodOrConstructorRest()
	{
		EnterRule_genericMethodOrConstructorRest();
		EnterRule("genericMethodOrConstructorRest", 28);
		TraceIn("genericMethodOrConstructorRest", 28);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int genericMethodOrConstructorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal111 = default(IToken);
		IToken Identifier112 = default(IToken);
		IToken Identifier114 = default(IToken);
		AstParserRuleReturnScope<object, IToken> type110 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> methodDeclaratorRest113 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> constructorDeclaratorRest115 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal111_tree = default(object);
		object Identifier112_tree = default(object);
		object Identifier114_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "genericMethodOrConstructorRest");
		DebugLocation(209, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 28)) { return retval; }

			// JavaJava.g3:210:5: ( ( type | 'void' ) Identifier methodDeclaratorRest | Identifier constructorDeclaratorRest )
			int alt43=2;
			try { DebugEnterDecision(43, false);
			int LA43_1 = input.LA(1);

			if ((LA43_1==Identifier))
			{
				int LA43_2 = input.LA(2);

				if ((LA43_2==Identifier||LA43_2==43||LA43_2==49||LA43_2==55))
				{
					alt43 = 1;
				}
				else if ((LA43_2==32))
				{
					alt43 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 43, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA43_1==60||LA43_1==62||LA43_1==65||LA43_1==70||LA43_1==76||LA43_1==82||LA43_1==84||LA43_1==93||LA43_1==105))
			{
				alt43 = 1;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 43, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(43); }
			switch (alt43)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:210:9: ( type | 'void' ) Identifier methodDeclaratorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(210, 9);
				// JavaJava.g3:210:9: ( type | 'void' )
				int alt42=2;
				try { DebugEnterSubRule(42);
				try { DebugEnterDecision(42, false);
				int LA42_1 = input.LA(1);

				if ((LA42_1==Identifier||LA42_1==60||LA42_1==62||LA42_1==65||LA42_1==70||LA42_1==76||LA42_1==82||LA42_1==84||LA42_1==93))
				{
					alt42 = 1;
				}
				else if ((LA42_1==105))
				{
					alt42 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 42, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(42); }
				switch (alt42)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:210:10: type
					{
					DebugLocation(210, 10);
					PushFollow(Follow._type_in_genericMethodOrConstructorRest1201);
					type110=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type110.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:210:17: 'void'
					{
					DebugLocation(210, 17);
					string_literal111=(IToken)Match(input,105,Follow._105_in_genericMethodOrConstructorRest1205); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal111_tree = (object)adaptor.Create(string_literal111);
					adaptor.AddChild(root_0, string_literal111_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(42); }

				DebugLocation(210, 25);
				Identifier112=(IToken)Match(input,Identifier,Follow._Identifier_in_genericMethodOrConstructorRest1208); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier112_tree = (object)adaptor.Create(Identifier112);
				adaptor.AddChild(root_0, Identifier112_tree);
				}
				DebugLocation(210, 36);
				if (state.backtracking == 0)
				{
					if(primitive){id((Identifier112!=null?Identifier112.Text:default(string))); }
				}
				DebugLocation(210, 76);
				PushFollow(Follow._methodDeclaratorRest_in_genericMethodOrConstructorRest1212);
				methodDeclaratorRest113=methodDeclaratorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, methodDeclaratorRest113.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:211:9: Identifier constructorDeclaratorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(211, 9);
				Identifier114=(IToken)Match(input,Identifier,Follow._Identifier_in_genericMethodOrConstructorRest1222); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier114_tree = (object)adaptor.Create(Identifier114);
				adaptor.AddChild(root_0, Identifier114_tree);
				}
				DebugLocation(211, 20);
				if (state.backtracking == 0)
				{
					id((Identifier114!=null?Identifier114.Text:default(string))); methodName = (Identifier114!=null?Identifier114.Text:default(string));
				}
				DebugLocation(211, 75);
				PushFollow(Follow._constructorDeclaratorRest_in_genericMethodOrConstructorRest1226);
				constructorDeclaratorRest115=constructorDeclaratorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constructorDeclaratorRest115.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("genericMethodOrConstructorRest", 28);
			LeaveRule("genericMethodOrConstructorRest", 28);
			LeaveRule_genericMethodOrConstructorRest();
			if (state.backtracking > 0) { Memoize(input, 28, genericMethodOrConstructorRest_StartIndex); }

		}
		DebugLocation(212, 4);
		} finally { DebugExitRule(GrammarFileName, "genericMethodOrConstructorRest"); }
		return retval;

	}
	// $ANTLR end "genericMethodOrConstructorRest"

	partial void EnterRule_methodDeclaration();
	partial void LeaveRule_methodDeclaration();
	// $ANTLR start "methodDeclaration"
	// JavaJava.g3:214:1: methodDeclaration : Identifier methodDeclaratorRest ;
	[GrammarRule("methodDeclaration")]
	private AstParserRuleReturnScope<object, IToken> methodDeclaration()
	{
		EnterRule_methodDeclaration();
		EnterRule("methodDeclaration", 29);
		TraceIn("methodDeclaration", 29);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int methodDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier116 = default(IToken);
		AstParserRuleReturnScope<object, IToken> methodDeclaratorRest117 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier116_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "methodDeclaration");
		DebugLocation(214, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 29)) { return retval; }

			// JavaJava.g3:215:5: ( Identifier methodDeclaratorRest )
			DebugEnterAlt(1);
			// JavaJava.g3:215:9: Identifier methodDeclaratorRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(215, 9);
			Identifier116=(IToken)Match(input,Identifier,Follow._Identifier_in_methodDeclaration1245); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier116_tree = (object)adaptor.Create(Identifier116);
			adaptor.AddChild(root_0, Identifier116_tree);
			}
			DebugLocation(215, 20);
			if (state.backtracking == 0)
			{
				// Console.Write("Method=" + (Identifier116!=null?Identifier116.Text:default(string))); 
				                     inMethod = true;
				                     methodName = (Identifier116!=null?Identifier116.Text:default(string));
				                    // if(primitive){
				                         id((Identifier116!=null?Identifier116.Text:default(string)));
				                         primitive=false;
				                    // }
				                   
			}
			DebugLocation(222, 22);
			PushFollow(Follow._methodDeclaratorRest_in_methodDeclaration1249);
			methodDeclaratorRest117=methodDeclaratorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, methodDeclaratorRest117.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("methodDeclaration", 29);
			LeaveRule("methodDeclaration", 29);
			LeaveRule_methodDeclaration();
			if (state.backtracking > 0) { Memoize(input, 29, methodDeclaration_StartIndex); }

		}
		DebugLocation(223, 4);
		} finally { DebugExitRule(GrammarFileName, "methodDeclaration"); }
		return retval;

	}
	// $ANTLR end "methodDeclaration"

	partial void EnterRule_fieldDeclaration();
	partial void LeaveRule_fieldDeclaration();
	// $ANTLR start "fieldDeclaration"
	// JavaJava.g3:225:1: fieldDeclaration : variableDeclarators ';' ;
	[GrammarRule("fieldDeclaration")]
	private AstParserRuleReturnScope<object, IToken> fieldDeclaration()
	{
		EnterRule_fieldDeclaration();
		EnterRule("fieldDeclaration", 30);
		TraceIn("fieldDeclaration", 30);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int fieldDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal119 = default(IToken);
		AstParserRuleReturnScope<object, IToken> variableDeclarators118 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal119_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "fieldDeclaration");
		DebugLocation(225, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 30)) { return retval; }

			// JavaJava.g3:226:5: ( variableDeclarators ';' )
			DebugEnterAlt(1);
			// JavaJava.g3:226:8: variableDeclarators ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(226, 8);
			PushFollow(Follow._variableDeclarators_in_fieldDeclaration1267);
			variableDeclarators118=variableDeclarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarators118.Tree);
			DebugLocation(226, 28);
			char_literal119=(IToken)Match(input,48,Follow._48_in_fieldDeclaration1269); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal119_tree = (object)adaptor.Create(char_literal119);
			adaptor.AddChild(root_0, char_literal119_tree);
			}
			DebugLocation(226, 31);
			if (state.backtracking == 0)
			{
				primitive=false; inMethod=false; s(";");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("fieldDeclaration", 30);
			LeaveRule("fieldDeclaration", 30);
			LeaveRule_fieldDeclaration();
			if (state.backtracking > 0) { Memoize(input, 30, fieldDeclaration_StartIndex); }

		}
		DebugLocation(227, 4);
		} finally { DebugExitRule(GrammarFileName, "fieldDeclaration"); }
		return retval;

	}
	// $ANTLR end "fieldDeclaration"

	partial void EnterRule_interfaceBodyDeclaration();
	partial void LeaveRule_interfaceBodyDeclaration();
	// $ANTLR start "interfaceBodyDeclaration"
	// JavaJava.g3:229:1: interfaceBodyDeclaration : ( modifiers interfaceMemberDecl | ';' );
	[GrammarRule("interfaceBodyDeclaration")]
	private AstParserRuleReturnScope<object, IToken> interfaceBodyDeclaration()
	{
		EnterRule_interfaceBodyDeclaration();
		EnterRule("interfaceBodyDeclaration", 31);
		TraceIn("interfaceBodyDeclaration", 31);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceBodyDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal122 = default(IToken);
		AstParserRuleReturnScope<object, IToken> modifiers120 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceMemberDecl121 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal122_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceBodyDeclaration");
		DebugLocation(229, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 31)) { return retval; }

			// JavaJava.g3:230:5: ( modifiers interfaceMemberDecl | ';' )
			int alt44=2;
			try { DebugEnterDecision(44, false);
			int LA44_1 = input.LA(1);

			if ((LA44_1==ENUM||LA44_1==Identifier||LA44_1==49||LA44_1==54||(LA44_1>=59 && LA44_1<=60)||LA44_1==62||(LA44_1>=65 && LA44_1<=66)||LA44_1==70||LA44_1==74||LA44_1==76||(LA44_1>=82 && LA44_1<=85)||(LA44_1>=89 && LA44_1<=91)||(LA44_1>=93 && LA44_1<=95)||LA44_1==98||LA44_1==102||(LA44_1>=105 && LA44_1<=106)))
			{
				alt44 = 1;
			}
			else if ((LA44_1==48))
			{
				alt44 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 44, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(44); }
			switch (alt44)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:230:9: modifiers interfaceMemberDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(230, 9);
				PushFollow(Follow._modifiers_in_interfaceBodyDeclaration1297);
				modifiers120=modifiers();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers120.Tree);
				DebugLocation(230, 19);
				PushFollow(Follow._interfaceMemberDecl_in_interfaceBodyDeclaration1299);
				interfaceMemberDecl121=interfaceMemberDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceMemberDecl121.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:231:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(231, 9);
				char_literal122=(IToken)Match(input,48,Follow._48_in_interfaceBodyDeclaration1309); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal122_tree = (object)adaptor.Create(char_literal122);
				adaptor.AddChild(root_0, char_literal122_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceBodyDeclaration", 31);
			LeaveRule("interfaceBodyDeclaration", 31);
			LeaveRule_interfaceBodyDeclaration();
			if (state.backtracking > 0) { Memoize(input, 31, interfaceBodyDeclaration_StartIndex); }

		}
		DebugLocation(232, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceBodyDeclaration"); }
		return retval;

	}
	// $ANTLR end "interfaceBodyDeclaration"

	partial void EnterRule_interfaceMemberDecl();
	partial void LeaveRule_interfaceMemberDecl();
	// $ANTLR start "interfaceMemberDecl"
	// JavaJava.g3:234:1: interfaceMemberDecl : ( interfaceMethodOrFieldDecl | interfaceGenericMethodDecl | 'void' Identifier voidInterfaceMethodDeclaratorRest | interfaceDeclaration | classDeclaration );
	[GrammarRule("interfaceMemberDecl")]
	private AstParserRuleReturnScope<object, IToken> interfaceMemberDecl()
	{
		EnterRule_interfaceMemberDecl();
		EnterRule("interfaceMemberDecl", 32);
		TraceIn("interfaceMemberDecl", 32);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceMemberDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal125 = default(IToken);
		IToken Identifier126 = default(IToken);
		AstParserRuleReturnScope<object, IToken> interfaceMethodOrFieldDecl123 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceGenericMethodDecl124 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> voidInterfaceMethodDeclaratorRest127 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceDeclaration128 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classDeclaration129 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal125_tree = default(object);
		object Identifier126_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceMemberDecl");
		DebugLocation(234, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 32)) { return retval; }

			// JavaJava.g3:235:5: ( interfaceMethodOrFieldDecl | interfaceGenericMethodDecl | 'void' Identifier voidInterfaceMethodDeclaratorRest | interfaceDeclaration | classDeclaration )
			int alt45=5;
			try { DebugEnterDecision(45, false);
			switch (input.LA(1))
			{
			case Identifier:
			case 60:
			case 62:
			case 65:
			case 70:
			case 76:
			case 82:
			case 84:
			case 93:
				{
				alt45 = 1;
				}
				break;
			case 49:
				{
				alt45 = 2;
				}
				break;
			case 105:
				{
				alt45 = 3;
				}
				break;
			case 54:
			case 83:
				{
				alt45 = 4;
				}
				break;
			case ENUM:
			case 66:
				{
				alt45 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 45, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(45); }
			switch (alt45)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:235:9: interfaceMethodOrFieldDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(235, 9);
				PushFollow(Follow._interfaceMethodOrFieldDecl_in_interfaceMemberDecl1328);
				interfaceMethodOrFieldDecl123=interfaceMethodOrFieldDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceMethodOrFieldDecl123.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:236:9: interfaceGenericMethodDecl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(236, 9);
				PushFollow(Follow._interfaceGenericMethodDecl_in_interfaceMemberDecl1338);
				interfaceGenericMethodDecl124=interfaceGenericMethodDecl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceGenericMethodDecl124.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:237:9: 'void' Identifier voidInterfaceMethodDeclaratorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(237, 9);
				string_literal125=(IToken)Match(input,105,Follow._105_in_interfaceMemberDecl1348); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal125_tree = (object)adaptor.Create(string_literal125);
				adaptor.AddChild(root_0, string_literal125_tree);
				}
				DebugLocation(237, 15);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("void");
				}
				DebugLocation(237, 72);
				Identifier126=(IToken)Match(input,Identifier,Follow._Identifier_in_interfaceMemberDecl1351); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier126_tree = (object)adaptor.Create(Identifier126);
				adaptor.AddChild(root_0, Identifier126_tree);
				}
				DebugLocation(237, 83);
				if (state.backtracking == 0)
				{
					 id((Identifier126!=null?Identifier126.Text:default(string)));  methodName = (Identifier126!=null?Identifier126.Text:default(string));
				}
				DebugLocation(237, 140);
				PushFollow(Follow._voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl1355);
				voidInterfaceMethodDeclaratorRest127=voidInterfaceMethodDeclaratorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, voidInterfaceMethodDeclaratorRest127.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:238:9: interfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(238, 9);
				PushFollow(Follow._interfaceDeclaration_in_interfaceMemberDecl1365);
				interfaceDeclaration128=interfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceDeclaration128.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:239:9: classDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(239, 9);
				PushFollow(Follow._classDeclaration_in_interfaceMemberDecl1375);
				classDeclaration129=classDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classDeclaration129.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceMemberDecl", 32);
			LeaveRule("interfaceMemberDecl", 32);
			LeaveRule_interfaceMemberDecl();
			if (state.backtracking > 0) { Memoize(input, 32, interfaceMemberDecl_StartIndex); }

		}
		DebugLocation(240, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceMemberDecl"); }
		return retval;

	}
	// $ANTLR end "interfaceMemberDecl"

	partial void EnterRule_interfaceMethodOrFieldDecl();
	partial void LeaveRule_interfaceMethodOrFieldDecl();
	// $ANTLR start "interfaceMethodOrFieldDecl"
	// JavaJava.g3:242:1: interfaceMethodOrFieldDecl : type Identifier interfaceMethodOrFieldRest ;
	[GrammarRule("interfaceMethodOrFieldDecl")]
	private AstParserRuleReturnScope<object, IToken> interfaceMethodOrFieldDecl()
	{
		EnterRule_interfaceMethodOrFieldDecl();
		EnterRule("interfaceMethodOrFieldDecl", 33);
		TraceIn("interfaceMethodOrFieldDecl", 33);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceMethodOrFieldDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier131 = default(IToken);
		AstParserRuleReturnScope<object, IToken> type130 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceMethodOrFieldRest132 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier131_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceMethodOrFieldDecl");
		DebugLocation(242, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 33)) { return retval; }

			// JavaJava.g3:243:5: ( type Identifier interfaceMethodOrFieldRest )
			DebugEnterAlt(1);
			// JavaJava.g3:243:9: type Identifier interfaceMethodOrFieldRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(243, 9);
			PushFollow(Follow._type_in_interfaceMethodOrFieldDecl1398);
			type130=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type130.Tree);
			DebugLocation(243, 14);
			Identifier131=(IToken)Match(input,Identifier,Follow._Identifier_in_interfaceMethodOrFieldDecl1400); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier131_tree = (object)adaptor.Create(Identifier131);
			adaptor.AddChild(root_0, Identifier131_tree);
			}
			DebugLocation(243, 25);
			if (state.backtracking == 0)
			{
				 id((Identifier131!=null?Identifier131.Text:default(string)));
			}
			DebugLocation(243, 50);
			PushFollow(Follow._interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl1404);
			interfaceMethodOrFieldRest132=interfaceMethodOrFieldRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceMethodOrFieldRest132.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceMethodOrFieldDecl", 33);
			LeaveRule("interfaceMethodOrFieldDecl", 33);
			LeaveRule_interfaceMethodOrFieldDecl();
			if (state.backtracking > 0) { Memoize(input, 33, interfaceMethodOrFieldDecl_StartIndex); }

		}
		DebugLocation(244, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceMethodOrFieldDecl"); }
		return retval;

	}
	// $ANTLR end "interfaceMethodOrFieldDecl"

	partial void EnterRule_interfaceMethodOrFieldRest();
	partial void LeaveRule_interfaceMethodOrFieldRest();
	// $ANTLR start "interfaceMethodOrFieldRest"
	// JavaJava.g3:246:1: interfaceMethodOrFieldRest : ( constantDeclaratorsRest ';' | interfaceMethodDeclaratorRest );
	[GrammarRule("interfaceMethodOrFieldRest")]
	private AstParserRuleReturnScope<object, IToken> interfaceMethodOrFieldRest()
	{
		EnterRule_interfaceMethodOrFieldRest();
		EnterRule("interfaceMethodOrFieldRest", 34);
		TraceIn("interfaceMethodOrFieldRest", 34);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceMethodOrFieldRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal134 = default(IToken);
		AstParserRuleReturnScope<object, IToken> constantDeclaratorsRest133 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceMethodDeclaratorRest135 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal134_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceMethodOrFieldRest");
		DebugLocation(246, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 34)) { return retval; }

			// JavaJava.g3:247:5: ( constantDeclaratorsRest ';' | interfaceMethodDeclaratorRest )
			int alt46=2;
			try { DebugEnterDecision(46, false);
			int LA46_1 = input.LA(1);

			if ((LA46_1==50||LA46_1==55))
			{
				alt46 = 1;
			}
			else if ((LA46_1==32))
			{
				alt46 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 46, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(46); }
			switch (alt46)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:247:9: constantDeclaratorsRest ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(247, 9);
				PushFollow(Follow._constantDeclaratorsRest_in_interfaceMethodOrFieldRest1428);
				constantDeclaratorsRest133=constantDeclaratorsRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constantDeclaratorsRest133.Tree);
				DebugLocation(247, 33);
				char_literal134=(IToken)Match(input,48,Follow._48_in_interfaceMethodOrFieldRest1430); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal134_tree = (object)adaptor.Create(char_literal134);
				adaptor.AddChild(root_0, char_literal134_tree);
				}
				DebugLocation(247, 37);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:248:9: interfaceMethodDeclaratorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(248, 9);
				PushFollow(Follow._interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest1442);
				interfaceMethodDeclaratorRest135=interfaceMethodDeclaratorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceMethodDeclaratorRest135.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceMethodOrFieldRest", 34);
			LeaveRule("interfaceMethodOrFieldRest", 34);
			LeaveRule_interfaceMethodOrFieldRest();
			if (state.backtracking > 0) { Memoize(input, 34, interfaceMethodOrFieldRest_StartIndex); }

		}
		DebugLocation(249, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceMethodOrFieldRest"); }
		return retval;

	}
	// $ANTLR end "interfaceMethodOrFieldRest"

	partial void EnterRule_methodDeclaratorRest();
	partial void LeaveRule_methodDeclaratorRest();
	// $ANTLR start "methodDeclaratorRest"
	// JavaJava.g3:251:1: methodDeclaratorRest : formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' ) ;
	[GrammarRule("methodDeclaratorRest")]
	private AstParserRuleReturnScope<object, IToken> methodDeclaratorRest()
	{
		EnterRule_methodDeclaratorRest();
		EnterRule("methodDeclaratorRest", 35);
		TraceIn("methodDeclaratorRest", 35);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int methodDeclaratorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal137 = default(IToken);
		IToken char_literal138 = default(IToken);
		IToken string_literal139 = default(IToken);
		IToken char_literal142 = default(IToken);
		AstParserRuleReturnScope<object, IToken> formalParameters136 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> qualifiedNameList140 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> methodBody141 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal137_tree = default(object);
		object char_literal138_tree = default(object);
		object string_literal139_tree = default(object);
		object char_literal142_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "methodDeclaratorRest");
		DebugLocation(251, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 35)) { return retval; }

			// JavaJava.g3:252:5: ( formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' ) )
			DebugEnterAlt(1);
			// JavaJava.g3:252:9: formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ( methodBody | ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(252, 9);
			PushFollow(Follow._formalParameters_in_methodDeclaratorRest1465);
			formalParameters136=formalParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters136.Tree);
			DebugLocation(252, 26);
			// JavaJava.g3:252:26: ( '[' ']' )*
			try { DebugEnterSubRule(47);
			while (true)
			{
				int alt47=2;
				try { DebugEnterDecision(47, false);
				int LA47_1 = input.LA(1);

				if ((LA47_1==55))
				{
					alt47 = 1;
				}


				} finally { DebugExitDecision(47); }
				switch ( alt47 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:252:27: '[' ']'
					{
					DebugLocation(252, 27);
					char_literal137=(IToken)Match(input,55,Follow._55_in_methodDeclaratorRest1468); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal137_tree = (object)adaptor.Create(char_literal137);
					adaptor.AddChild(root_0, char_literal137_tree);
					}
					DebugLocation(252, 31);
					if (state.backtracking == 0)
					{
						s("[");
					}
					DebugLocation(252, 41);
					char_literal138=(IToken)Match(input,56,Follow._56_in_methodDeclaratorRest1472); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal138_tree = (object)adaptor.Create(char_literal138);
					adaptor.AddChild(root_0, char_literal138_tree);
					}
					DebugLocation(252, 44);
					if (state.backtracking == 0)
					{
						s("]");
					}

					}
					break;

				default:
					goto loop47;
				}
			}

			loop47:
				;

			} finally { DebugExitSubRule(47); }

			DebugLocation(253, 9);
			// JavaJava.g3:253:9: ( 'throws' qualifiedNameList )?
			int alt48=2;
			try { DebugEnterSubRule(48);
			try { DebugEnterDecision(48, false);
			int LA48_1 = input.LA(1);

			if ((LA48_1==101))
			{
				alt48 = 1;
			}
			} finally { DebugExitDecision(48); }
			switch (alt48)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:253:10: 'throws' qualifiedNameList
				{
				DebugLocation(253, 10);
				string_literal139=(IToken)Match(input,101,Follow._101_in_methodDeclaratorRest1486); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal139_tree = (object)adaptor.Create(string_literal139);
				adaptor.AddChild(root_0, string_literal139_tree);
				}
				DebugLocation(253, 19);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("throws");
				}
				DebugLocation(253, 78);
				PushFollow(Follow._qualifiedNameList_in_methodDeclaratorRest1490);
				qualifiedNameList140=qualifiedNameList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList140.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(48); }

			DebugLocation(254, 9);
			// JavaJava.g3:254:9: ( methodBody | ';' )
			int alt49=2;
			try { DebugEnterSubRule(49);
			try { DebugEnterDecision(49, false);
			int LA49_1 = input.LA(1);

			if ((LA49_1==108))
			{
				alt49 = 1;
			}
			else if ((LA49_1==48))
			{
				alt49 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 49, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(49); }
			switch (alt49)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:254:13: methodBody
				{
				DebugLocation(254, 13);
				PushFollow(Follow._methodBody_in_methodDeclaratorRest1506);
				methodBody141=methodBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, methodBody141.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:255:13: ';'
				{
				DebugLocation(255, 13);
				char_literal142=(IToken)Match(input,48,Follow._48_in_methodDeclaratorRest1520); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal142_tree = (object)adaptor.Create(char_literal142);
				adaptor.AddChild(root_0, char_literal142_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(49); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("methodDeclaratorRest", 35);
			LeaveRule("methodDeclaratorRest", 35);
			LeaveRule_methodDeclaratorRest();
			if (state.backtracking > 0) { Memoize(input, 35, methodDeclaratorRest_StartIndex); }

		}
		DebugLocation(257, 4);
		} finally { DebugExitRule(GrammarFileName, "methodDeclaratorRest"); }
		return retval;

	}
	// $ANTLR end "methodDeclaratorRest"

	partial void EnterRule_voidMethodDeclaratorRest();
	partial void LeaveRule_voidMethodDeclaratorRest();
	// $ANTLR start "voidMethodDeclaratorRest"
	// JavaJava.g3:259:1: voidMethodDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' ) ;
	[GrammarRule("voidMethodDeclaratorRest")]
	private AstParserRuleReturnScope<object, IToken> voidMethodDeclaratorRest()
	{
		EnterRule_voidMethodDeclaratorRest();
		EnterRule("voidMethodDeclaratorRest", 36);
		TraceIn("voidMethodDeclaratorRest", 36);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int voidMethodDeclaratorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal144 = default(IToken);
		IToken char_literal147 = default(IToken);
		AstParserRuleReturnScope<object, IToken> formalParameters143 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> qualifiedNameList145 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> methodBody146 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal144_tree = default(object);
		object char_literal147_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "voidMethodDeclaratorRest");
		DebugLocation(259, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 36)) { return retval; }

			// JavaJava.g3:260:5: ( formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' ) )
			DebugEnterAlt(1);
			// JavaJava.g3:260:9: formalParameters ( 'throws' qualifiedNameList )? ( methodBody | ';' )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(260, 9);
			PushFollow(Follow._formalParameters_in_voidMethodDeclaratorRest1553);
			formalParameters143=formalParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters143.Tree);
			DebugLocation(260, 26);
			// JavaJava.g3:260:26: ( 'throws' qualifiedNameList )?
			int alt50=2;
			try { DebugEnterSubRule(50);
			try { DebugEnterDecision(50, false);
			int LA50_1 = input.LA(1);

			if ((LA50_1==101))
			{
				alt50 = 1;
			}
			} finally { DebugExitDecision(50); }
			switch (alt50)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:260:27: 'throws' qualifiedNameList
				{
				DebugLocation(260, 27);
				string_literal144=(IToken)Match(input,101,Follow._101_in_voidMethodDeclaratorRest1556); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal144_tree = (object)adaptor.Create(string_literal144);
				adaptor.AddChild(root_0, string_literal144_tree);
				}
				DebugLocation(260, 35);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("throws");
				}
				DebugLocation(260, 94);
				PushFollow(Follow._qualifiedNameList_in_voidMethodDeclaratorRest1559);
				qualifiedNameList145=qualifiedNameList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList145.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(50); }

			DebugLocation(261, 9);
			// JavaJava.g3:261:9: ( methodBody | ';' )
			int alt51=2;
			try { DebugEnterSubRule(51);
			try { DebugEnterDecision(51, false);
			int LA51_1 = input.LA(1);

			if ((LA51_1==108))
			{
				alt51 = 1;
			}
			else if ((LA51_1==48))
			{
				alt51 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 51, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(51); }
			switch (alt51)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:261:13: methodBody
				{
				DebugLocation(261, 13);
				PushFollow(Follow._methodBody_in_voidMethodDeclaratorRest1575);
				methodBody146=methodBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, methodBody146.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:262:13: ';'
				{
				DebugLocation(262, 13);
				char_literal147=(IToken)Match(input,48,Follow._48_in_voidMethodDeclaratorRest1589); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal147_tree = (object)adaptor.Create(char_literal147);
				adaptor.AddChild(root_0, char_literal147_tree);
				}
				DebugLocation(262, 17);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;

			}
			} finally { DebugExitSubRule(51); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("voidMethodDeclaratorRest", 36);
			LeaveRule("voidMethodDeclaratorRest", 36);
			LeaveRule_voidMethodDeclaratorRest();
			if (state.backtracking > 0) { Memoize(input, 36, voidMethodDeclaratorRest_StartIndex); }

		}
		DebugLocation(264, 4);
		} finally { DebugExitRule(GrammarFileName, "voidMethodDeclaratorRest"); }
		return retval;

	}
	// $ANTLR end "voidMethodDeclaratorRest"

	partial void EnterRule_interfaceMethodDeclaratorRest();
	partial void LeaveRule_interfaceMethodDeclaratorRest();
	// $ANTLR start "interfaceMethodDeclaratorRest"
	// JavaJava.g3:266:1: interfaceMethodDeclaratorRest : formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' ;
	[GrammarRule("interfaceMethodDeclaratorRest")]
	private AstParserRuleReturnScope<object, IToken> interfaceMethodDeclaratorRest()
	{
		EnterRule_interfaceMethodDeclaratorRest();
		EnterRule("interfaceMethodDeclaratorRest", 37);
		TraceIn("interfaceMethodDeclaratorRest", 37);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceMethodDeclaratorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal149 = default(IToken);
		IToken char_literal150 = default(IToken);
		IToken string_literal151 = default(IToken);
		IToken char_literal153 = default(IToken);
		AstParserRuleReturnScope<object, IToken> formalParameters148 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> qualifiedNameList152 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal149_tree = default(object);
		object char_literal150_tree = default(object);
		object string_literal151_tree = default(object);
		object char_literal153_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceMethodDeclaratorRest");
		DebugLocation(266, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 37)) { return retval; }

			// JavaJava.g3:267:5: ( formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';' )
			DebugEnterAlt(1);
			// JavaJava.g3:267:8: formalParameters ( '[' ']' )* ( 'throws' qualifiedNameList )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(267, 8);
			PushFollow(Follow._formalParameters_in_interfaceMethodDeclaratorRest1623);
			formalParameters148=formalParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters148.Tree);
			DebugLocation(267, 25);
			// JavaJava.g3:267:25: ( '[' ']' )*
			try { DebugEnterSubRule(52);
			while (true)
			{
				int alt52=2;
				try { DebugEnterDecision(52, false);
				int LA52_1 = input.LA(1);

				if ((LA52_1==55))
				{
					alt52 = 1;
				}


				} finally { DebugExitDecision(52); }
				switch ( alt52 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:267:26: '[' ']'
					{
					DebugLocation(267, 26);
					char_literal149=(IToken)Match(input,55,Follow._55_in_interfaceMethodDeclaratorRest1626); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal149_tree = (object)adaptor.Create(char_literal149);
					adaptor.AddChild(root_0, char_literal149_tree);
					}
					DebugLocation(267, 30);
					if (state.backtracking == 0)
					{
						s("[");
					}
					DebugLocation(267, 40);
					char_literal150=(IToken)Match(input,56,Follow._56_in_interfaceMethodDeclaratorRest1630); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal150_tree = (object)adaptor.Create(char_literal150);
					adaptor.AddChild(root_0, char_literal150_tree);
					}
					DebugLocation(267, 44);
					if (state.backtracking == 0)
					{
						s("]");
					}

					}
					break;

				default:
					goto loop52;
				}
			}

			loop52:
				;

			} finally { DebugExitSubRule(52); }

			DebugLocation(267, 56);
			// JavaJava.g3:267:56: ( 'throws' qualifiedNameList )?
			int alt53=2;
			try { DebugEnterSubRule(53);
			try { DebugEnterDecision(53, false);
			int LA53_1 = input.LA(1);

			if ((LA53_1==101))
			{
				alt53 = 1;
			}
			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:267:57: 'throws' qualifiedNameList
				{
				DebugLocation(267, 57);
				string_literal151=(IToken)Match(input,101,Follow._101_in_interfaceMethodDeclaratorRest1637); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal151_tree = (object)adaptor.Create(string_literal151);
				adaptor.AddChild(root_0, string_literal151_tree);
				}
				DebugLocation(267, 65);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("throws");
				}
				DebugLocation(267, 124);
				PushFollow(Follow._qualifiedNameList_in_interfaceMethodDeclaratorRest1640);
				qualifiedNameList152=qualifiedNameList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList152.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(53); }

			DebugLocation(267, 144);
			char_literal153=(IToken)Match(input,48,Follow._48_in_interfaceMethodDeclaratorRest1644); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal153_tree = (object)adaptor.Create(char_literal153);
			adaptor.AddChild(root_0, char_literal153_tree);
			}
			DebugLocation(267, 148);
			if (state.backtracking == 0)
			{
				s(";");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceMethodDeclaratorRest", 37);
			LeaveRule("interfaceMethodDeclaratorRest", 37);
			LeaveRule_interfaceMethodDeclaratorRest();
			if (state.backtracking > 0) { Memoize(input, 37, interfaceMethodDeclaratorRest_StartIndex); }

		}
		DebugLocation(268, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceMethodDeclaratorRest"); }
		return retval;

	}
	// $ANTLR end "interfaceMethodDeclaratorRest"

	partial void EnterRule_interfaceGenericMethodDecl();
	partial void LeaveRule_interfaceGenericMethodDecl();
	// $ANTLR start "interfaceGenericMethodDecl"
	// JavaJava.g3:270:1: interfaceGenericMethodDecl : typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest ;
	[GrammarRule("interfaceGenericMethodDecl")]
	private AstParserRuleReturnScope<object, IToken> interfaceGenericMethodDecl()
	{
		EnterRule_interfaceGenericMethodDecl();
		EnterRule("interfaceGenericMethodDecl", 38);
		TraceIn("interfaceGenericMethodDecl", 38);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int interfaceGenericMethodDecl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal156 = default(IToken);
		IToken Identifier157 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeParameters154 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type155 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> interfaceMethodDeclaratorRest158 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal156_tree = default(object);
		object Identifier157_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "interfaceGenericMethodDecl");
		DebugLocation(270, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 38)) { return retval; }

			// JavaJava.g3:271:5: ( typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest )
			DebugEnterAlt(1);
			// JavaJava.g3:271:9: typeParameters ( type | 'void' ) Identifier interfaceMethodDeclaratorRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(271, 9);
			PushFollow(Follow._typeParameters_in_interfaceGenericMethodDecl1669);
			typeParameters154=typeParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeParameters154.Tree);
			DebugLocation(271, 24);
			// JavaJava.g3:271:24: ( type | 'void' )
			int alt54=2;
			try { DebugEnterSubRule(54);
			try { DebugEnterDecision(54, false);
			int LA54_1 = input.LA(1);

			if ((LA54_1==Identifier||LA54_1==60||LA54_1==62||LA54_1==65||LA54_1==70||LA54_1==76||LA54_1==82||LA54_1==84||LA54_1==93))
			{
				alt54 = 1;
			}
			else if ((LA54_1==105))
			{
				alt54 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 54, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(54); }
			switch (alt54)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:271:25: type
				{
				DebugLocation(271, 25);
				PushFollow(Follow._type_in_interfaceGenericMethodDecl1672);
				type155=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type155.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:271:32: 'void'
				{
				DebugLocation(271, 32);
				string_literal156=(IToken)Match(input,105,Follow._105_in_interfaceGenericMethodDecl1676); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal156_tree = (object)adaptor.Create(string_literal156);
				adaptor.AddChild(root_0, string_literal156_tree);
				}
				DebugLocation(271, 39);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("void");
				}

				}
				break;

			}
			} finally { DebugExitSubRule(54); }

			DebugLocation(271, 97);
			Identifier157=(IToken)Match(input,Identifier,Follow._Identifier_in_interfaceGenericMethodDecl1681); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier157_tree = (object)adaptor.Create(Identifier157);
			adaptor.AddChild(root_0, Identifier157_tree);
			}
			DebugLocation(271, 108);
			if (state.backtracking == 0)
			{
				if(primitive) id((Identifier157!=null?Identifier157.Text:default(string)));
			}
			DebugLocation(272, 9);
			PushFollow(Follow._interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl1693);
			interfaceMethodDeclaratorRest158=interfaceMethodDeclaratorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, interfaceMethodDeclaratorRest158.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("interfaceGenericMethodDecl", 38);
			LeaveRule("interfaceGenericMethodDecl", 38);
			LeaveRule_interfaceGenericMethodDecl();
			if (state.backtracking > 0) { Memoize(input, 38, interfaceGenericMethodDecl_StartIndex); }

		}
		DebugLocation(273, 4);
		} finally { DebugExitRule(GrammarFileName, "interfaceGenericMethodDecl"); }
		return retval;

	}
	// $ANTLR end "interfaceGenericMethodDecl"

	partial void EnterRule_voidInterfaceMethodDeclaratorRest();
	partial void LeaveRule_voidInterfaceMethodDeclaratorRest();
	// $ANTLR start "voidInterfaceMethodDeclaratorRest"
	// JavaJava.g3:275:1: voidInterfaceMethodDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? ';' ;
	[GrammarRule("voidInterfaceMethodDeclaratorRest")]
	private AstParserRuleReturnScope<object, IToken> voidInterfaceMethodDeclaratorRest()
	{
		EnterRule_voidInterfaceMethodDeclaratorRest();
		EnterRule("voidInterfaceMethodDeclaratorRest", 39);
		TraceIn("voidInterfaceMethodDeclaratorRest", 39);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int voidInterfaceMethodDeclaratorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal160 = default(IToken);
		IToken char_literal162 = default(IToken);
		AstParserRuleReturnScope<object, IToken> formalParameters159 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> qualifiedNameList161 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal160_tree = default(object);
		object char_literal162_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "voidInterfaceMethodDeclaratorRest");
		DebugLocation(275, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 39)) { return retval; }

			// JavaJava.g3:276:5: ( formalParameters ( 'throws' qualifiedNameList )? ';' )
			DebugEnterAlt(1);
			// JavaJava.g3:276:8: formalParameters ( 'throws' qualifiedNameList )? ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(276, 8);
			PushFollow(Follow._formalParameters_in_voidInterfaceMethodDeclaratorRest1715);
			formalParameters159=formalParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters159.Tree);
			DebugLocation(276, 25);
			// JavaJava.g3:276:25: ( 'throws' qualifiedNameList )?
			int alt55=2;
			try { DebugEnterSubRule(55);
			try { DebugEnterDecision(55, false);
			int LA55_1 = input.LA(1);

			if ((LA55_1==101))
			{
				alt55 = 1;
			}
			} finally { DebugExitDecision(55); }
			switch (alt55)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:276:26: 'throws' qualifiedNameList
				{
				DebugLocation(276, 26);
				string_literal160=(IToken)Match(input,101,Follow._101_in_voidInterfaceMethodDeclaratorRest1718); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal160_tree = (object)adaptor.Create(string_literal160);
				adaptor.AddChild(root_0, string_literal160_tree);
				}
				DebugLocation(276, 34);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("throws");
				}
				DebugLocation(276, 93);
				PushFollow(Follow._qualifiedNameList_in_voidInterfaceMethodDeclaratorRest1721);
				qualifiedNameList161=qualifiedNameList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList161.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(55); }

			DebugLocation(276, 113);
			char_literal162=(IToken)Match(input,48,Follow._48_in_voidInterfaceMethodDeclaratorRest1725); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal162_tree = (object)adaptor.Create(char_literal162);
			adaptor.AddChild(root_0, char_literal162_tree);
			}
			DebugLocation(276, 117);
			if (state.backtracking == 0)
			{
				s(";");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("voidInterfaceMethodDeclaratorRest", 39);
			LeaveRule("voidInterfaceMethodDeclaratorRest", 39);
			LeaveRule_voidInterfaceMethodDeclaratorRest();
			if (state.backtracking > 0) { Memoize(input, 39, voidInterfaceMethodDeclaratorRest_StartIndex); }

		}
		DebugLocation(277, 4);
		} finally { DebugExitRule(GrammarFileName, "voidInterfaceMethodDeclaratorRest"); }
		return retval;

	}
	// $ANTLR end "voidInterfaceMethodDeclaratorRest"

	partial void EnterRule_constructorDeclaratorRest();
	partial void LeaveRule_constructorDeclaratorRest();
	// $ANTLR start "constructorDeclaratorRest"
	// JavaJava.g3:279:1: constructorDeclaratorRest : formalParameters ( 'throws' qualifiedNameList )? constructorBody ;
	[GrammarRule("constructorDeclaratorRest")]
	private AstParserRuleReturnScope<object, IToken> constructorDeclaratorRest()
	{
		EnterRule_constructorDeclaratorRest();
		EnterRule("constructorDeclaratorRest", 40);
		TraceIn("constructorDeclaratorRest", 40);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int constructorDeclaratorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal164 = default(IToken);
		AstParserRuleReturnScope<object, IToken> formalParameters163 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> qualifiedNameList165 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> constructorBody166 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal164_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructorDeclaratorRest");
		DebugLocation(279, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 40)) { return retval; }

			// JavaJava.g3:280:5: ( formalParameters ( 'throws' qualifiedNameList )? constructorBody )
			DebugEnterAlt(1);
			// JavaJava.g3:280:9: formalParameters ( 'throws' qualifiedNameList )? constructorBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(280, 9);
			PushFollow(Follow._formalParameters_in_constructorDeclaratorRest1750);
			formalParameters163=formalParameters();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameters163.Tree);
			DebugLocation(280, 26);
			// JavaJava.g3:280:26: ( 'throws' qualifiedNameList )?
			int alt56=2;
			try { DebugEnterSubRule(56);
			try { DebugEnterDecision(56, false);
			int LA56_1 = input.LA(1);

			if ((LA56_1==101))
			{
				alt56 = 1;
			}
			} finally { DebugExitDecision(56); }
			switch (alt56)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:280:27: 'throws' qualifiedNameList
				{
				DebugLocation(280, 27);
				string_literal164=(IToken)Match(input,101,Follow._101_in_constructorDeclaratorRest1753); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal164_tree = (object)adaptor.Create(string_literal164);
				adaptor.AddChild(root_0, string_literal164_tree);
				}
				DebugLocation(280, 36);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("throws");
				}
				DebugLocation(280, 95);
				PushFollow(Follow._qualifiedNameList_in_constructorDeclaratorRest1757);
				qualifiedNameList165=qualifiedNameList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedNameList165.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(56); }

			DebugLocation(280, 115);
			PushFollow(Follow._constructorBody_in_constructorDeclaratorRest1761);
			constructorBody166=constructorBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constructorBody166.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructorDeclaratorRest", 40);
			LeaveRule("constructorDeclaratorRest", 40);
			LeaveRule_constructorDeclaratorRest();
			if (state.backtracking > 0) { Memoize(input, 40, constructorDeclaratorRest_StartIndex); }

		}
		DebugLocation(281, 4);
		} finally { DebugExitRule(GrammarFileName, "constructorDeclaratorRest"); }
		return retval;

	}
	// $ANTLR end "constructorDeclaratorRest"

	partial void EnterRule_constantDeclarator();
	partial void LeaveRule_constantDeclarator();
	// $ANTLR start "constantDeclarator"
	// JavaJava.g3:283:1: constantDeclarator : Identifier constantDeclaratorRest ;
	[GrammarRule("constantDeclarator")]
	private AstParserRuleReturnScope<object, IToken> constantDeclarator()
	{
		EnterRule_constantDeclarator();
		EnterRule("constantDeclarator", 41);
		TraceIn("constantDeclarator", 41);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int constantDeclarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier167 = default(IToken);
		AstParserRuleReturnScope<object, IToken> constantDeclaratorRest168 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier167_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constantDeclarator");
		DebugLocation(283, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 41)) { return retval; }

			// JavaJava.g3:284:5: ( Identifier constantDeclaratorRest )
			DebugEnterAlt(1);
			// JavaJava.g3:284:9: Identifier constantDeclaratorRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(284, 9);
			Identifier167=(IToken)Match(input,Identifier,Follow._Identifier_in_constantDeclarator1780); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier167_tree = (object)adaptor.Create(Identifier167);
			adaptor.AddChild(root_0, Identifier167_tree);
			}
			DebugLocation(284, 20);
			if (state.backtracking == 0)
			{
				if(primitive && !inMethod) {id((Identifier167!=null?Identifier167.Text:default(string))); /*JavaMetrics.ssc.push(new Symbol((Identifier167!=null?Identifier167.Text:default(string)), PrimitiveType, className)); */}
			}
			DebugLocation(284, 156);
			PushFollow(Follow._constantDeclaratorRest_in_constantDeclarator1784);
			constantDeclaratorRest168=constantDeclaratorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constantDeclaratorRest168.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constantDeclarator", 41);
			LeaveRule("constantDeclarator", 41);
			LeaveRule_constantDeclarator();
			if (state.backtracking > 0) { Memoize(input, 41, constantDeclarator_StartIndex); }

		}
		DebugLocation(285, 4);
		} finally { DebugExitRule(GrammarFileName, "constantDeclarator"); }
		return retval;

	}
	// $ANTLR end "constantDeclarator"

	partial void EnterRule_variableDeclarators();
	partial void LeaveRule_variableDeclarators();
	// $ANTLR start "variableDeclarators"
	// JavaJava.g3:287:1: variableDeclarators : variableDeclarator ( ',' variableDeclarator )* ;
	[GrammarRule("variableDeclarators")]
	private AstParserRuleReturnScope<object, IToken> variableDeclarators()
	{
		EnterRule_variableDeclarators();
		EnterRule("variableDeclarators", 42);
		TraceIn("variableDeclarators", 42);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int variableDeclarators_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal170 = default(IToken);
		AstParserRuleReturnScope<object, IToken> variableDeclarator169 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> variableDeclarator171 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal170_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableDeclarators");
		DebugLocation(287, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 42)) { return retval; }

			// JavaJava.g3:288:5: ( variableDeclarator ( ',' variableDeclarator )* )
			DebugEnterAlt(1);
			// JavaJava.g3:288:9: variableDeclarator ( ',' variableDeclarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(288, 9);
			PushFollow(Follow._variableDeclarator_in_variableDeclarators1807);
			variableDeclarator169=variableDeclarator();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator169.Tree);
			DebugLocation(288, 28);
			// JavaJava.g3:288:28: ( ',' variableDeclarator )*
			try { DebugEnterSubRule(57);
			while (true)
			{
				int alt57=2;
				try { DebugEnterDecision(57, false);
				int LA57_1 = input.LA(1);

				if ((LA57_1==39))
				{
					alt57 = 1;
				}


				} finally { DebugExitDecision(57); }
				switch ( alt57 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:288:29: ',' variableDeclarator
					{
					DebugLocation(288, 29);
					char_literal170=(IToken)Match(input,39,Follow._39_in_variableDeclarators1810); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal170_tree = (object)adaptor.Create(char_literal170);
					adaptor.AddChild(root_0, char_literal170_tree);
					}
					DebugLocation(288, 33);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(288, 43);
					PushFollow(Follow._variableDeclarator_in_variableDeclarators1814);
					variableDeclarator171=variableDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarator171.Tree);

					}
					break;

				default:
					goto loop57;
				}
			}

			loop57:
				;

			} finally { DebugExitSubRule(57); }

			DebugLocation(288, 64);
			if (state.backtracking == 0)
			{
				primitive=false;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableDeclarators", 42);
			LeaveRule("variableDeclarators", 42);
			LeaveRule_variableDeclarators();
			if (state.backtracking > 0) { Memoize(input, 42, variableDeclarators_StartIndex); }

		}
		DebugLocation(289, 4);
		} finally { DebugExitRule(GrammarFileName, "variableDeclarators"); }
		return retval;

	}
	// $ANTLR end "variableDeclarators"

	partial void EnterRule_variableDeclarator();
	partial void LeaveRule_variableDeclarator();
	// $ANTLR start "variableDeclarator"
	// JavaJava.g3:291:1: variableDeclarator : variableDeclaratorId ( '=' variableInitializer )? ;
	[GrammarRule("variableDeclarator")]
	private AstParserRuleReturnScope<object, IToken> variableDeclarator()
	{
		EnterRule_variableDeclarator();
		EnterRule("variableDeclarator", 43);
		TraceIn("variableDeclarator", 43);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int variableDeclarator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal173 = default(IToken);
		AstParserRuleReturnScope<object, IToken> variableDeclaratorId172 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> variableInitializer174 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal173_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableDeclarator");
		DebugLocation(291, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 43)) { return retval; }

			// JavaJava.g3:292:5: ( variableDeclaratorId ( '=' variableInitializer )? )
			DebugEnterAlt(1);
			// JavaJava.g3:292:9: variableDeclaratorId ( '=' variableInitializer )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(292, 9);
			PushFollow(Follow._variableDeclaratorId_in_variableDeclarator1837);
			variableDeclaratorId172=variableDeclaratorId();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclaratorId172.Tree);
			DebugLocation(292, 30);
			// JavaJava.g3:292:30: ( '=' variableInitializer )?
			int alt58=2;
			try { DebugEnterSubRule(58);
			try { DebugEnterDecision(58, false);
			int LA58_1 = input.LA(1);

			if ((LA58_1==50))
			{
				alt58 = 1;
			}
			} finally { DebugExitDecision(58); }
			switch (alt58)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:292:31: '=' variableInitializer
				{
				DebugLocation(292, 31);
				char_literal173=(IToken)Match(input,50,Follow._50_in_variableDeclarator1840); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal173_tree = (object)adaptor.Create(char_literal173);
				adaptor.AddChild(root_0, char_literal173_tree);
				}
				DebugLocation(292, 35);
				PushFollow(Follow._variableInitializer_in_variableDeclarator1842);
				variableInitializer174=variableInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer174.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(58); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableDeclarator", 43);
			LeaveRule("variableDeclarator", 43);
			LeaveRule_variableDeclarator();
			if (state.backtracking > 0) { Memoize(input, 43, variableDeclarator_StartIndex); }

		}
		DebugLocation(293, 4);
		} finally { DebugExitRule(GrammarFileName, "variableDeclarator"); }
		return retval;

	}
	// $ANTLR end "variableDeclarator"

	partial void EnterRule_constantDeclaratorsRest();
	partial void LeaveRule_constantDeclaratorsRest();
	// $ANTLR start "constantDeclaratorsRest"
	// JavaJava.g3:295:1: constantDeclaratorsRest : constantDeclaratorRest ( ',' constantDeclarator )* ;
	[GrammarRule("constantDeclaratorsRest")]
	private AstParserRuleReturnScope<object, IToken> constantDeclaratorsRest()
	{
		EnterRule_constantDeclaratorsRest();
		EnterRule("constantDeclaratorsRest", 44);
		TraceIn("constantDeclaratorsRest", 44);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int constantDeclaratorsRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal176 = default(IToken);
		AstParserRuleReturnScope<object, IToken> constantDeclaratorRest175 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> constantDeclarator177 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal176_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constantDeclaratorsRest");
		DebugLocation(295, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 44)) { return retval; }

			// JavaJava.g3:296:5: ( constantDeclaratorRest ( ',' constantDeclarator )* )
			DebugEnterAlt(1);
			// JavaJava.g3:296:9: constantDeclaratorRest ( ',' constantDeclarator )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(296, 9);
			PushFollow(Follow._constantDeclaratorRest_in_constantDeclaratorsRest1867);
			constantDeclaratorRest175=constantDeclaratorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, constantDeclaratorRest175.Tree);
			DebugLocation(296, 32);
			// JavaJava.g3:296:32: ( ',' constantDeclarator )*
			try { DebugEnterSubRule(59);
			while (true)
			{
				int alt59=2;
				try { DebugEnterDecision(59, false);
				int LA59_1 = input.LA(1);

				if ((LA59_1==39))
				{
					alt59 = 1;
				}


				} finally { DebugExitDecision(59); }
				switch ( alt59 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:296:33: ',' constantDeclarator
					{
					DebugLocation(296, 33);
					char_literal176=(IToken)Match(input,39,Follow._39_in_constantDeclaratorsRest1870); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal176_tree = (object)adaptor.Create(char_literal176);
					adaptor.AddChild(root_0, char_literal176_tree);
					}
					DebugLocation(296, 37);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(296, 47);
					PushFollow(Follow._constantDeclarator_in_constantDeclaratorsRest1874);
					constantDeclarator177=constantDeclarator();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, constantDeclarator177.Tree);

					}
					break;

				default:
					goto loop59;
				}
			}

			loop59:
				;

			} finally { DebugExitSubRule(59); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constantDeclaratorsRest", 44);
			LeaveRule("constantDeclaratorsRest", 44);
			LeaveRule_constantDeclaratorsRest();
			if (state.backtracking > 0) { Memoize(input, 44, constantDeclaratorsRest_StartIndex); }

		}
		DebugLocation(297, 4);
		} finally { DebugExitRule(GrammarFileName, "constantDeclaratorsRest"); }
		return retval;

	}
	// $ANTLR end "constantDeclaratorsRest"

	partial void EnterRule_constantDeclaratorRest();
	partial void LeaveRule_constantDeclaratorRest();
	// $ANTLR start "constantDeclaratorRest"
	// JavaJava.g3:299:1: constantDeclaratorRest : ( '[' ']' )* '=' variableInitializer ;
	[GrammarRule("constantDeclaratorRest")]
	private AstParserRuleReturnScope<object, IToken> constantDeclaratorRest()
	{
		EnterRule_constantDeclaratorRest();
		EnterRule("constantDeclaratorRest", 45);
		TraceIn("constantDeclaratorRest", 45);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int constantDeclaratorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal178 = default(IToken);
		IToken char_literal179 = default(IToken);
		IToken char_literal180 = default(IToken);
		AstParserRuleReturnScope<object, IToken> variableInitializer181 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal178_tree = default(object);
		object char_literal179_tree = default(object);
		object char_literal180_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constantDeclaratorRest");
		DebugLocation(299, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 45)) { return retval; }

			// JavaJava.g3:300:5: ( ( '[' ']' )* '=' variableInitializer )
			DebugEnterAlt(1);
			// JavaJava.g3:300:9: ( '[' ']' )* '=' variableInitializer
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(300, 9);
			// JavaJava.g3:300:9: ( '[' ']' )*
			try { DebugEnterSubRule(60);
			while (true)
			{
				int alt60=2;
				try { DebugEnterDecision(60, false);
				int LA60_1 = input.LA(1);

				if ((LA60_1==55))
				{
					alt60 = 1;
				}


				} finally { DebugExitDecision(60); }
				switch ( alt60 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:300:10: '[' ']'
					{
					DebugLocation(300, 10);
					char_literal178=(IToken)Match(input,55,Follow._55_in_constantDeclaratorRest1896); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal178_tree = (object)adaptor.Create(char_literal178);
					adaptor.AddChild(root_0, char_literal178_tree);
					}
					DebugLocation(300, 14);
					if (state.backtracking == 0)
					{
						s("[");
					}
					DebugLocation(300, 24);
					char_literal179=(IToken)Match(input,56,Follow._56_in_constantDeclaratorRest1900); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal179_tree = (object)adaptor.Create(char_literal179);
					adaptor.AddChild(root_0, char_literal179_tree);
					}
					DebugLocation(300, 28);
					if (state.backtracking == 0)
					{
						s("]");
					}

					}
					break;

				default:
					goto loop60;
				}
			}

			loop60:
				;

			} finally { DebugExitSubRule(60); }

			DebugLocation(300, 41);
			char_literal180=(IToken)Match(input,50,Follow._50_in_constantDeclaratorRest1907); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal180_tree = (object)adaptor.Create(char_literal180);
			adaptor.AddChild(root_0, char_literal180_tree);
			}
			DebugLocation(300, 45);
			PushFollow(Follow._variableInitializer_in_constantDeclaratorRest1909);
			variableInitializer181=variableInitializer();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer181.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constantDeclaratorRest", 45);
			LeaveRule("constantDeclaratorRest", 45);
			LeaveRule_constantDeclaratorRest();
			if (state.backtracking > 0) { Memoize(input, 45, constantDeclaratorRest_StartIndex); }

		}
		DebugLocation(301, 4);
		} finally { DebugExitRule(GrammarFileName, "constantDeclaratorRest"); }
		return retval;

	}
	// $ANTLR end "constantDeclaratorRest"

	partial void EnterRule_variableDeclaratorId();
	partial void LeaveRule_variableDeclaratorId();
	// $ANTLR start "variableDeclaratorId"
	// JavaJava.g3:303:1: variableDeclaratorId : Identifier ( '[' ']' )* ;
	[GrammarRule("variableDeclaratorId")]
	private AstParserRuleReturnScope<object, IToken> variableDeclaratorId()
	{
		EnterRule_variableDeclaratorId();
		EnterRule("variableDeclaratorId", 46);
		TraceIn("variableDeclaratorId", 46);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int variableDeclaratorId_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier182 = default(IToken);
		IToken char_literal183 = default(IToken);
		IToken char_literal184 = default(IToken);

		object Identifier182_tree = default(object);
		object char_literal183_tree = default(object);
		object char_literal184_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableDeclaratorId");
		DebugLocation(303, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 46)) { return retval; }

			// JavaJava.g3:304:5: ( Identifier ( '[' ']' )* )
			DebugEnterAlt(1);
			// JavaJava.g3:304:9: Identifier ( '[' ']' )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(304, 9);
			Identifier182=(IToken)Match(input,Identifier,Follow._Identifier_in_variableDeclaratorId1932); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier182_tree = (object)adaptor.Create(Identifier182);
			adaptor.AddChild(root_0, Identifier182_tree);
			}
			DebugLocation(304, 21);
			if (state.backtracking == 0)
			{

					if(!inMethod) 
				                       {
				                         identcount++;/*id(new Symbol((Identifier182!=null?Identifier182.Text:default(string)),PrimitiveType, className)); 
				                         JavaMetrics.ssc.push(new Symbol((Identifier182!=null?Identifier182.Text:default(string)),"unknown", className));*/ 
				                        }
				                      else if(inMethod) {
											identcount++;
				                       		/*id(new Symbol((Identifier182!=null?Identifier182.Text:default(string)),PrimitiveType, methodName)); 
				                         	JavaMetrics.ssm.push(new Symbol((Identifier182!=null?Identifier182.Text:default(string)),"unknown", methodName)); */ 
				                                         
				                      }    
				                    
			}
			DebugLocation(316, 23);
			// JavaJava.g3:316:23: ( '[' ']' )*
			try { DebugEnterSubRule(61);
			while (true)
			{
				int alt61=2;
				try { DebugEnterDecision(61, false);
				int LA61_1 = input.LA(1);

				if ((LA61_1==55))
				{
					alt61 = 1;
				}


				} finally { DebugExitDecision(61); }
				switch ( alt61 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:316:24: '[' ']'
					{
					DebugLocation(316, 24);
					char_literal183=(IToken)Match(input,55,Follow._55_in_variableDeclaratorId1938); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal183_tree = (object)adaptor.Create(char_literal183);
					adaptor.AddChild(root_0, char_literal183_tree);
					}
					DebugLocation(316, 27);
					if (state.backtracking == 0)
					{
						s("[");
					}
					DebugLocation(316, 37);
					char_literal184=(IToken)Match(input,56,Follow._56_in_variableDeclaratorId1941); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal184_tree = (object)adaptor.Create(char_literal184);
					adaptor.AddChild(root_0, char_literal184_tree);
					}
					DebugLocation(316, 41);
					if (state.backtracking == 0)
					{
						s("]");
					}

					}
					break;

				default:
					goto loop61;
				}
			}

			loop61:
				;

			} finally { DebugExitSubRule(61); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableDeclaratorId", 46);
			LeaveRule("variableDeclaratorId", 46);
			LeaveRule_variableDeclaratorId();
			if (state.backtracking > 0) { Memoize(input, 46, variableDeclaratorId_StartIndex); }

		}
		DebugLocation(317, 4);
		} finally { DebugExitRule(GrammarFileName, "variableDeclaratorId"); }
		return retval;

	}
	// $ANTLR end "variableDeclaratorId"

	partial void EnterRule_variableInitializer();
	partial void LeaveRule_variableInitializer();
	// $ANTLR start "variableInitializer"
	// JavaJava.g3:319:1: variableInitializer : ( arrayInitializer | expression );
	[GrammarRule("variableInitializer")]
	private AstParserRuleReturnScope<object, IToken> variableInitializer()
	{
		EnterRule_variableInitializer();
		EnterRule("variableInitializer", 47);
		TraceIn("variableInitializer", 47);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int variableInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> arrayInitializer185 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression186 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "variableInitializer");
		DebugLocation(319, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 47)) { return retval; }

			// JavaJava.g3:320:5: ( arrayInitializer | expression )
			int alt62=2;
			try { DebugEnterDecision(62, false);
			int LA62_1 = input.LA(1);

			if ((LA62_1==108))
			{
				alt62 = 1;
			}
			else if (((LA62_1>=CharacterLiteral && LA62_1<=DecimalLiteral)||LA62_1==FloatingPointLiteral||(LA62_1>=HexLiteral && LA62_1<=Identifier)||(LA62_1>=OctalLiteral && LA62_1<=StringLiteral)||LA62_1==25||LA62_1==32||(LA62_1>=36 && LA62_1<=37)||(LA62_1>=40 && LA62_1<=41)||LA62_1==60||LA62_1==62||LA62_1==65||LA62_1==70||LA62_1==73||LA62_1==76||LA62_1==82||LA62_1==84||(LA62_1>=86 && LA62_1<=87)||LA62_1==93||LA62_1==96||LA62_1==99||LA62_1==103||LA62_1==105||LA62_1==113))
			{
				alt62 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 62, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(62); }
			switch (alt62)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:320:9: arrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(320, 9);
				PushFollow(Follow._arrayInitializer_in_variableInitializer1964);
				arrayInitializer185=arrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayInitializer185.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:321:9: expression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(321, 9);
				PushFollow(Follow._expression_in_variableInitializer1974);
				expression186=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression186.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableInitializer", 47);
			LeaveRule("variableInitializer", 47);
			LeaveRule_variableInitializer();
			if (state.backtracking > 0) { Memoize(input, 47, variableInitializer_StartIndex); }

		}
		DebugLocation(322, 4);
		} finally { DebugExitRule(GrammarFileName, "variableInitializer"); }
		return retval;

	}
	// $ANTLR end "variableInitializer"

	partial void EnterRule_arrayInitializer();
	partial void LeaveRule_arrayInitializer();
	// $ANTLR start "arrayInitializer"
	// JavaJava.g3:324:1: arrayInitializer : '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}' ;
	[GrammarRule("arrayInitializer")]
	private AstParserRuleReturnScope<object, IToken> arrayInitializer()
	{
		EnterRule_arrayInitializer();
		EnterRule("arrayInitializer", 48);
		TraceIn("arrayInitializer", 48);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int arrayInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal187 = default(IToken);
		IToken char_literal189 = default(IToken);
		IToken char_literal191 = default(IToken);
		IToken char_literal192 = default(IToken);
		AstParserRuleReturnScope<object, IToken> variableInitializer188 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> variableInitializer190 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal187_tree = default(object);
		object char_literal189_tree = default(object);
		object char_literal191_tree = default(object);
		object char_literal192_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arrayInitializer");
		DebugLocation(324, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 48)) { return retval; }

			// JavaJava.g3:325:5: ( '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:325:9: '{' ( variableInitializer ( ',' variableInitializer )* ( ',' )? )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(325, 9);
			char_literal187=(IToken)Match(input,108,Follow._108_in_arrayInitializer2001); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal187_tree = (object)adaptor.Create(char_literal187);
			adaptor.AddChild(root_0, char_literal187_tree);
			}
			DebugLocation(325, 13);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(325, 22);
			// JavaJava.g3:325:22: ( variableInitializer ( ',' variableInitializer )* ( ',' )? )?
			int alt65=2;
			try { DebugEnterSubRule(65);
			try { DebugEnterDecision(65, false);
			int LA65_1 = input.LA(1);

			if (((LA65_1>=CharacterLiteral && LA65_1<=DecimalLiteral)||LA65_1==FloatingPointLiteral||(LA65_1>=HexLiteral && LA65_1<=Identifier)||(LA65_1>=OctalLiteral && LA65_1<=StringLiteral)||LA65_1==25||LA65_1==32||(LA65_1>=36 && LA65_1<=37)||(LA65_1>=40 && LA65_1<=41)||LA65_1==60||LA65_1==62||LA65_1==65||LA65_1==70||LA65_1==73||LA65_1==76||LA65_1==82||LA65_1==84||(LA65_1>=86 && LA65_1<=87)||LA65_1==93||LA65_1==96||LA65_1==99||LA65_1==103||LA65_1==105||LA65_1==108||LA65_1==113))
			{
				alt65 = 1;
			}
			} finally { DebugExitDecision(65); }
			switch (alt65)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:325:23: variableInitializer ( ',' variableInitializer )* ( ',' )?
				{
				DebugLocation(325, 23);
				PushFollow(Follow._variableInitializer_in_arrayInitializer2005);
				variableInitializer188=variableInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer188.Tree);
				DebugLocation(325, 43);
				// JavaJava.g3:325:43: ( ',' variableInitializer )*
				try { DebugEnterSubRule(63);
				while (true)
				{
					int alt63=2;
					try { DebugEnterDecision(63, false);
					int LA63_1 = input.LA(1);

					if ((LA63_1==39))
					{
						int LA63_2 = input.LA(2);

						if (((LA63_2>=CharacterLiteral && LA63_2<=DecimalLiteral)||LA63_2==FloatingPointLiteral||(LA63_2>=HexLiteral && LA63_2<=Identifier)||(LA63_2>=OctalLiteral && LA63_2<=StringLiteral)||LA63_2==25||LA63_2==32||(LA63_2>=36 && LA63_2<=37)||(LA63_2>=40 && LA63_2<=41)||LA63_2==60||LA63_2==62||LA63_2==65||LA63_2==70||LA63_2==73||LA63_2==76||LA63_2==82||LA63_2==84||(LA63_2>=86 && LA63_2<=87)||LA63_2==93||LA63_2==96||LA63_2==99||LA63_2==103||LA63_2==105||LA63_2==108||LA63_2==113))
						{
							alt63 = 1;
						}


					}


					} finally { DebugExitDecision(63); }
					switch ( alt63 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:325:44: ',' variableInitializer
						{
						DebugLocation(325, 44);
						char_literal189=(IToken)Match(input,39,Follow._39_in_arrayInitializer2008); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal189_tree = (object)adaptor.Create(char_literal189);
						adaptor.AddChild(root_0, char_literal189_tree);
						}
						DebugLocation(325, 48);
						if (state.backtracking == 0)
						{
							s(",");
						}
						DebugLocation(325, 58);
						PushFollow(Follow._variableInitializer_in_arrayInitializer2012);
						variableInitializer190=variableInitializer();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, variableInitializer190.Tree);

						}
						break;

					default:
						goto loop63;
					}
				}

				loop63:
					;

				} finally { DebugExitSubRule(63); }

				DebugLocation(325, 80);
				// JavaJava.g3:325:80: ( ',' )?
				int alt64=2;
				try { DebugEnterSubRule(64);
				try { DebugEnterDecision(64, false);
				int LA64_1 = input.LA(1);

				if ((LA64_1==39))
				{
					alt64 = 1;
				}
				} finally { DebugExitDecision(64); }
				switch (alt64)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:325:81: ','
					{
					DebugLocation(325, 81);
					char_literal191=(IToken)Match(input,39,Follow._39_in_arrayInitializer2017); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal191_tree = (object)adaptor.Create(char_literal191);
					adaptor.AddChild(root_0, char_literal191_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(64); }


				}
				break;

			}
			} finally { DebugExitSubRule(65); }

			DebugLocation(325, 90);
			char_literal192=(IToken)Match(input,112,Follow._112_in_arrayInitializer2024); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal192_tree = (object)adaptor.Create(char_literal192);
			adaptor.AddChild(root_0, char_literal192_tree);
			}
			DebugLocation(325, 93);
			if (state.backtracking == 0)
			{
				s("}");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arrayInitializer", 48);
			LeaveRule("arrayInitializer", 48);
			LeaveRule_arrayInitializer();
			if (state.backtracking > 0) { Memoize(input, 48, arrayInitializer_StartIndex); }

		}
		DebugLocation(326, 4);
		} finally { DebugExitRule(GrammarFileName, "arrayInitializer"); }
		return retval;

	}
	// $ANTLR end "arrayInitializer"

	partial void EnterRule_modifier();
	partial void LeaveRule_modifier();
	// $ANTLR start "modifier"
	// JavaJava.g3:328:1: modifier : ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' );
	[GrammarRule("modifier")]
	private AstParserRuleReturnScope<object, IToken> modifier()
	{
		EnterRule_modifier();
		EnterRule("modifier", 49);
		TraceIn("modifier", 49);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int modifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal194 = default(IToken);
		IToken string_literal195 = default(IToken);
		IToken string_literal196 = default(IToken);
		IToken string_literal197 = default(IToken);
		IToken string_literal198 = default(IToken);
		IToken string_literal199 = default(IToken);
		IToken string_literal200 = default(IToken);
		IToken string_literal201 = default(IToken);
		IToken string_literal202 = default(IToken);
		IToken string_literal203 = default(IToken);
		IToken string_literal204 = default(IToken);
		AstParserRuleReturnScope<object, IToken> annotation193 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal194_tree = default(object);
		object string_literal195_tree = default(object);
		object string_literal196_tree = default(object);
		object string_literal197_tree = default(object);
		object string_literal198_tree = default(object);
		object string_literal199_tree = default(object);
		object string_literal200_tree = default(object);
		object string_literal201_tree = default(object);
		object string_literal202_tree = default(object);
		object string_literal203_tree = default(object);
		object string_literal204_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "modifier");
		DebugLocation(328, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 49)) { return retval; }

			// JavaJava.g3:329:5: ( annotation | 'public' | 'protected' | 'private' | 'static' | 'abstract' | 'final' | 'native' | 'synchronized' | 'transient' | 'volatile' | 'strictfp' )
			int alt66=12;
			try { DebugEnterDecision(66, false);
			switch (input.LA(1))
			{
			case 54:
				{
				alt66 = 1;
				}
				break;
			case 91:
				{
				alt66 = 2;
				}
				break;
			case 90:
				{
				alt66 = 3;
				}
				break;
			case 89:
				{
				alt66 = 4;
				}
				break;
			case 94:
				{
				alt66 = 5;
				}
				break;
			case 59:
				{
				alt66 = 6;
				}
				break;
			case 74:
				{
				alt66 = 7;
				}
				break;
			case 85:
				{
				alt66 = 8;
				}
				break;
			case 98:
				{
				alt66 = 9;
				}
				break;
			case 102:
				{
				alt66 = 10;
				}
				break;
			case 106:
				{
				alt66 = 11;
				}
				break;
			case 95:
				{
				alt66 = 12;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 66, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(66); }
			switch (alt66)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:329:9: annotation
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(329, 9);
				PushFollow(Follow._annotation_in_modifier2044);
				annotation193=annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotation193.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:330:9: 'public'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(330, 9);
				string_literal194=(IToken)Match(input,91,Follow._91_in_modifier2054); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal194_tree = (object)adaptor.Create(string_literal194);
				adaptor.AddChild(root_0, string_literal194_tree);
				}
				DebugLocation(330, 19);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("public");
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:331:9: 'protected'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(331, 9);
				string_literal195=(IToken)Match(input,90,Follow._90_in_modifier2067); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal195_tree = (object)adaptor.Create(string_literal195);
				adaptor.AddChild(root_0, string_literal195_tree);
				}
				DebugLocation(331, 21);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("protected");
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:332:9: 'private'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(332, 9);
				string_literal196=(IToken)Match(input,89,Follow._89_in_modifier2079); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal196_tree = (object)adaptor.Create(string_literal196);
				adaptor.AddChild(root_0, string_literal196_tree);
				}
				DebugLocation(332, 19);
				if (state.backtracking == 0)
				{
					keywordCount++; JavaMetrics.UniqueKeywords.Add("private");
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:333:9: 'static'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(333, 9);
				string_literal197=(IToken)Match(input,94,Follow._94_in_modifier2091); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal197_tree = (object)adaptor.Create(string_literal197);
				adaptor.AddChild(root_0, string_literal197_tree);
				}
				DebugLocation(333, 19);
				if (state.backtracking == 0)
				{
					keywordCount++; JavaMetrics.UniqueKeywords.Add("static");
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:334:9: 'abstract'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(334, 9);
				string_literal198=(IToken)Match(input,59,Follow._59_in_modifier2104); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal198_tree = (object)adaptor.Create(string_literal198);
				adaptor.AddChild(root_0, string_literal198_tree);
				}
				DebugLocation(334, 20);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("abstract");
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// JavaJava.g3:335:9: 'final'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(335, 9);
				string_literal199=(IToken)Match(input,74,Follow._74_in_modifier2116); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal199_tree = (object)adaptor.Create(string_literal199);
				adaptor.AddChild(root_0, string_literal199_tree);
				}
				DebugLocation(335, 18);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("final");
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// JavaJava.g3:336:9: 'native'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(336, 9);
				string_literal200=(IToken)Match(input,85,Follow._85_in_modifier2129); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal200_tree = (object)adaptor.Create(string_literal200);
				adaptor.AddChild(root_0, string_literal200_tree);
				}
				DebugLocation(336, 21);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("native");
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// JavaJava.g3:337:9: 'synchronized'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(337, 9);
				string_literal201=(IToken)Match(input,98,Follow._98_in_modifier2144); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal201_tree = (object)adaptor.Create(string_literal201);
				adaptor.AddChild(root_0, string_literal201_tree);
				}
				DebugLocation(337, 24);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("synchronized");
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// JavaJava.g3:338:9: 'transient'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(338, 9);
				string_literal202=(IToken)Match(input,102,Follow._102_in_modifier2156); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal202_tree = (object)adaptor.Create(string_literal202);
				adaptor.AddChild(root_0, string_literal202_tree);
				}
				DebugLocation(338, 23);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("transient");
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// JavaJava.g3:339:9: 'volatile'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(339, 9);
				string_literal203=(IToken)Match(input,106,Follow._106_in_modifier2170); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal203_tree = (object)adaptor.Create(string_literal203);
				adaptor.AddChild(root_0, string_literal203_tree);
				}
				DebugLocation(339, 21);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("volatile");
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// JavaJava.g3:340:9: 'strictfp'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(340, 9);
				string_literal204=(IToken)Match(input,95,Follow._95_in_modifier2183); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal204_tree = (object)adaptor.Create(string_literal204);
				adaptor.AddChild(root_0, string_literal204_tree);
				}
				DebugLocation(340, 21);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("strictfp");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("modifier", 49);
			LeaveRule("modifier", 49);
			LeaveRule_modifier();
			if (state.backtracking > 0) { Memoize(input, 49, modifier_StartIndex); }

		}
		DebugLocation(341, 4);
		} finally { DebugExitRule(GrammarFileName, "modifier"); }
		return retval;

	}
	// $ANTLR end "modifier"

	partial void EnterRule_packageOrTypeName();
	partial void LeaveRule_packageOrTypeName();
	// $ANTLR start "packageOrTypeName"
	// JavaJava.g3:343:1: packageOrTypeName : qualifiedName ;
	[GrammarRule("packageOrTypeName")]
	private AstParserRuleReturnScope<object, IToken> packageOrTypeName()
	{
		EnterRule_packageOrTypeName();
		EnterRule("packageOrTypeName", 50);
		TraceIn("packageOrTypeName", 50);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int packageOrTypeName_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> qualifiedName205 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "packageOrTypeName");
		DebugLocation(343, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 50)) { return retval; }

			// JavaJava.g3:344:5: ( qualifiedName )
			DebugEnterAlt(1);
			// JavaJava.g3:344:9: qualifiedName
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(344, 9);
			PushFollow(Follow._qualifiedName_in_packageOrTypeName2205);
			qualifiedName205=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName205.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("packageOrTypeName", 50);
			LeaveRule("packageOrTypeName", 50);
			LeaveRule_packageOrTypeName();
			if (state.backtracking > 0) { Memoize(input, 50, packageOrTypeName_StartIndex); }

		}
		DebugLocation(345, 4);
		} finally { DebugExitRule(GrammarFileName, "packageOrTypeName"); }
		return retval;

	}
	// $ANTLR end "packageOrTypeName"

	partial void EnterRule_enumConstantName();
	partial void LeaveRule_enumConstantName();
	// $ANTLR start "enumConstantName"
	// JavaJava.g3:347:1: enumConstantName : Identifier ;
	[GrammarRule("enumConstantName")]
	private AstParserRuleReturnScope<object, IToken> enumConstantName()
	{
		EnterRule_enumConstantName();
		EnterRule("enumConstantName", 51);
		TraceIn("enumConstantName", 51);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int enumConstantName_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier206 = default(IToken);

		object Identifier206_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enumConstantName");
		DebugLocation(347, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 51)) { return retval; }

			// JavaJava.g3:348:5: ( Identifier )
			DebugEnterAlt(1);
			// JavaJava.g3:348:9: Identifier
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(348, 9);
			Identifier206=(IToken)Match(input,Identifier,Follow._Identifier_in_enumConstantName2224); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier206_tree = (object)adaptor.Create(Identifier206);
			adaptor.AddChild(root_0, Identifier206_tree);
			}
			DebugLocation(348, 20);
			if (state.backtracking == 0)
			{
				if(primitive) id((Identifier206!=null?Identifier206.Text:default(string)));
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enumConstantName", 51);
			LeaveRule("enumConstantName", 51);
			LeaveRule_enumConstantName();
			if (state.backtracking > 0) { Memoize(input, 51, enumConstantName_StartIndex); }

		}
		DebugLocation(349, 4);
		} finally { DebugExitRule(GrammarFileName, "enumConstantName"); }
		return retval;

	}
	// $ANTLR end "enumConstantName"

	partial void EnterRule_typeName();
	partial void LeaveRule_typeName();
	// $ANTLR start "typeName"
	// JavaJava.g3:351:1: typeName : qualifiedName ;
	[GrammarRule("typeName")]
	private AstParserRuleReturnScope<object, IToken> typeName()
	{
		EnterRule_typeName();
		EnterRule("typeName", 52);
		TraceIn("typeName", 52);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeName_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> qualifiedName207 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "typeName");
		DebugLocation(351, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 52)) { return retval; }

			// JavaJava.g3:352:5: ( qualifiedName )
			DebugEnterAlt(1);
			// JavaJava.g3:352:9: qualifiedName
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(352, 9);
			PushFollow(Follow._qualifiedName_in_typeName2245);
			qualifiedName207=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName207.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeName", 52);
			LeaveRule("typeName", 52);
			LeaveRule_typeName();
			if (state.backtracking > 0) { Memoize(input, 52, typeName_StartIndex); }

		}
		DebugLocation(353, 4);
		} finally { DebugExitRule(GrammarFileName, "typeName"); }
		return retval;

	}
	// $ANTLR end "typeName"

	partial void EnterRule_type();
	partial void LeaveRule_type();
	// $ANTLR start "type"
	// JavaJava.g3:355:1: type : ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* );
	[GrammarRule("type")]
	private AstParserRuleReturnScope<object, IToken> type()
	{
		EnterRule_type();
		EnterRule("type", 53);
		TraceIn("type", 53);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int type_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal209 = default(IToken);
		IToken char_literal210 = default(IToken);
		IToken char_literal212 = default(IToken);
		IToken char_literal213 = default(IToken);
		AstParserRuleReturnScope<object, IToken> classOrInterfaceType208 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> primitiveType211 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal209_tree = default(object);
		object char_literal210_tree = default(object);
		object char_literal212_tree = default(object);
		object char_literal213_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "type");
		DebugLocation(355, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 53)) { return retval; }

			// JavaJava.g3:356:2: ( classOrInterfaceType ( '[' ']' )* | primitiveType ( '[' ']' )* )
			int alt69=2;
			try { DebugEnterDecision(69, false);
			int LA69_1 = input.LA(1);

			if ((LA69_1==Identifier))
			{
				alt69 = 1;
			}
			else if ((LA69_1==60||LA69_1==62||LA69_1==65||LA69_1==70||LA69_1==76||LA69_1==82||LA69_1==84||LA69_1==93))
			{
				alt69 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 69, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(69); }
			switch (alt69)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:356:4: classOrInterfaceType ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(356, 4);
				PushFollow(Follow._classOrInterfaceType_in_type2259);
				classOrInterfaceType208=classOrInterfaceType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceType208.Tree);
				DebugLocation(356, 25);
				// JavaJava.g3:356:25: ( '[' ']' )*
				try { DebugEnterSubRule(67);
				while (true)
				{
					int alt67=2;
					try { DebugEnterDecision(67, false);
					int LA67_1 = input.LA(1);

					if ((LA67_1==55))
					{
						alt67 = 1;
					}


					} finally { DebugExitDecision(67); }
					switch ( alt67 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:356:26: '[' ']'
						{
						DebugLocation(356, 26);
						char_literal209=(IToken)Match(input,55,Follow._55_in_type2262); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal209_tree = (object)adaptor.Create(char_literal209);
						adaptor.AddChild(root_0, char_literal209_tree);
						}
						DebugLocation(356, 30);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(356, 40);
						char_literal210=(IToken)Match(input,56,Follow._56_in_type2266); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal210_tree = (object)adaptor.Create(char_literal210);
						adaptor.AddChild(root_0, char_literal210_tree);
						}
						DebugLocation(356, 44);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						goto loop67;
					}
				}

				loop67:
					;

				} finally { DebugExitSubRule(67); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:357:4: primitiveType ( '[' ']' )*
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(357, 4);
				PushFollow(Follow._primitiveType_in_type2276);
				primitiveType211=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType211.Tree);
				DebugLocation(357, 18);
				if (state.backtracking == 0)
				{
					primitive=true;
				}
				DebugLocation(357, 35);
				// JavaJava.g3:357:35: ( '[' ']' )*
				try { DebugEnterSubRule(68);
				while (true)
				{
					int alt68=2;
					try { DebugEnterDecision(68, false);
					int LA68_1 = input.LA(1);

					if ((LA68_1==55))
					{
						alt68 = 1;
					}


					} finally { DebugExitDecision(68); }
					switch ( alt68 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:357:36: '[' ']'
						{
						DebugLocation(357, 36);
						char_literal212=(IToken)Match(input,55,Follow._55_in_type2280); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal212_tree = (object)adaptor.Create(char_literal212);
						adaptor.AddChild(root_0, char_literal212_tree);
						}
						DebugLocation(357, 40);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(357, 50);
						char_literal213=(IToken)Match(input,56,Follow._56_in_type2284); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal213_tree = (object)adaptor.Create(char_literal213);
						adaptor.AddChild(root_0, char_literal213_tree);
						}
						DebugLocation(357, 54);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						goto loop68;
					}
				}

				loop68:
					;

				} finally { DebugExitSubRule(68); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("type", 53);
			LeaveRule("type", 53);
			LeaveRule_type();
			if (state.backtracking > 0) { Memoize(input, 53, type_StartIndex); }

		}
		DebugLocation(358, 1);
		} finally { DebugExitRule(GrammarFileName, "type"); }
		return retval;

	}
	// $ANTLR end "type"

	partial void EnterRule_classOrInterfaceType();
	partial void LeaveRule_classOrInterfaceType();
	// $ANTLR start "classOrInterfaceType"
	// JavaJava.g3:362:1: classOrInterfaceType : I7= Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )* ;
	[GrammarRule("classOrInterfaceType")]
	private AstParserRuleReturnScope<object, IToken> classOrInterfaceType()
	{
		EnterRule_classOrInterfaceType();
		EnterRule("classOrInterfaceType", 54);
		TraceIn("classOrInterfaceType", 54);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classOrInterfaceType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken I7 = default(IToken);
		IToken char_literal215 = default(IToken);
		IToken Identifier216 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeArguments214 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeArguments217 = default(AstParserRuleReturnScope<object, IToken>);

		object I7_tree = default(object);
		object char_literal215_tree = default(object);
		object Identifier216_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "classOrInterfaceType");
		DebugLocation(362, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 54)) { return retval; }

			// JavaJava.g3:363:2: (I7= Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )* )
			DebugEnterAlt(1);
			// JavaJava.g3:363:4: I7= Identifier ( typeArguments )? ( '.' Identifier ( typeArguments )? )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(363, 6);
			I7=(IToken)Match(input,Identifier,Follow._Identifier_in_classOrInterfaceType2303); if (state.failed) return retval;
			if (state.backtracking == 0) {
			I7_tree = (object)adaptor.Create(I7);
			adaptor.AddChild(root_0, I7_tree);
			}
			DebugLocation(363, 18);
			if (state.backtracking == 0)
			{
				 id((I7!=null?I7.Text:default(string)));
			}
			DebugLocation(363, 35);
			// JavaJava.g3:363:35: ( typeArguments )?
			int alt70=2;
			try { DebugEnterSubRule(70);
			try { DebugEnterDecision(70, false);
			int LA70_1 = input.LA(1);

			if ((LA70_1==49))
			{
				int LA70_2 = input.LA(2);

				if ((LA70_2==Identifier||LA70_2==53||LA70_2==60||LA70_2==62||LA70_2==65||LA70_2==70||LA70_2==76||LA70_2==82||LA70_2==84||LA70_2==93))
				{
					alt70 = 1;
				}
			}
			} finally { DebugExitDecision(70); }
			switch (alt70)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:363:35: typeArguments
				{
				DebugLocation(363, 35);
				PushFollow(Follow._typeArguments_in_classOrInterfaceType2307);
				typeArguments214=typeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments214.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(70); }

			DebugLocation(363, 50);
			// JavaJava.g3:363:50: ( '.' Identifier ( typeArguments )? )*
			try { DebugEnterSubRule(72);
			while (true)
			{
				int alt72=2;
				try { DebugEnterDecision(72, false);
				int LA72_1 = input.LA(1);

				if ((LA72_1==43))
				{
					alt72 = 1;
				}


				} finally { DebugExitDecision(72); }
				switch ( alt72 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:363:51: '.' Identifier ( typeArguments )?
					{
					DebugLocation(363, 51);
					char_literal215=(IToken)Match(input,43,Follow._43_in_classOrInterfaceType2311); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal215_tree = (object)adaptor.Create(char_literal215);
					adaptor.AddChild(root_0, char_literal215_tree);
					}
					DebugLocation(363, 55);
					if (state.backtracking == 0)
					{
						s(".");
					}
					DebugLocation(363, 65);
					Identifier216=(IToken)Match(input,Identifier,Follow._Identifier_in_classOrInterfaceType2315); if (state.failed) return retval;
					if (state.backtracking == 0) {
					Identifier216_tree = (object)adaptor.Create(Identifier216);
					adaptor.AddChild(root_0, Identifier216_tree);
					}
					DebugLocation(363, 76);
					// JavaJava.g3:363:76: ( typeArguments )?
					int alt71=2;
					try { DebugEnterSubRule(71);
					try { DebugEnterDecision(71, false);
					int LA71_1 = input.LA(1);

					if ((LA71_1==49))
					{
						int LA71_2 = input.LA(2);

						if ((LA71_2==Identifier||LA71_2==53||LA71_2==60||LA71_2==62||LA71_2==65||LA71_2==70||LA71_2==76||LA71_2==82||LA71_2==84||LA71_2==93))
						{
							alt71 = 1;
						}
					}
					} finally { DebugExitDecision(71); }
					switch (alt71)
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:363:76: typeArguments
						{
						DebugLocation(363, 76);
						PushFollow(Follow._typeArguments_in_classOrInterfaceType2317);
						typeArguments217=typeArguments();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, typeArguments217.Tree);

						}
						break;

					}
					} finally { DebugExitSubRule(71); }


					}
					break;

				default:
					goto loop72;
				}
			}

			loop72:
				;

			} finally { DebugExitSubRule(72); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classOrInterfaceType", 54);
			LeaveRule("classOrInterfaceType", 54);
			LeaveRule_classOrInterfaceType();
			if (state.backtracking > 0) { Memoize(input, 54, classOrInterfaceType_StartIndex); }

		}
		DebugLocation(364, 1);
		} finally { DebugExitRule(GrammarFileName, "classOrInterfaceType"); }
		return retval;

	}
	// $ANTLR end "classOrInterfaceType"

	partial void EnterRule_primitiveType();
	partial void LeaveRule_primitiveType();
	// $ANTLR start "primitiveType"
	// JavaJava.g3:366:1: primitiveType : ( 'bool' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );
	[GrammarRule("primitiveType")]
	private AstParserRuleReturnScope<object, IToken> primitiveType()
	{
		EnterRule_primitiveType();
		EnterRule("primitiveType", 55);
		TraceIn("primitiveType", 55);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int primitiveType_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal218 = default(IToken);
		IToken string_literal219 = default(IToken);
		IToken string_literal220 = default(IToken);
		IToken string_literal221 = default(IToken);
		IToken string_literal222 = default(IToken);
		IToken string_literal223 = default(IToken);
		IToken string_literal224 = default(IToken);
		IToken string_literal225 = default(IToken);

		object string_literal218_tree = default(object);
		object string_literal219_tree = default(object);
		object string_literal220_tree = default(object);
		object string_literal221_tree = default(object);
		object string_literal222_tree = default(object);
		object string_literal223_tree = default(object);
		object string_literal224_tree = default(object);
		object string_literal225_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primitiveType");
		DebugLocation(366, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 55)) { return retval; }

			// JavaJava.g3:367:5: ( 'bool' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' )
			int alt73=8;
			try { DebugEnterDecision(73, false);
			switch (input.LA(1))
			{
			case 60:
				{
				alt73 = 1;
				}
				break;
			case 65:
				{
				alt73 = 2;
				}
				break;
			case 62:
				{
				alt73 = 3;
				}
				break;
			case 93:
				{
				alt73 = 4;
				}
				break;
			case 82:
				{
				alt73 = 5;
				}
				break;
			case 84:
				{
				alt73 = 6;
				}
				break;
			case 76:
				{
				alt73 = 7;
				}
				break;
			case 70:
				{
				alt73 = 8;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 73, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(73); }
			switch (alt73)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:367:9: 'bool'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(367, 9);
				string_literal218=(IToken)Match(input,60,Follow._60_in_primitiveType2338); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal218_tree = (object)adaptor.Create(string_literal218);
				adaptor.AddChild(root_0, string_literal218_tree);
				}
				DebugLocation(367, 16);
				if (state.backtracking == 0)
				{
					keywordCount++; PrimitiveType = "bool"; JavaMetrics.UniqueKeywords.Add("bool");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:368:9: 'char'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(368, 9);
				string_literal219=(IToken)Match(input,65,Follow._65_in_primitiveType2350); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal219_tree = (object)adaptor.Create(string_literal219);
				adaptor.AddChild(root_0, string_literal219_tree);
				}
				DebugLocation(368, 17);
				if (state.backtracking == 0)
				{
					keywordCount++;  PrimitiveType = "char";  JavaMetrics.UniqueKeywords.Add("char");
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:369:9: 'byte'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(369, 9);
				string_literal220=(IToken)Match(input,62,Follow._62_in_primitiveType2363); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal220_tree = (object)adaptor.Create(string_literal220);
				adaptor.AddChild(root_0, string_literal220_tree);
				}
				DebugLocation(369, 17);
				if (state.backtracking == 0)
				{
					keywordCount++;  PrimitiveType = "byte"; JavaMetrics.UniqueKeywords.Add("byte");
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:370:9: 'short'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(370, 9);
				string_literal221=(IToken)Match(input,93,Follow._93_in_primitiveType2376); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal221_tree = (object)adaptor.Create(string_literal221);
				adaptor.AddChild(root_0, string_literal221_tree);
				}
				DebugLocation(370, 18);
				if (state.backtracking == 0)
				{
					keywordCount++;  PrimitiveType = "short"; JavaMetrics.UniqueKeywords.Add("short");
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:371:9: 'int'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(371, 9);
				string_literal222=(IToken)Match(input,82,Follow._82_in_primitiveType2389); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal222_tree = (object)adaptor.Create(string_literal222);
				adaptor.AddChild(root_0, string_literal222_tree);
				}
				DebugLocation(371, 17);
				if (state.backtracking == 0)
				{
					keywordCount++;  PrimitiveType = "int"; JavaMetrics.UniqueKeywords.Add("int");
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:372:9: 'long'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(372, 9);
				string_literal223=(IToken)Match(input,84,Follow._84_in_primitiveType2403); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal223_tree = (object)adaptor.Create(string_literal223);
				adaptor.AddChild(root_0, string_literal223_tree);
				}
				DebugLocation(372, 17);
				if (state.backtracking == 0)
				{
					keywordCount++;  PrimitiveType = "long"; JavaMetrics.UniqueKeywords.Add("long");
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// JavaJava.g3:373:9: 'float'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(373, 9);
				string_literal224=(IToken)Match(input,76,Follow._76_in_primitiveType2416); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal224_tree = (object)adaptor.Create(string_literal224);
				adaptor.AddChild(root_0, string_literal224_tree);
				}
				DebugLocation(373, 18);
				if (state.backtracking == 0)
				{
					keywordCount++;  PrimitiveType = "float"; JavaMetrics.UniqueKeywords.Add("float");
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// JavaJava.g3:374:9: 'double'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(374, 9);
				string_literal225=(IToken)Match(input,70,Follow._70_in_primitiveType2429); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal225_tree = (object)adaptor.Create(string_literal225);
				adaptor.AddChild(root_0, string_literal225_tree);
				}
				DebugLocation(374, 19);
				if (state.backtracking == 0)
				{
					keywordCount++;  PrimitiveType = "double"; JavaMetrics.UniqueKeywords.Add("double");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primitiveType", 55);
			LeaveRule("primitiveType", 55);
			LeaveRule_primitiveType();
			if (state.backtracking > 0) { Memoize(input, 55, primitiveType_StartIndex); }

		}
		DebugLocation(375, 4);
		} finally { DebugExitRule(GrammarFileName, "primitiveType"); }
		return retval;

	}
	// $ANTLR end "primitiveType"

	partial void EnterRule_variableModifier();
	partial void LeaveRule_variableModifier();
	// $ANTLR start "variableModifier"
	// JavaJava.g3:377:1: variableModifier : ( 'final' | annotation );
	[GrammarRule("variableModifier")]
	private AstParserRuleReturnScope<object, IToken> variableModifier()
	{
		EnterRule_variableModifier();
		EnterRule("variableModifier", 56);
		TraceIn("variableModifier", 56);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int variableModifier_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal226 = default(IToken);
		AstParserRuleReturnScope<object, IToken> annotation227 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal226_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "variableModifier");
		DebugLocation(377, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 56)) { return retval; }

			// JavaJava.g3:378:5: ( 'final' | annotation )
			int alt74=2;
			try { DebugEnterDecision(74, false);
			int LA74_1 = input.LA(1);

			if ((LA74_1==74))
			{
				alt74 = 1;
			}
			else if ((LA74_1==54))
			{
				alt74 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 74, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(74); }
			switch (alt74)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:378:9: 'final'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(378, 9);
				string_literal226=(IToken)Match(input,74,Follow._74_in_variableModifier2451); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal226_tree = (object)adaptor.Create(string_literal226);
				adaptor.AddChild(root_0, string_literal226_tree);
				}
				DebugLocation(378, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("final");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:379:9: annotation
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(379, 9);
				PushFollow(Follow._annotation_in_variableModifier2462);
				annotation227=annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotation227.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableModifier", 56);
			LeaveRule("variableModifier", 56);
			LeaveRule_variableModifier();
			if (state.backtracking > 0) { Memoize(input, 56, variableModifier_StartIndex); }

		}
		DebugLocation(380, 4);
		} finally { DebugExitRule(GrammarFileName, "variableModifier"); }
		return retval;

	}
	// $ANTLR end "variableModifier"

	partial void EnterRule_typeArguments();
	partial void LeaveRule_typeArguments();
	// $ANTLR start "typeArguments"
	// JavaJava.g3:382:1: typeArguments : '<' typeArgument ( ',' typeArgument )* '>' ;
	[GrammarRule("typeArguments")]
	private AstParserRuleReturnScope<object, IToken> typeArguments()
	{
		EnterRule_typeArguments();
		EnterRule("typeArguments", 57);
		TraceIn("typeArguments", 57);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeArguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal228 = default(IToken);
		IToken char_literal230 = default(IToken);
		IToken char_literal232 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeArgument229 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> typeArgument231 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal228_tree = default(object);
		object char_literal230_tree = default(object);
		object char_literal232_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeArguments");
		DebugLocation(382, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 57)) { return retval; }

			// JavaJava.g3:383:5: ( '<' typeArgument ( ',' typeArgument )* '>' )
			DebugEnterAlt(1);
			// JavaJava.g3:383:9: '<' typeArgument ( ',' typeArgument )* '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(383, 9);
			char_literal228=(IToken)Match(input,49,Follow._49_in_typeArguments2481); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal228_tree = (object)adaptor.Create(char_literal228);
			adaptor.AddChild(root_0, char_literal228_tree);
			}
			DebugLocation(383, 13);
			if (state.backtracking == 0)
			{
				s("<");
			}
			DebugLocation(383, 23);
			PushFollow(Follow._typeArgument_in_typeArguments2485);
			typeArgument229=typeArgument();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgument229.Tree);
			DebugLocation(383, 36);
			// JavaJava.g3:383:36: ( ',' typeArgument )*
			try { DebugEnterSubRule(75);
			while (true)
			{
				int alt75=2;
				try { DebugEnterDecision(75, false);
				int LA75_1 = input.LA(1);

				if ((LA75_1==39))
				{
					alt75 = 1;
				}


				} finally { DebugExitDecision(75); }
				switch ( alt75 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:383:37: ',' typeArgument
					{
					DebugLocation(383, 37);
					char_literal230=(IToken)Match(input,39,Follow._39_in_typeArguments2488); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal230_tree = (object)adaptor.Create(char_literal230);
					adaptor.AddChild(root_0, char_literal230_tree);
					}
					DebugLocation(383, 40);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(383, 50);
					PushFollow(Follow._typeArgument_in_typeArguments2491);
					typeArgument231=typeArgument();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, typeArgument231.Tree);

					}
					break;

				default:
					goto loop75;
				}
			}

			loop75:
				;

			} finally { DebugExitSubRule(75); }

			DebugLocation(383, 65);
			char_literal232=(IToken)Match(input,52,Follow._52_in_typeArguments2495); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal232_tree = (object)adaptor.Create(char_literal232);
			adaptor.AddChild(root_0, char_literal232_tree);
			}
			DebugLocation(383, 68);
			if (state.backtracking == 0)
			{
				s(">");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeArguments", 57);
			LeaveRule("typeArguments", 57);
			LeaveRule_typeArguments();
			if (state.backtracking > 0) { Memoize(input, 57, typeArguments_StartIndex); }

		}
		DebugLocation(384, 4);
		} finally { DebugExitRule(GrammarFileName, "typeArguments"); }
		return retval;

	}
	// $ANTLR end "typeArguments"

	partial void EnterRule_typeArgument();
	partial void LeaveRule_typeArgument();
	// $ANTLR start "typeArgument"
	// JavaJava.g3:386:1: typeArgument : ( type | '?' ( ( 'extends' | 'super' ) type )? );
	[GrammarRule("typeArgument")]
	private AstParserRuleReturnScope<object, IToken> typeArgument()
	{
		EnterRule_typeArgument();
		EnterRule("typeArgument", 58);
		TraceIn("typeArgument", 58);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int typeArgument_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal234 = default(IToken);
		IToken string_literal235 = default(IToken);
		IToken string_literal236 = default(IToken);
		AstParserRuleReturnScope<object, IToken> type233 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type237 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal234_tree = default(object);
		object string_literal235_tree = default(object);
		object string_literal236_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "typeArgument");
		DebugLocation(386, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 58)) { return retval; }

			// JavaJava.g3:387:5: ( type | '?' ( ( 'extends' | 'super' ) type )? )
			int alt78=2;
			try { DebugEnterDecision(78, false);
			int LA78_1 = input.LA(1);

			if ((LA78_1==Identifier||LA78_1==60||LA78_1==62||LA78_1==65||LA78_1==70||LA78_1==76||LA78_1==82||LA78_1==84||LA78_1==93))
			{
				alt78 = 1;
			}
			else if ((LA78_1==53))
			{
				alt78 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 78, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(78); }
			switch (alt78)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:387:9: type
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(387, 9);
				PushFollow(Follow._type_in_typeArgument2519);
				type233=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type233.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:388:9: '?' ( ( 'extends' | 'super' ) type )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(388, 9);
				char_literal234=(IToken)Match(input,53,Follow._53_in_typeArgument2529); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal234_tree = (object)adaptor.Create(char_literal234);
				adaptor.AddChild(root_0, char_literal234_tree);
				}
				DebugLocation(388, 13);
				// JavaJava.g3:388:13: ( ( 'extends' | 'super' ) type )?
				int alt77=2;
				try { DebugEnterSubRule(77);
				try { DebugEnterDecision(77, false);
				int LA77_1 = input.LA(1);

				if ((LA77_1==72||LA77_1==96))
				{
					alt77 = 1;
				}
				} finally { DebugExitDecision(77); }
				switch (alt77)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:388:14: ( 'extends' | 'super' ) type
					{
					DebugLocation(388, 14);
					// JavaJava.g3:388:14: ( 'extends' | 'super' )
					int alt76=2;
					try { DebugEnterSubRule(76);
					try { DebugEnterDecision(76, false);
					int LA76_1 = input.LA(1);

					if ((LA76_1==72))
					{
						alt76 = 1;
					}
					else if ((LA76_1==96))
					{
						alt76 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 76, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(76); }
					switch (alt76)
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:388:15: 'extends'
						{
						DebugLocation(388, 15);
						string_literal235=(IToken)Match(input,72,Follow._72_in_typeArgument2533); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal235_tree = (object)adaptor.Create(string_literal235);
						adaptor.AddChild(root_0, string_literal235_tree);
						}
						DebugLocation(388, 24);
						if (state.backtracking == 0)
						{
							keywordCount++;JavaMetrics.UniqueKeywords.Add("extends");
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// JavaJava.g3:388:86: 'super'
						{
						DebugLocation(388, 86);
						string_literal236=(IToken)Match(input,96,Follow._96_in_typeArgument2538); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal236_tree = (object)adaptor.Create(string_literal236);
						adaptor.AddChild(root_0, string_literal236_tree);
						}
						DebugLocation(388, 94);
						if (state.backtracking == 0)
						{
							keywordCount++;JavaMetrics.UniqueKeywords.Add("super");
						}

						}
						break;

					}
					} finally { DebugExitSubRule(76); }

					DebugLocation(388, 153);
					PushFollow(Follow._type_in_typeArgument2543);
					type237=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type237.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(77); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("typeArgument", 58);
			LeaveRule("typeArgument", 58);
			LeaveRule_typeArgument();
			if (state.backtracking > 0) { Memoize(input, 58, typeArgument_StartIndex); }

		}
		DebugLocation(389, 4);
		} finally { DebugExitRule(GrammarFileName, "typeArgument"); }
		return retval;

	}
	// $ANTLR end "typeArgument"

	partial void EnterRule_qualifiedNameList();
	partial void LeaveRule_qualifiedNameList();
	// $ANTLR start "qualifiedNameList"
	// JavaJava.g3:391:1: qualifiedNameList : qualifiedName ( ',' qualifiedName )* ;
	[GrammarRule("qualifiedNameList")]
	private AstParserRuleReturnScope<object, IToken> qualifiedNameList()
	{
		EnterRule_qualifiedNameList();
		EnterRule("qualifiedNameList", 59);
		TraceIn("qualifiedNameList", 59);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int qualifiedNameList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal239 = default(IToken);
		AstParserRuleReturnScope<object, IToken> qualifiedName238 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> qualifiedName240 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal239_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedNameList");
		DebugLocation(391, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 59)) { return retval; }

			// JavaJava.g3:392:5: ( qualifiedName ( ',' qualifiedName )* )
			DebugEnterAlt(1);
			// JavaJava.g3:392:9: qualifiedName ( ',' qualifiedName )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(392, 9);
			PushFollow(Follow._qualifiedName_in_qualifiedNameList2569);
			qualifiedName238=qualifiedName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName238.Tree);
			DebugLocation(392, 23);
			// JavaJava.g3:392:23: ( ',' qualifiedName )*
			try { DebugEnterSubRule(79);
			while (true)
			{
				int alt79=2;
				try { DebugEnterDecision(79, false);
				int LA79_1 = input.LA(1);

				if ((LA79_1==39))
				{
					alt79 = 1;
				}


				} finally { DebugExitDecision(79); }
				switch ( alt79 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:392:24: ',' qualifiedName
					{
					DebugLocation(392, 24);
					char_literal239=(IToken)Match(input,39,Follow._39_in_qualifiedNameList2572); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal239_tree = (object)adaptor.Create(char_literal239);
					adaptor.AddChild(root_0, char_literal239_tree);
					}
					DebugLocation(392, 28);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(392, 38);
					PushFollow(Follow._qualifiedName_in_qualifiedNameList2576);
					qualifiedName240=qualifiedName();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, qualifiedName240.Tree);

					}
					break;

				default:
					goto loop79;
				}
			}

			loop79:
				;

			} finally { DebugExitSubRule(79); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedNameList", 59);
			LeaveRule("qualifiedNameList", 59);
			LeaveRule_qualifiedNameList();
			if (state.backtracking > 0) { Memoize(input, 59, qualifiedNameList_StartIndex); }

		}
		DebugLocation(393, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedNameList"); }
		return retval;

	}
	// $ANTLR end "qualifiedNameList"

	partial void EnterRule_formalParameters();
	partial void LeaveRule_formalParameters();
	// $ANTLR start "formalParameters"
	// JavaJava.g3:395:1: formalParameters : '(' ( formalParameterDecls )? ')' ;
	[GrammarRule("formalParameters")]
	private AstParserRuleReturnScope<object, IToken> formalParameters()
	{
		EnterRule_formalParameters();
		EnterRule("formalParameters", 60);
		TraceIn("formalParameters", 60);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int formalParameters_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal241 = default(IToken);
		IToken char_literal243 = default(IToken);
		AstParserRuleReturnScope<object, IToken> formalParameterDecls242 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal241_tree = default(object);
		object char_literal243_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameters");
		DebugLocation(395, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 60)) { return retval; }

			// JavaJava.g3:396:5: ( '(' ( formalParameterDecls )? ')' )
			DebugEnterAlt(1);
			// JavaJava.g3:396:9: '(' ( formalParameterDecls )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(396, 9);
			char_literal241=(IToken)Match(input,32,Follow._32_in_formalParameters2597); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal241_tree = (object)adaptor.Create(char_literal241);
			adaptor.AddChild(root_0, char_literal241_tree);
			}
			DebugLocation(396, 13);
			if (state.backtracking == 0)
			{
				s("(");
			}
			DebugLocation(396, 23);
			// JavaJava.g3:396:23: ( formalParameterDecls )?
			int alt80=2;
			try { DebugEnterSubRule(80);
			try { DebugEnterDecision(80, false);
			int LA80_1 = input.LA(1);

			if ((LA80_1==Identifier||LA80_1==54||LA80_1==60||LA80_1==62||LA80_1==65||LA80_1==70||LA80_1==74||LA80_1==76||LA80_1==82||LA80_1==84||LA80_1==93))
			{
				alt80 = 1;
			}
			} finally { DebugExitDecision(80); }
			switch (alt80)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:396:23: formalParameterDecls
				{
				DebugLocation(396, 23);
				PushFollow(Follow._formalParameterDecls_in_formalParameters2601);
				formalParameterDecls242=formalParameterDecls();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameterDecls242.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(80); }

			DebugLocation(396, 45);
			char_literal243=(IToken)Match(input,33,Follow._33_in_formalParameters2604); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal243_tree = (object)adaptor.Create(char_literal243);
			adaptor.AddChild(root_0, char_literal243_tree);
			}
			DebugLocation(396, 49);
			if (state.backtracking == 0)
			{
				s(")");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameters", 60);
			LeaveRule("formalParameters", 60);
			LeaveRule_formalParameters();
			if (state.backtracking > 0) { Memoize(input, 60, formalParameters_StartIndex); }

		}
		DebugLocation(397, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameters"); }
		return retval;

	}
	// $ANTLR end "formalParameters"

	partial void EnterRule_formalParameterDecls();
	partial void LeaveRule_formalParameterDecls();
	// $ANTLR start "formalParameterDecls"
	// JavaJava.g3:399:1: formalParameterDecls : variableModifiers type formalParameterDeclsRest ;
	[GrammarRule("formalParameterDecls")]
	private AstParserRuleReturnScope<object, IToken> formalParameterDecls()
	{
		EnterRule_formalParameterDecls();
		EnterRule("formalParameterDecls", 61);
		TraceIn("formalParameterDecls", 61);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int formalParameterDecls_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> variableModifiers244 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type245 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> formalParameterDeclsRest246 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "formalParameterDecls");
		DebugLocation(399, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 61)) { return retval; }

			// JavaJava.g3:400:5: ( variableModifiers type formalParameterDeclsRest )
			DebugEnterAlt(1);
			// JavaJava.g3:400:9: variableModifiers type formalParameterDeclsRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(400, 9);
			PushFollow(Follow._variableModifiers_in_formalParameterDecls2630);
			variableModifiers244=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers244.Tree);
			DebugLocation(400, 27);
			PushFollow(Follow._type_in_formalParameterDecls2632);
			type245=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type245.Tree);
			DebugLocation(400, 32);
			PushFollow(Follow._formalParameterDeclsRest_in_formalParameterDecls2634);
			formalParameterDeclsRest246=formalParameterDeclsRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameterDeclsRest246.Tree);
			DebugLocation(400, 57);
			if (state.backtracking == 0)
			{
				primitive = false;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameterDecls", 61);
			LeaveRule("formalParameterDecls", 61);
			LeaveRule_formalParameterDecls();
			if (state.backtracking > 0) { Memoize(input, 61, formalParameterDecls_StartIndex); }

		}
		DebugLocation(401, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameterDecls"); }
		return retval;

	}
	// $ANTLR end "formalParameterDecls"

	partial void EnterRule_formalParameterDeclsRest();
	partial void LeaveRule_formalParameterDeclsRest();
	// $ANTLR start "formalParameterDeclsRest"
	// JavaJava.g3:403:1: formalParameterDeclsRest : ( variableDeclaratorId ( ',' formalParameterDecls )? | '...' variableDeclaratorId );
	[GrammarRule("formalParameterDeclsRest")]
	private AstParserRuleReturnScope<object, IToken> formalParameterDeclsRest()
	{
		EnterRule_formalParameterDeclsRest();
		EnterRule("formalParameterDeclsRest", 62);
		TraceIn("formalParameterDeclsRest", 62);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int formalParameterDeclsRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal248 = default(IToken);
		IToken string_literal250 = default(IToken);
		AstParserRuleReturnScope<object, IToken> variableDeclaratorId247 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> formalParameterDecls249 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> variableDeclaratorId251 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal248_tree = default(object);
		object string_literal250_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "formalParameterDeclsRest");
		DebugLocation(403, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 62)) { return retval; }

			// JavaJava.g3:404:5: ( variableDeclaratorId ( ',' formalParameterDecls )? | '...' variableDeclaratorId )
			int alt82=2;
			try { DebugEnterDecision(82, false);
			int LA82_1 = input.LA(1);

			if ((LA82_1==Identifier))
			{
				alt82 = 1;
			}
			else if ((LA82_1==44))
			{
				alt82 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 82, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(82); }
			switch (alt82)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:404:9: variableDeclaratorId ( ',' formalParameterDecls )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(404, 9);
				PushFollow(Follow._variableDeclaratorId_in_formalParameterDeclsRest2659);
				variableDeclaratorId247=variableDeclaratorId();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclaratorId247.Tree);
				DebugLocation(404, 30);
				// JavaJava.g3:404:30: ( ',' formalParameterDecls )?
				int alt81=2;
				try { DebugEnterSubRule(81);
				try { DebugEnterDecision(81, false);
				int LA81_1 = input.LA(1);

				if ((LA81_1==39))
				{
					alt81 = 1;
				}
				} finally { DebugExitDecision(81); }
				switch (alt81)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:404:31: ',' formalParameterDecls
					{
					DebugLocation(404, 31);
					char_literal248=(IToken)Match(input,39,Follow._39_in_formalParameterDeclsRest2662); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal248_tree = (object)adaptor.Create(char_literal248);
					adaptor.AddChild(root_0, char_literal248_tree);
					}
					DebugLocation(404, 35);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(404, 45);
					PushFollow(Follow._formalParameterDecls_in_formalParameterDeclsRest2666);
					formalParameterDecls249=formalParameterDecls();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameterDecls249.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(81); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:405:9: '...' variableDeclaratorId
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(405, 9);
				string_literal250=(IToken)Match(input,44,Follow._44_in_formalParameterDeclsRest2678); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal250_tree = (object)adaptor.Create(string_literal250);
				adaptor.AddChild(root_0, string_literal250_tree);
				}
				DebugLocation(405, 15);
				PushFollow(Follow._variableDeclaratorId_in_formalParameterDeclsRest2680);
				variableDeclaratorId251=variableDeclaratorId();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclaratorId251.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameterDeclsRest", 62);
			LeaveRule("formalParameterDeclsRest", 62);
			LeaveRule_formalParameterDeclsRest();
			if (state.backtracking > 0) { Memoize(input, 62, formalParameterDeclsRest_StartIndex); }

		}
		DebugLocation(406, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameterDeclsRest"); }
		return retval;

	}
	// $ANTLR end "formalParameterDeclsRest"

	partial void EnterRule_methodBody();
	partial void LeaveRule_methodBody();
	// $ANTLR start "methodBody"
	// JavaJava.g3:408:1: methodBody : block ;
	[GrammarRule("methodBody")]
	private AstParserRuleReturnScope<object, IToken> methodBody()
	{
		EnterRule_methodBody();
		EnterRule("methodBody", 63);
		TraceIn("methodBody", 63);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int methodBody_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> block252 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "methodBody");
		DebugLocation(408, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 63)) { return retval; }

			// JavaJava.g3:409:5: ( block )
			DebugEnterAlt(1);
			// JavaJava.g3:409:8: block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(409, 8);
			PushFollow(Follow._block_in_methodBody2702);
			block252=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block252.Tree);
			DebugLocation(409, 14);
			if (state.backtracking == 0)
			{
				Console.Write("McCabe for " + methodName + " = " + (mmc+1)); JavaMetrics.MccabeValues.Add(methodName + " = " + (mmc+1));mmc = 0;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("methodBody", 63);
			LeaveRule("methodBody", 63);
			LeaveRule_methodBody();
			if (state.backtracking > 0) { Memoize(input, 63, methodBody_StartIndex); }

		}
		DebugLocation(410, 4);
		} finally { DebugExitRule(GrammarFileName, "methodBody"); }
		return retval;

	}
	// $ANTLR end "methodBody"

	partial void EnterRule_constructorBody();
	partial void LeaveRule_constructorBody();
	// $ANTLR start "constructorBody"
	// JavaJava.g3:412:1: constructorBody : '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' ;
	[GrammarRule("constructorBody")]
	private AstParserRuleReturnScope<object, IToken> constructorBody()
	{
		EnterRule_constructorBody();
		EnterRule("constructorBody", 64);
		TraceIn("constructorBody", 64);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int constructorBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal253 = default(IToken);
		IToken char_literal256 = default(IToken);
		AstParserRuleReturnScope<object, IToken> explicitConstructorInvocation254 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> blockStatement255 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal253_tree = default(object);
		object char_literal256_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "constructorBody");
		DebugLocation(412, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 64)) { return retval; }

			// JavaJava.g3:413:5: ( '{' ( explicitConstructorInvocation )? ( blockStatement )* '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:413:9: '{' ( explicitConstructorInvocation )? ( blockStatement )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(413, 9);
			char_literal253=(IToken)Match(input,108,Follow._108_in_constructorBody2723); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal253_tree = (object)adaptor.Create(char_literal253);
			adaptor.AddChild(root_0, char_literal253_tree);
			}
			DebugLocation(413, 12);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(413, 22);
			// JavaJava.g3:413:22: ( explicitConstructorInvocation )?
			int alt83=2;
			try { DebugEnterSubRule(83);
			try { DebugEnterDecision(83, false);
			switch (input.LA(1))
			{
			case 49:
				{
				alt83 = 1;
				}
				break;
			case 99:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 96:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 32:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case HexLiteral:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case OctalLiteral:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case DecimalLiteral:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case FloatingPointLiteral:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case CharacterLiteral:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case StringLiteral:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 103:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 73:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 87:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 86:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case Identifier:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 60:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 65:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 62:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 93:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 82:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 84:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 76:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 70:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			case 105:
				{
				int LA83_2 = input.LA(2);

				if ((EvaluatePredicate(synpred113_JavaJava_fragment)))
				{
					alt83 = 1;
				}
				}
				break;
			}

			} finally { DebugExitDecision(83); }
			switch (alt83)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:413:22: explicitConstructorInvocation
				{
				DebugLocation(413, 22);
				PushFollow(Follow._explicitConstructorInvocation_in_constructorBody2726);
				explicitConstructorInvocation254=explicitConstructorInvocation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explicitConstructorInvocation254.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(83); }

			DebugLocation(413, 53);
			// JavaJava.g3:413:53: ( blockStatement )*
			try { DebugEnterSubRule(84);
			while (true)
			{
				int alt84=2;
				try { DebugEnterDecision(84, false);
				int LA84_1 = input.LA(1);

				if ((LA84_1==ASSERT||(LA84_1>=CharacterLiteral && LA84_1<=ENUM)||LA84_1==FloatingPointLiteral||(LA84_1>=HexLiteral && LA84_1<=Identifier)||(LA84_1>=OctalLiteral && LA84_1<=StringLiteral)||LA84_1==25||LA84_1==32||(LA84_1>=36 && LA84_1<=37)||(LA84_1>=40 && LA84_1<=41)||LA84_1==48||LA84_1==54||(LA84_1>=59 && LA84_1<=62)||(LA84_1>=65 && LA84_1<=67)||(LA84_1>=69 && LA84_1<=70)||(LA84_1>=73 && LA84_1<=74)||(LA84_1>=76 && LA84_1<=78)||(LA84_1>=82 && LA84_1<=84)||(LA84_1>=86 && LA84_1<=87)||(LA84_1>=89 && LA84_1<=100)||(LA84_1>=103 && LA84_1<=105)||(LA84_1>=107 && LA84_1<=108)||LA84_1==113))
				{
					alt84 = 1;
				}


				} finally { DebugExitDecision(84); }
				switch ( alt84 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:413:53: blockStatement
					{
					DebugLocation(413, 53);
					PushFollow(Follow._blockStatement_in_constructorBody2729);
					blockStatement255=blockStatement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement255.Tree);

					}
					break;

				default:
					goto loop84;
				}
			}

			loop84:
				;

			} finally { DebugExitSubRule(84); }

			DebugLocation(413, 69);
			char_literal256=(IToken)Match(input,112,Follow._112_in_constructorBody2732); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal256_tree = (object)adaptor.Create(char_literal256);
			adaptor.AddChild(root_0, char_literal256_tree);
			}
			DebugLocation(413, 73);
			if (state.backtracking == 0)
			{
				s("}");Console.Write("McCabe for " + methodName + " = " + (mmc+1)); JavaMetrics.MccabeValues.Add(methodName + " = " + (mmc+1)); mmc = 0;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constructorBody", 64);
			LeaveRule("constructorBody", 64);
			LeaveRule_constructorBody();
			if (state.backtracking > 0) { Memoize(input, 64, constructorBody_StartIndex); }

		}
		DebugLocation(414, 4);
		} finally { DebugExitRule(GrammarFileName, "constructorBody"); }
		return retval;

	}
	// $ANTLR end "constructorBody"

	partial void EnterRule_explicitConstructorInvocation();
	partial void LeaveRule_explicitConstructorInvocation();
	// $ANTLR start "explicitConstructorInvocation"
	// JavaJava.g3:416:1: explicitConstructorInvocation : ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' );
	[GrammarRule("explicitConstructorInvocation")]
	private AstParserRuleReturnScope<object, IToken> explicitConstructorInvocation()
	{
		EnterRule_explicitConstructorInvocation();
		EnterRule("explicitConstructorInvocation", 65);
		TraceIn("explicitConstructorInvocation", 65);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int explicitConstructorInvocation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal258 = default(IToken);
		IToken string_literal259 = default(IToken);
		IToken char_literal261 = default(IToken);
		IToken char_literal263 = default(IToken);
		IToken string_literal265 = default(IToken);
		IToken char_literal267 = default(IToken);
		AstParserRuleReturnScope<object, IToken> nonWildcardTypeArguments257 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arguments260 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> primary262 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> nonWildcardTypeArguments264 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arguments266 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal258_tree = default(object);
		object string_literal259_tree = default(object);
		object char_literal261_tree = default(object);
		object char_literal263_tree = default(object);
		object string_literal265_tree = default(object);
		object char_literal267_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicitConstructorInvocation");
		DebugLocation(416, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 65)) { return retval; }

			// JavaJava.g3:417:5: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' | primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';' )
			int alt88=2;
			try { DebugEnterDecision(88, false);
			switch (input.LA(1))
			{
			case 49:
				{
				alt88 = 1;
				}
				break;
			case 99:
				{
				int LA88_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_JavaJava_fragment)))
				{
					alt88 = 1;
				}
				else if ((true))
				{
					alt88 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 88, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 96:
				{
				int LA88_2 = input.LA(2);

				if ((EvaluatePredicate(synpred117_JavaJava_fragment)))
				{
					alt88 = 1;
				}
				else if ((true))
				{
					alt88 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 88, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case Identifier:
			case OctalLiteral:
			case StringLiteral:
			case 32:
			case 60:
			case 62:
			case 65:
			case 70:
			case 73:
			case 76:
			case 82:
			case 84:
			case 86:
			case 87:
			case 93:
			case 103:
			case 105:
				{
				alt88 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 88, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(88); }
			switch (alt88)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:417:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(417, 9);
				// JavaJava.g3:417:9: ( nonWildcardTypeArguments )?
				int alt85=2;
				try { DebugEnterSubRule(85);
				try { DebugEnterDecision(85, false);
				int LA85_1 = input.LA(1);

				if ((LA85_1==49))
				{
					alt85 = 1;
				}
				} finally { DebugExitDecision(85); }
				switch (alt85)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:417:9: nonWildcardTypeArguments
					{
					DebugLocation(417, 9);
					PushFollow(Follow._nonWildcardTypeArguments_in_explicitConstructorInvocation2753);
					nonWildcardTypeArguments257=nonWildcardTypeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments257.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(85); }

				DebugLocation(417, 35);
				// JavaJava.g3:417:35: ( 'this' | 'super' )
				int alt86=2;
				try { DebugEnterSubRule(86);
				try { DebugEnterDecision(86, false);
				int LA86_1 = input.LA(1);

				if ((LA86_1==99))
				{
					alt86 = 1;
				}
				else if ((LA86_1==96))
				{
					alt86 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 86, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(86); }
				switch (alt86)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:417:36: 'this'
					{
					DebugLocation(417, 36);
					string_literal258=(IToken)Match(input,99,Follow._99_in_explicitConstructorInvocation2757); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal258_tree = (object)adaptor.Create(string_literal258);
					adaptor.AddChild(root_0, string_literal258_tree);
					}
					DebugLocation(417, 42);
					if (state.backtracking == 0)
					{
						keywordCount++;JavaMetrics.UniqueKeywords.Add("this");
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:417:101: 'super'
					{
					DebugLocation(417, 101);
					string_literal259=(IToken)Match(input,96,Follow._96_in_explicitConstructorInvocation2762); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal259_tree = (object)adaptor.Create(string_literal259);
					adaptor.AddChild(root_0, string_literal259_tree);
					}
					DebugLocation(417, 109);
					if (state.backtracking == 0)
					{
						keywordCount++;JavaMetrics.UniqueKeywords.Add("super");
					}

					}
					break;

				}
				} finally { DebugExitSubRule(86); }

				DebugLocation(417, 168);
				PushFollow(Follow._arguments_in_explicitConstructorInvocation2767);
				arguments260=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments260.Tree);
				DebugLocation(417, 178);
				char_literal261=(IToken)Match(input,48,Follow._48_in_explicitConstructorInvocation2769); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal261_tree = (object)adaptor.Create(char_literal261);
				adaptor.AddChild(root_0, char_literal261_tree);
				}
				DebugLocation(417, 182);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:418:9: primary '.' ( nonWildcardTypeArguments )? 'super' arguments ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(418, 9);
				PushFollow(Follow._primary_in_explicitConstructorInvocation2781);
				primary262=primary();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary262.Tree);
				DebugLocation(418, 17);
				char_literal263=(IToken)Match(input,43,Follow._43_in_explicitConstructorInvocation2783); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal263_tree = (object)adaptor.Create(char_literal263);
				adaptor.AddChild(root_0, char_literal263_tree);
				}
				DebugLocation(418, 21);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(418, 30);
				// JavaJava.g3:418:30: ( nonWildcardTypeArguments )?
				int alt87=2;
				try { DebugEnterSubRule(87);
				try { DebugEnterDecision(87, false);
				int LA87_1 = input.LA(1);

				if ((LA87_1==49))
				{
					alt87 = 1;
				}
				} finally { DebugExitDecision(87); }
				switch (alt87)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:418:30: nonWildcardTypeArguments
					{
					DebugLocation(418, 30);
					PushFollow(Follow._nonWildcardTypeArguments_in_explicitConstructorInvocation2786);
					nonWildcardTypeArguments264=nonWildcardTypeArguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments264.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(87); }

				DebugLocation(418, 56);
				string_literal265=(IToken)Match(input,96,Follow._96_in_explicitConstructorInvocation2789); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal265_tree = (object)adaptor.Create(string_literal265);
				adaptor.AddChild(root_0, string_literal265_tree);
				}
				DebugLocation(418, 64);
				PushFollow(Follow._arguments_in_explicitConstructorInvocation2791);
				arguments266=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments266.Tree);
				DebugLocation(418, 74);
				char_literal267=(IToken)Match(input,48,Follow._48_in_explicitConstructorInvocation2793); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal267_tree = (object)adaptor.Create(char_literal267);
				adaptor.AddChild(root_0, char_literal267_tree);
				}
				DebugLocation(418, 78);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicitConstructorInvocation", 65);
			LeaveRule("explicitConstructorInvocation", 65);
			LeaveRule_explicitConstructorInvocation();
			if (state.backtracking > 0) { Memoize(input, 65, explicitConstructorInvocation_StartIndex); }

		}
		DebugLocation(419, 4);
		} finally { DebugExitRule(GrammarFileName, "explicitConstructorInvocation"); }
		return retval;

	}
	// $ANTLR end "explicitConstructorInvocation"

	partial void EnterRule_qualifiedName();
	partial void LeaveRule_qualifiedName();
	// $ANTLR start "qualifiedName"
	// JavaJava.g3:422:1: qualifiedName : I1= Identifier ( '.' I2= Identifier )* ;
	[GrammarRule("qualifiedName")]
	private AstParserRuleReturnScope<object, IToken> qualifiedName()
	{
		EnterRule_qualifiedName();
		EnterRule("qualifiedName", 66);
		TraceIn("qualifiedName", 66);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int qualifiedName_StartIndex = input.Index;

		object root_0 = default(object);

		IToken I1 = default(IToken);
		IToken I2 = default(IToken);
		IToken char_literal268 = default(IToken);

		object I1_tree = default(object);
		object I2_tree = default(object);
		object char_literal268_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "qualifiedName");
		DebugLocation(422, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 66)) { return retval; }

			// JavaJava.g3:423:5: (I1= Identifier ( '.' I2= Identifier )* )
			DebugEnterAlt(1);
			// JavaJava.g3:423:9: I1= Identifier ( '.' I2= Identifier )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(423, 11);
			I1=(IToken)Match(input,Identifier,Follow._Identifier_in_qualifiedName2817); if (state.failed) return retval;
			if (state.backtracking == 0) {
			I1_tree = (object)adaptor.Create(I1);
			adaptor.AddChild(root_0, I1_tree);
			}
			DebugLocation(423, 23);
			if (state.backtracking == 0)
			{
				myID  = (I1!=null?I1.Text:default(string));
			}
			DebugLocation(423, 43);
			// JavaJava.g3:423:43: ( '.' I2= Identifier )*
			try { DebugEnterSubRule(89);
			while (true)
			{
				int alt89=2;
				try { DebugEnterDecision(89, false);
				int LA89_1 = input.LA(1);

				if ((LA89_1==43))
				{
					int LA89_2 = input.LA(2);

					if ((LA89_2==Identifier))
					{
						alt89 = 1;
					}


				}


				} finally { DebugExitDecision(89); }
				switch ( alt89 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:423:44: '.' I2= Identifier
					{
					DebugLocation(423, 44);
					char_literal268=(IToken)Match(input,43,Follow._43_in_qualifiedName2822); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal268_tree = (object)adaptor.Create(char_literal268);
					adaptor.AddChild(root_0, char_literal268_tree);
					}
					DebugLocation(423, 48);
					if (state.backtracking == 0)
					{
						s(".");
					}
					DebugLocation(423, 60);
					I2=(IToken)Match(input,Identifier,Follow._Identifier_in_qualifiedName2828); if (state.failed) return retval;
					if (state.backtracking == 0) {
					I2_tree = (object)adaptor.Create(I2);
					adaptor.AddChild(root_0, I2_tree);
					}
					DebugLocation(423, 72);
					if (state.backtracking == 0)
					{
						myID+="."+(I2!=null?I2.Text:default(string));
					}

					}
					break;

				default:
					goto loop89;
				}
			}

			loop89:
				;

			} finally { DebugExitSubRule(89); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("qualifiedName", 66);
			LeaveRule("qualifiedName", 66);
			LeaveRule_qualifiedName();
			if (state.backtracking > 0) { Memoize(input, 66, qualifiedName_StartIndex); }

		}
		DebugLocation(424, 4);
		} finally { DebugExitRule(GrammarFileName, "qualifiedName"); }
		return retval;

	}
	// $ANTLR end "qualifiedName"

	partial void EnterRule_literal();
	partial void LeaveRule_literal();
	// $ANTLR start "literal"
	// JavaJava.g3:426:1: literal : ( integerLiteral | FloatingPointLiteral | CharacterLiteral | StringLiteral | boolLiteral | 'null' );
	[GrammarRule("literal")]
	private AstParserRuleReturnScope<object, IToken> literal()
	{
		EnterRule_literal();
		EnterRule("literal", 67);
		TraceIn("literal", 67);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int literal_StartIndex = input.Index;

		object root_0 = default(object);

		IToken FloatingPointLiteral270 = default(IToken);
		IToken CharacterLiteral271 = default(IToken);
		IToken StringLiteral272 = default(IToken);
		IToken string_literal274 = default(IToken);
		AstParserRuleReturnScope<object, IToken> integerLiteral269 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> boolLiteral273 = default(AstParserRuleReturnScope<object, IToken>);

		object FloatingPointLiteral270_tree = default(object);
		object CharacterLiteral271_tree = default(object);
		object StringLiteral272_tree = default(object);
		object string_literal274_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "literal");
		DebugLocation(426, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 67)) { return retval; }

			// JavaJava.g3:427:5: ( integerLiteral | FloatingPointLiteral | CharacterLiteral | StringLiteral | boolLiteral | 'null' )
			int alt90=6;
			try { DebugEnterDecision(90, false);
			switch (input.LA(1))
			{
			case DecimalLiteral:
			case HexLiteral:
			case OctalLiteral:
				{
				alt90 = 1;
				}
				break;
			case FloatingPointLiteral:
				{
				alt90 = 2;
				}
				break;
			case CharacterLiteral:
				{
				alt90 = 3;
				}
				break;
			case StringLiteral:
				{
				alt90 = 4;
				}
				break;
			case 73:
			case 103:
				{
				alt90 = 5;
				}
				break;
			case 87:
				{
				alt90 = 6;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 90, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(90); }
			switch (alt90)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:427:9: integerLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(427, 9);
				PushFollow(Follow._integerLiteral_in_literal2857);
				integerLiteral269=integerLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, integerLiteral269.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:428:9: FloatingPointLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(428, 9);
				FloatingPointLiteral270=(IToken)Match(input,FloatingPointLiteral,Follow._FloatingPointLiteral_in_literal2867); if (state.failed) return retval;
				if (state.backtracking == 0) {
				FloatingPointLiteral270_tree = (object)adaptor.Create(FloatingPointLiteral270);
				adaptor.AddChild(root_0, FloatingPointLiteral270_tree);
				}
				DebugLocation(428, 31);
				if (state.backtracking == 0)
				{
					JavaMetrics.UniqueConstants.Add((FloatingPointLiteral270!=null?FloatingPointLiteral270.Text:default(string)));
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:429:9: CharacterLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(429, 9);
				CharacterLiteral271=(IToken)Match(input,CharacterLiteral,Follow._CharacterLiteral_in_literal2880); if (state.failed) return retval;
				if (state.backtracking == 0) {
				CharacterLiteral271_tree = (object)adaptor.Create(CharacterLiteral271);
				adaptor.AddChild(root_0, CharacterLiteral271_tree);
				}
				DebugLocation(429, 26);
				if (state.backtracking == 0)
				{
					JavaMetrics.UniqueConstants.Add((CharacterLiteral271!=null?CharacterLiteral271.Text:default(string)));
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:430:9: StringLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(430, 9);
				StringLiteral272=(IToken)Match(input,StringLiteral,Follow._StringLiteral_in_literal2893); if (state.failed) return retval;
				if (state.backtracking == 0) {
				StringLiteral272_tree = (object)adaptor.Create(StringLiteral272);
				adaptor.AddChild(root_0, StringLiteral272_tree);
				}
				DebugLocation(430, 23);
				if (state.backtracking == 0)
				{
					JavaMetrics.UniqueConstants.Add((StringLiteral272!=null?StringLiteral272.Text:default(string)));
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:431:9: boolLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(431, 9);
				PushFollow(Follow._boolLiteral_in_literal2905);
				boolLiteral273=boolLiteral();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, boolLiteral273.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:432:9: 'null'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(432, 9);
				string_literal274=(IToken)Match(input,87,Follow._87_in_literal2915); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal274_tree = (object)adaptor.Create(string_literal274);
				adaptor.AddChild(root_0, string_literal274_tree);
				}
				DebugLocation(432, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("null");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("literal", 67);
			LeaveRule("literal", 67);
			LeaveRule_literal();
			if (state.backtracking > 0) { Memoize(input, 67, literal_StartIndex); }

		}
		DebugLocation(433, 4);
		} finally { DebugExitRule(GrammarFileName, "literal"); }
		return retval;

	}
	// $ANTLR end "literal"

	partial void EnterRule_integerLiteral();
	partial void LeaveRule_integerLiteral();
	// $ANTLR start "integerLiteral"
	// JavaJava.g3:435:1: integerLiteral : ( HexLiteral | OctalLiteral | DecimalLiteral );
	[GrammarRule("integerLiteral")]
	private AstParserRuleReturnScope<object, IToken> integerLiteral()
	{
		EnterRule_integerLiteral();
		EnterRule("integerLiteral", 68);
		TraceIn("integerLiteral", 68);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int integerLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken HexLiteral275 = default(IToken);
		IToken OctalLiteral276 = default(IToken);
		IToken DecimalLiteral277 = default(IToken);

		object HexLiteral275_tree = default(object);
		object OctalLiteral276_tree = default(object);
		object DecimalLiteral277_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "integerLiteral");
		DebugLocation(435, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 68)) { return retval; }

			// JavaJava.g3:436:5: ( HexLiteral | OctalLiteral | DecimalLiteral )
			int alt91=3;
			try { DebugEnterDecision(91, false);
			switch (input.LA(1))
			{
			case HexLiteral:
				{
				alt91 = 1;
				}
				break;
			case OctalLiteral:
				{
				alt91 = 2;
				}
				break;
			case DecimalLiteral:
				{
				alt91 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 91, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(91); }
			switch (alt91)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:436:9: HexLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(436, 9);
				HexLiteral275=(IToken)Match(input,HexLiteral,Follow._HexLiteral_in_integerLiteral2936); if (state.failed) return retval;
				if (state.backtracking == 0) {
				HexLiteral275_tree = (object)adaptor.Create(HexLiteral275);
				adaptor.AddChild(root_0, HexLiteral275_tree);
				}
				DebugLocation(436, 20);
				if (state.backtracking == 0)
				{
					 JavaMetrics.UniqueConstants.Add((HexLiteral275!=null?HexLiteral275.Text:default(string)));
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:437:9: OctalLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(437, 9);
				OctalLiteral276=(IToken)Match(input,OctalLiteral,Follow._OctalLiteral_in_integerLiteral2948); if (state.failed) return retval;
				if (state.backtracking == 0) {
				OctalLiteral276_tree = (object)adaptor.Create(OctalLiteral276);
				adaptor.AddChild(root_0, OctalLiteral276_tree);
				}
				DebugLocation(437, 22);
				if (state.backtracking == 0)
				{
					 JavaMetrics.UniqueConstants.Add((OctalLiteral276!=null?OctalLiteral276.Text:default(string)));
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:438:9: DecimalLiteral
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(438, 9);
				DecimalLiteral277=(IToken)Match(input,DecimalLiteral,Follow._DecimalLiteral_in_integerLiteral2960); if (state.failed) return retval;
				if (state.backtracking == 0) {
				DecimalLiteral277_tree = (object)adaptor.Create(DecimalLiteral277);
				adaptor.AddChild(root_0, DecimalLiteral277_tree);
				}
				DebugLocation(438, 24);
				if (state.backtracking == 0)
				{
					JavaMetrics.UniqueConstants.Add((DecimalLiteral277!=null?DecimalLiteral277.Text:default(string)));
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("integerLiteral", 68);
			LeaveRule("integerLiteral", 68);
			LeaveRule_integerLiteral();
			if (state.backtracking > 0) { Memoize(input, 68, integerLiteral_StartIndex); }

		}
		DebugLocation(439, 4);
		} finally { DebugExitRule(GrammarFileName, "integerLiteral"); }
		return retval;

	}
	// $ANTLR end "integerLiteral"

	partial void EnterRule_boolLiteral();
	partial void LeaveRule_boolLiteral();
	// $ANTLR start "boolLiteral"
	// JavaJava.g3:441:1: boolLiteral : ( 'true' | 'false' );
	[GrammarRule("boolLiteral")]
	private AstParserRuleReturnScope<object, IToken> boolLiteral()
	{
		EnterRule_boolLiteral();
		EnterRule("boolLiteral", 69);
		TraceIn("boolLiteral", 69);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int boolLiteral_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal278 = default(IToken);
		IToken string_literal279 = default(IToken);

		object string_literal278_tree = default(object);
		object string_literal279_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "boolLiteral");
		DebugLocation(441, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 69)) { return retval; }

			// JavaJava.g3:442:5: ( 'true' | 'false' )
			int alt92=2;
			try { DebugEnterDecision(92, false);
			int LA92_1 = input.LA(1);

			if ((LA92_1==103))
			{
				alt92 = 1;
			}
			else if ((LA92_1==73))
			{
				alt92 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 92, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(92); }
			switch (alt92)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:442:9: 'true'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(442, 9);
				string_literal278=(IToken)Match(input,103,Follow._103_in_boolLiteral2981); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal278_tree = (object)adaptor.Create(string_literal278);
				adaptor.AddChild(root_0, string_literal278_tree);
				}
				DebugLocation(442, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("true");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:443:9: 'false'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(443, 9);
				string_literal279=(IToken)Match(input,73,Follow._73_in_boolLiteral2993); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal279_tree = (object)adaptor.Create(string_literal279);
				adaptor.AddChild(root_0, string_literal279_tree);
				}
				DebugLocation(443, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("false");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("boolLiteral", 69);
			LeaveRule("boolLiteral", 69);
			LeaveRule_boolLiteral();
			if (state.backtracking > 0) { Memoize(input, 69, boolLiteral_StartIndex); }

		}
		DebugLocation(444, 4);
		} finally { DebugExitRule(GrammarFileName, "boolLiteral"); }
		return retval;

	}
	// $ANTLR end "boolLiteral"

	partial void EnterRule_annotations();
	partial void LeaveRule_annotations();
	// $ANTLR start "annotations"
	// JavaJava.g3:448:1: annotations : ( annotation )+ ;
	[GrammarRule("annotations")]
	private AstParserRuleReturnScope<object, IToken> annotations()
	{
		EnterRule_annotations();
		EnterRule("annotations", 70);
		TraceIn("annotations", 70);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotations_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> annotation280 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "annotations");
		DebugLocation(448, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 70)) { return retval; }

			// JavaJava.g3:449:5: ( ( annotation )+ )
			DebugEnterAlt(1);
			// JavaJava.g3:449:9: ( annotation )+
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(449, 9);
			// JavaJava.g3:449:9: ( annotation )+
			int cnt93=0;
			try { DebugEnterSubRule(93);
			while (true)
			{
				int alt93=2;
				try { DebugEnterDecision(93, false);
				int LA93_1 = input.LA(1);

				if ((LA93_1==54))
				{
					int LA93_2 = input.LA(2);

					if ((LA93_2==Identifier))
					{
						int LA93_3 = input.LA(3);

						if ((EvaluatePredicate(synpred128_JavaJava_fragment)))
						{
							alt93 = 1;
						}


					}


				}


				} finally { DebugExitDecision(93); }
				switch (alt93)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:449:9: annotation
					{
					DebugLocation(449, 9);
					PushFollow(Follow._annotation_in_annotations3015);
					annotation280=annotation();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotation280.Tree);

					}
					break;

				default:
					if (cnt93 >= 1)
						goto loop93;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee93 = new EarlyExitException( 93, input );
					DebugRecognitionException(eee93);
					throw eee93;
				}
				cnt93++;
			}
			loop93:
				;

			} finally { DebugExitSubRule(93); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotations", 70);
			LeaveRule("annotations", 70);
			LeaveRule_annotations();
			if (state.backtracking > 0) { Memoize(input, 70, annotations_StartIndex); }

		}
		DebugLocation(450, 4);
		} finally { DebugExitRule(GrammarFileName, "annotations"); }
		return retval;

	}
	// $ANTLR end "annotations"

	partial void EnterRule_annotation();
	partial void LeaveRule_annotation();
	// $ANTLR start "annotation"
	// JavaJava.g3:452:1: annotation : '@' annotationName ( '(' ( elementValuePairs | elementValue )? ')' )? ;
	[GrammarRule("annotation")]
	private AstParserRuleReturnScope<object, IToken> annotation()
	{
		EnterRule_annotation();
		EnterRule("annotation", 71);
		TraceIn("annotation", 71);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal281 = default(IToken);
		IToken char_literal283 = default(IToken);
		IToken char_literal286 = default(IToken);
		AstParserRuleReturnScope<object, IToken> annotationName282 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> elementValuePairs284 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> elementValue285 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal281_tree = default(object);
		object char_literal283_tree = default(object);
		object char_literal286_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotation");
		DebugLocation(452, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 71)) { return retval; }

			// JavaJava.g3:453:5: ( '@' annotationName ( '(' ( elementValuePairs | elementValue )? ')' )? )
			DebugEnterAlt(1);
			// JavaJava.g3:453:9: '@' annotationName ( '(' ( elementValuePairs | elementValue )? ')' )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(453, 9);
			char_literal281=(IToken)Match(input,54,Follow._54_in_annotation3035); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal281_tree = (object)adaptor.Create(char_literal281);
			adaptor.AddChild(root_0, char_literal281_tree);
			}
			DebugLocation(453, 13);
			PushFollow(Follow._annotationName_in_annotation3037);
			annotationName282=annotationName();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, annotationName282.Tree);
			DebugLocation(453, 28);
			// JavaJava.g3:453:28: ( '(' ( elementValuePairs | elementValue )? ')' )?
			int alt95=2;
			try { DebugEnterSubRule(95);
			try { DebugEnterDecision(95, false);
			int LA95_1 = input.LA(1);

			if ((LA95_1==32))
			{
				alt95 = 1;
			}
			} finally { DebugExitDecision(95); }
			switch (alt95)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:453:30: '(' ( elementValuePairs | elementValue )? ')'
				{
				DebugLocation(453, 30);
				char_literal283=(IToken)Match(input,32,Follow._32_in_annotation3041); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal283_tree = (object)adaptor.Create(char_literal283);
				adaptor.AddChild(root_0, char_literal283_tree);
				}
				DebugLocation(453, 34);
				if (state.backtracking == 0)
				{
					s("(");
				}
				DebugLocation(453, 44);
				// JavaJava.g3:453:44: ( elementValuePairs | elementValue )?
				int alt94=3;
				try { DebugEnterSubRule(94);
				try { DebugEnterDecision(94, false);
				int LA94_1 = input.LA(1);

				if ((LA94_1==Identifier))
				{
					int LA94_2 = input.LA(2);

					if ((LA94_2==50))
					{
						alt94 = 1;
					}
					else if (((LA94_2>=26 && LA94_2<=27)||(LA94_2>=29 && LA94_2<=30)||(LA94_2>=32 && LA94_2<=34)||(LA94_2>=36 && LA94_2<=37)||(LA94_2>=40 && LA94_2<=41)||LA94_2==43||LA94_2==45||LA94_2==49||(LA94_2>=51 && LA94_2<=53)||LA94_2==55||LA94_2==57||LA94_2==81||LA94_2==109||LA94_2==111))
					{
						alt94 = 2;
					}
				}
				else if (((LA94_1>=CharacterLiteral && LA94_1<=DecimalLiteral)||LA94_1==FloatingPointLiteral||LA94_1==HexLiteral||(LA94_1>=OctalLiteral && LA94_1<=StringLiteral)||LA94_1==25||LA94_1==32||(LA94_1>=36 && LA94_1<=37)||(LA94_1>=40 && LA94_1<=41)||LA94_1==54||LA94_1==60||LA94_1==62||LA94_1==65||LA94_1==70||LA94_1==73||LA94_1==76||LA94_1==82||LA94_1==84||(LA94_1>=86 && LA94_1<=87)||LA94_1==93||LA94_1==96||LA94_1==99||LA94_1==103||LA94_1==105||LA94_1==108||LA94_1==113))
				{
					alt94 = 2;
				}
				} finally { DebugExitDecision(94); }
				switch (alt94)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:453:46: elementValuePairs
					{
					DebugLocation(453, 46);
					PushFollow(Follow._elementValuePairs_in_annotation3047);
					elementValuePairs284=elementValuePairs();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePairs284.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:453:66: elementValue
					{
					DebugLocation(453, 66);
					PushFollow(Follow._elementValue_in_annotation3051);
					elementValue285=elementValue();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue285.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(94); }

				DebugLocation(453, 82);
				char_literal286=(IToken)Match(input,33,Follow._33_in_annotation3056); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal286_tree = (object)adaptor.Create(char_literal286);
				adaptor.AddChild(root_0, char_literal286_tree);
				}
				DebugLocation(453, 86);
				if (state.backtracking == 0)
				{
					s(")");
				}

				}
				break;

			}
			} finally { DebugExitSubRule(95); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotation", 71);
			LeaveRule("annotation", 71);
			LeaveRule_annotation();
			if (state.backtracking > 0) { Memoize(input, 71, annotation_StartIndex); }

		}
		DebugLocation(454, 4);
		} finally { DebugExitRule(GrammarFileName, "annotation"); }
		return retval;

	}
	// $ANTLR end "annotation"

	partial void EnterRule_annotationName();
	partial void LeaveRule_annotationName();
	// $ANTLR start "annotationName"
	// JavaJava.g3:456:1: annotationName : t1= Identifier ( '.' Identifier )* ;
	[GrammarRule("annotationName")]
	private AstParserRuleReturnScope<object, IToken> annotationName()
	{
		EnterRule_annotationName();
		EnterRule("annotationName", 72);
		TraceIn("annotationName", 72);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationName_StartIndex = input.Index;

		object root_0 = default(object);

		IToken t1 = default(IToken);
		IToken char_literal287 = default(IToken);
		IToken Identifier288 = default(IToken);

		object t1_tree = default(object);
		object char_literal287_tree = default(object);
		object Identifier288_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationName");
		DebugLocation(456, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 72)) { return retval; }

			// JavaJava.g3:457:5: (t1= Identifier ( '.' Identifier )* )
			DebugEnterAlt(1);
			// JavaJava.g3:457:7: t1= Identifier ( '.' Identifier )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(457, 9);
			t1=(IToken)Match(input,Identifier,Follow._Identifier_in_annotationName3086); if (state.failed) return retval;
			if (state.backtracking == 0) {
			t1_tree = (object)adaptor.Create(t1);
			adaptor.AddChild(root_0, t1_tree);
			}
			DebugLocation(457, 22);
			if (state.backtracking == 0)
			{
				id((t1!=null?t1.Text:default(string))); 
			}
			DebugLocation(457, 38);
			// JavaJava.g3:457:38: ( '.' Identifier )*
			try { DebugEnterSubRule(96);
			while (true)
			{
				int alt96=2;
				try { DebugEnterDecision(96, false);
				int LA96_1 = input.LA(1);

				if ((LA96_1==43))
				{
					alt96 = 1;
				}


				} finally { DebugExitDecision(96); }
				switch ( alt96 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:457:39: '.' Identifier
					{
					DebugLocation(457, 39);
					char_literal287=(IToken)Match(input,43,Follow._43_in_annotationName3090); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal287_tree = (object)adaptor.Create(char_literal287);
					adaptor.AddChild(root_0, char_literal287_tree);
					}
					DebugLocation(457, 43);
					if (state.backtracking == 0)
					{
						s(".");
					}
					DebugLocation(457, 53);
					Identifier288=(IToken)Match(input,Identifier,Follow._Identifier_in_annotationName3094); if (state.failed) return retval;
					if (state.backtracking == 0) {
					Identifier288_tree = (object)adaptor.Create(Identifier288);
					adaptor.AddChild(root_0, Identifier288_tree);
					}

					}
					break;

				default:
					goto loop96;
				}
			}

			loop96:
				;

			} finally { DebugExitSubRule(96); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationName", 72);
			LeaveRule("annotationName", 72);
			LeaveRule_annotationName();
			if (state.backtracking > 0) { Memoize(input, 72, annotationName_StartIndex); }

		}
		DebugLocation(458, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationName"); }
		return retval;

	}
	// $ANTLR end "annotationName"

	partial void EnterRule_elementValuePairs();
	partial void LeaveRule_elementValuePairs();
	// $ANTLR start "elementValuePairs"
	// JavaJava.g3:460:1: elementValuePairs : elementValuePair ( ',' elementValuePair )* ;
	[GrammarRule("elementValuePairs")]
	private AstParserRuleReturnScope<object, IToken> elementValuePairs()
	{
		EnterRule_elementValuePairs();
		EnterRule("elementValuePairs", 73);
		TraceIn("elementValuePairs", 73);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int elementValuePairs_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal290 = default(IToken);
		AstParserRuleReturnScope<object, IToken> elementValuePair289 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> elementValuePair291 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal290_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValuePairs");
		DebugLocation(460, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 73)) { return retval; }

			// JavaJava.g3:461:5: ( elementValuePair ( ',' elementValuePair )* )
			DebugEnterAlt(1);
			// JavaJava.g3:461:9: elementValuePair ( ',' elementValuePair )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(461, 9);
			PushFollow(Follow._elementValuePair_in_elementValuePairs3115);
			elementValuePair289=elementValuePair();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePair289.Tree);
			DebugLocation(461, 26);
			// JavaJava.g3:461:26: ( ',' elementValuePair )*
			try { DebugEnterSubRule(97);
			while (true)
			{
				int alt97=2;
				try { DebugEnterDecision(97, false);
				int LA97_1 = input.LA(1);

				if ((LA97_1==39))
				{
					alt97 = 1;
				}


				} finally { DebugExitDecision(97); }
				switch ( alt97 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:461:27: ',' elementValuePair
					{
					DebugLocation(461, 27);
					char_literal290=(IToken)Match(input,39,Follow._39_in_elementValuePairs3118); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal290_tree = (object)adaptor.Create(char_literal290);
					adaptor.AddChild(root_0, char_literal290_tree);
					}
					DebugLocation(461, 31);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(461, 41);
					PushFollow(Follow._elementValuePair_in_elementValuePairs3122);
					elementValuePair291=elementValuePair();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, elementValuePair291.Tree);

					}
					break;

				default:
					goto loop97;
				}
			}

			loop97:
				;

			} finally { DebugExitSubRule(97); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValuePairs", 73);
			LeaveRule("elementValuePairs", 73);
			LeaveRule_elementValuePairs();
			if (state.backtracking > 0) { Memoize(input, 73, elementValuePairs_StartIndex); }

		}
		DebugLocation(462, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValuePairs"); }
		return retval;

	}
	// $ANTLR end "elementValuePairs"

	partial void EnterRule_elementValuePair();
	partial void LeaveRule_elementValuePair();
	// $ANTLR start "elementValuePair"
	// JavaJava.g3:464:1: elementValuePair : Identifier '=' elementValue ;
	[GrammarRule("elementValuePair")]
	private AstParserRuleReturnScope<object, IToken> elementValuePair()
	{
		EnterRule_elementValuePair();
		EnterRule("elementValuePair", 74);
		TraceIn("elementValuePair", 74);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int elementValuePair_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier292 = default(IToken);
		IToken char_literal293 = default(IToken);
		AstParserRuleReturnScope<object, IToken> elementValue294 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier292_tree = default(object);
		object char_literal293_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValuePair");
		DebugLocation(464, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 74)) { return retval; }

			// JavaJava.g3:465:5: ( Identifier '=' elementValue )
			DebugEnterAlt(1);
			// JavaJava.g3:465:9: Identifier '=' elementValue
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(465, 9);
			Identifier292=(IToken)Match(input,Identifier,Follow._Identifier_in_elementValuePair3143); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier292_tree = (object)adaptor.Create(Identifier292);
			adaptor.AddChild(root_0, Identifier292_tree);
			}
			DebugLocation(465, 20);
			if (state.backtracking == 0)
			{
				 id((Identifier292!=null?Identifier292.Text:default(string)));
			}
			DebugLocation(465, 45);
			char_literal293=(IToken)Match(input,50,Follow._50_in_elementValuePair3147); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal293_tree = (object)adaptor.Create(char_literal293);
			adaptor.AddChild(root_0, char_literal293_tree);
			}
			DebugLocation(465, 49);
			if (state.backtracking == 0)
			{
				s("=");
			}
			DebugLocation(465, 59);
			PushFollow(Follow._elementValue_in_elementValuePair3151);
			elementValue294=elementValue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue294.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValuePair", 74);
			LeaveRule("elementValuePair", 74);
			LeaveRule_elementValuePair();
			if (state.backtracking > 0) { Memoize(input, 74, elementValuePair_StartIndex); }

		}
		DebugLocation(466, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValuePair"); }
		return retval;

	}
	// $ANTLR end "elementValuePair"

	partial void EnterRule_elementValue();
	partial void LeaveRule_elementValue();
	// $ANTLR start "elementValue"
	// JavaJava.g3:468:1: elementValue : ( conditionalExpression | annotation | elementValueArrayInitializer );
	[GrammarRule("elementValue")]
	private AstParserRuleReturnScope<object, IToken> elementValue()
	{
		EnterRule_elementValue();
		EnterRule("elementValue", 75);
		TraceIn("elementValue", 75);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int elementValue_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> conditionalExpression295 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> annotation296 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> elementValueArrayInitializer297 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "elementValue");
		DebugLocation(468, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 75)) { return retval; }

			// JavaJava.g3:469:5: ( conditionalExpression | annotation | elementValueArrayInitializer )
			int alt98=3;
			try { DebugEnterDecision(98, false);
			switch (input.LA(1))
			{
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case Identifier:
			case OctalLiteral:
			case StringLiteral:
			case 25:
			case 32:
			case 36:
			case 37:
			case 40:
			case 41:
			case 60:
			case 62:
			case 65:
			case 70:
			case 73:
			case 76:
			case 82:
			case 84:
			case 86:
			case 87:
			case 93:
			case 96:
			case 99:
			case 103:
			case 105:
			case 113:
				{
				alt98 = 1;
				}
				break;
			case 54:
				{
				alt98 = 2;
				}
				break;
			case 108:
				{
				alt98 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 98, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(98); }
			switch (alt98)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:469:9: conditionalExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(469, 9);
				PushFollow(Follow._conditionalExpression_in_elementValue3174);
				conditionalExpression295=conditionalExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression295.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:470:9: annotation
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(470, 9);
				PushFollow(Follow._annotation_in_elementValue3184);
				annotation296=annotation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotation296.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:471:9: elementValueArrayInitializer
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(471, 9);
				PushFollow(Follow._elementValueArrayInitializer_in_elementValue3194);
				elementValueArrayInitializer297=elementValueArrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValueArrayInitializer297.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValue", 75);
			LeaveRule("elementValue", 75);
			LeaveRule_elementValue();
			if (state.backtracking > 0) { Memoize(input, 75, elementValue_StartIndex); }

		}
		DebugLocation(472, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValue"); }
		return retval;

	}
	// $ANTLR end "elementValue"

	partial void EnterRule_elementValueArrayInitializer();
	partial void LeaveRule_elementValueArrayInitializer();
	// $ANTLR start "elementValueArrayInitializer"
	// JavaJava.g3:474:1: elementValueArrayInitializer : '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' ;
	[GrammarRule("elementValueArrayInitializer")]
	private AstParserRuleReturnScope<object, IToken> elementValueArrayInitializer()
	{
		EnterRule_elementValueArrayInitializer();
		EnterRule("elementValueArrayInitializer", 76);
		TraceIn("elementValueArrayInitializer", 76);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int elementValueArrayInitializer_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal298 = default(IToken);
		IToken char_literal300 = default(IToken);
		IToken char_literal302 = default(IToken);
		IToken char_literal303 = default(IToken);
		AstParserRuleReturnScope<object, IToken> elementValue299 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> elementValue301 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal298_tree = default(object);
		object char_literal300_tree = default(object);
		object char_literal302_tree = default(object);
		object char_literal303_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "elementValueArrayInitializer");
		DebugLocation(474, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 76)) { return retval; }

			// JavaJava.g3:475:5: ( '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:475:9: '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(475, 9);
			char_literal298=(IToken)Match(input,108,Follow._108_in_elementValueArrayInitializer3217); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal298_tree = (object)adaptor.Create(char_literal298);
			adaptor.AddChild(root_0, char_literal298_tree);
			}
			DebugLocation(475, 13);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(475, 22);
			// JavaJava.g3:475:22: ( elementValue ( ',' elementValue )* )?
			int alt100=2;
			try { DebugEnterSubRule(100);
			try { DebugEnterDecision(100, false);
			int LA100_1 = input.LA(1);

			if (((LA100_1>=CharacterLiteral && LA100_1<=DecimalLiteral)||LA100_1==FloatingPointLiteral||(LA100_1>=HexLiteral && LA100_1<=Identifier)||(LA100_1>=OctalLiteral && LA100_1<=StringLiteral)||LA100_1==25||LA100_1==32||(LA100_1>=36 && LA100_1<=37)||(LA100_1>=40 && LA100_1<=41)||LA100_1==54||LA100_1==60||LA100_1==62||LA100_1==65||LA100_1==70||LA100_1==73||LA100_1==76||LA100_1==82||LA100_1==84||(LA100_1>=86 && LA100_1<=87)||LA100_1==93||LA100_1==96||LA100_1==99||LA100_1==103||LA100_1==105||LA100_1==108||LA100_1==113))
			{
				alt100 = 1;
			}
			} finally { DebugExitDecision(100); }
			switch (alt100)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:475:23: elementValue ( ',' elementValue )*
				{
				DebugLocation(475, 23);
				PushFollow(Follow._elementValue_in_elementValueArrayInitializer3221);
				elementValue299=elementValue();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue299.Tree);
				DebugLocation(475, 36);
				// JavaJava.g3:475:36: ( ',' elementValue )*
				try { DebugEnterSubRule(99);
				while (true)
				{
					int alt99=2;
					try { DebugEnterDecision(99, false);
					int LA99_1 = input.LA(1);

					if ((LA99_1==39))
					{
						int LA99_2 = input.LA(2);

						if (((LA99_2>=CharacterLiteral && LA99_2<=DecimalLiteral)||LA99_2==FloatingPointLiteral||(LA99_2>=HexLiteral && LA99_2<=Identifier)||(LA99_2>=OctalLiteral && LA99_2<=StringLiteral)||LA99_2==25||LA99_2==32||(LA99_2>=36 && LA99_2<=37)||(LA99_2>=40 && LA99_2<=41)||LA99_2==54||LA99_2==60||LA99_2==62||LA99_2==65||LA99_2==70||LA99_2==73||LA99_2==76||LA99_2==82||LA99_2==84||(LA99_2>=86 && LA99_2<=87)||LA99_2==93||LA99_2==96||LA99_2==99||LA99_2==103||LA99_2==105||LA99_2==108||LA99_2==113))
						{
							alt99 = 1;
						}


					}


					} finally { DebugExitDecision(99); }
					switch ( alt99 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:475:37: ',' elementValue
						{
						DebugLocation(475, 37);
						char_literal300=(IToken)Match(input,39,Follow._39_in_elementValueArrayInitializer3224); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal300_tree = (object)adaptor.Create(char_literal300);
						adaptor.AddChild(root_0, char_literal300_tree);
						}
						DebugLocation(475, 40);
						if (state.backtracking == 0)
						{
							s(",");
						}
						DebugLocation(475, 50);
						PushFollow(Follow._elementValue_in_elementValueArrayInitializer3227);
						elementValue301=elementValue();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue301.Tree);

						}
						break;

					default:
						goto loop99;
					}
				}

				loop99:
					;

				} finally { DebugExitSubRule(99); }


				}
				break;

			}
			} finally { DebugExitSubRule(100); }

			DebugLocation(475, 67);
			// JavaJava.g3:475:67: ( ',' )?
			int alt101=2;
			try { DebugEnterSubRule(101);
			try { DebugEnterDecision(101, false);
			int LA101_1 = input.LA(1);

			if ((LA101_1==39))
			{
				alt101 = 1;
			}
			} finally { DebugExitDecision(101); }
			switch (alt101)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:475:68: ','
				{
				DebugLocation(475, 68);
				char_literal302=(IToken)Match(input,39,Follow._39_in_elementValueArrayInitializer3234); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal302_tree = (object)adaptor.Create(char_literal302);
				adaptor.AddChild(root_0, char_literal302_tree);
				}

				}
				break;

			}
			} finally { DebugExitSubRule(101); }

			DebugLocation(475, 75);
			char_literal303=(IToken)Match(input,112,Follow._112_in_elementValueArrayInitializer3239); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal303_tree = (object)adaptor.Create(char_literal303);
			adaptor.AddChild(root_0, char_literal303_tree);
			}
			DebugLocation(475, 78);
			if (state.backtracking == 0)
			{
				s("}");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("elementValueArrayInitializer", 76);
			LeaveRule("elementValueArrayInitializer", 76);
			LeaveRule_elementValueArrayInitializer();
			if (state.backtracking > 0) { Memoize(input, 76, elementValueArrayInitializer_StartIndex); }

		}
		DebugLocation(476, 4);
		} finally { DebugExitRule(GrammarFileName, "elementValueArrayInitializer"); }
		return retval;

	}
	// $ANTLR end "elementValueArrayInitializer"

	partial void EnterRule_annotationTypeDeclaration();
	partial void LeaveRule_annotationTypeDeclaration();
	// $ANTLR start "annotationTypeDeclaration"
	// JavaJava.g3:478:1: annotationTypeDeclaration : '@' 'interface' Identifier annotationTypeBody ;
	[GrammarRule("annotationTypeDeclaration")]
	private AstParserRuleReturnScope<object, IToken> annotationTypeDeclaration()
	{
		EnterRule_annotationTypeDeclaration();
		EnterRule("annotationTypeDeclaration", 77);
		TraceIn("annotationTypeDeclaration", 77);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationTypeDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal304 = default(IToken);
		IToken string_literal305 = default(IToken);
		IToken Identifier306 = default(IToken);
		AstParserRuleReturnScope<object, IToken> annotationTypeBody307 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal304_tree = default(object);
		object string_literal305_tree = default(object);
		object Identifier306_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeDeclaration");
		DebugLocation(478, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 77)) { return retval; }

			// JavaJava.g3:479:5: ( '@' 'interface' Identifier annotationTypeBody )
			DebugEnterAlt(1);
			// JavaJava.g3:479:9: '@' 'interface' Identifier annotationTypeBody
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(479, 9);
			char_literal304=(IToken)Match(input,54,Follow._54_in_annotationTypeDeclaration3263); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal304_tree = (object)adaptor.Create(char_literal304);
			adaptor.AddChild(root_0, char_literal304_tree);
			}
			DebugLocation(479, 13);
			string_literal305=(IToken)Match(input,83,Follow._83_in_annotationTypeDeclaration3265); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal305_tree = (object)adaptor.Create(string_literal305);
			adaptor.AddChild(root_0, string_literal305_tree);
			}
			DebugLocation(479, 25);
			Identifier306=(IToken)Match(input,Identifier,Follow._Identifier_in_annotationTypeDeclaration3267); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier306_tree = (object)adaptor.Create(Identifier306);
			adaptor.AddChild(root_0, Identifier306_tree);
			}
			DebugLocation(479, 36);
			if (state.backtracking == 0)
			{
				 id((Identifier306!=null?Identifier306.Text:default(string)));
			}
			DebugLocation(479, 61);
			PushFollow(Follow._annotationTypeBody_in_annotationTypeDeclaration3271);
			annotationTypeBody307=annotationTypeBody();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeBody307.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeDeclaration", 77);
			LeaveRule("annotationTypeDeclaration", 77);
			LeaveRule_annotationTypeDeclaration();
			if (state.backtracking > 0) { Memoize(input, 77, annotationTypeDeclaration_StartIndex); }

		}
		DebugLocation(480, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationTypeDeclaration"

	partial void EnterRule_annotationTypeBody();
	partial void LeaveRule_annotationTypeBody();
	// $ANTLR start "annotationTypeBody"
	// JavaJava.g3:482:1: annotationTypeBody : '{' ( annotationTypeElementDeclaration )* '}' ;
	[GrammarRule("annotationTypeBody")]
	private AstParserRuleReturnScope<object, IToken> annotationTypeBody()
	{
		EnterRule_annotationTypeBody();
		EnterRule("annotationTypeBody", 78);
		TraceIn("annotationTypeBody", 78);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationTypeBody_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal308 = default(IToken);
		IToken char_literal310 = default(IToken);
		AstParserRuleReturnScope<object, IToken> annotationTypeElementDeclaration309 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal308_tree = default(object);
		object char_literal310_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeBody");
		DebugLocation(482, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 78)) { return retval; }

			// JavaJava.g3:483:5: ( '{' ( annotationTypeElementDeclaration )* '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:483:9: '{' ( annotationTypeElementDeclaration )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(483, 9);
			char_literal308=(IToken)Match(input,108,Follow._108_in_annotationTypeBody3294); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal308_tree = (object)adaptor.Create(char_literal308);
			adaptor.AddChild(root_0, char_literal308_tree);
			}
			DebugLocation(483, 13);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(483, 22);
			// JavaJava.g3:483:22: ( annotationTypeElementDeclaration )*
			try { DebugEnterSubRule(102);
			while (true)
			{
				int alt102=2;
				try { DebugEnterDecision(102, false);
				int LA102_1 = input.LA(1);

				if ((LA102_1==ENUM||LA102_1==Identifier||LA102_1==49||LA102_1==54||(LA102_1>=59 && LA102_1<=60)||LA102_1==62||(LA102_1>=65 && LA102_1<=66)||LA102_1==70||LA102_1==74||LA102_1==76||(LA102_1>=82 && LA102_1<=85)||(LA102_1>=89 && LA102_1<=91)||(LA102_1>=93 && LA102_1<=95)||LA102_1==98||LA102_1==102||(LA102_1>=105 && LA102_1<=106)))
				{
					alt102 = 1;
				}


				} finally { DebugExitDecision(102); }
				switch ( alt102 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:483:23: annotationTypeElementDeclaration
					{
					DebugLocation(483, 23);
					PushFollow(Follow._annotationTypeElementDeclaration_in_annotationTypeBody3298);
					annotationTypeElementDeclaration309=annotationTypeElementDeclaration();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeElementDeclaration309.Tree);

					}
					break;

				default:
					goto loop102;
				}
			}

			loop102:
				;

			} finally { DebugExitSubRule(102); }

			DebugLocation(483, 58);
			char_literal310=(IToken)Match(input,112,Follow._112_in_annotationTypeBody3302); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal310_tree = (object)adaptor.Create(char_literal310);
			adaptor.AddChild(root_0, char_literal310_tree);
			}
			DebugLocation(483, 61);
			if (state.backtracking == 0)
			{
				s("}");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeBody", 78);
			LeaveRule("annotationTypeBody", 78);
			LeaveRule_annotationTypeBody();
			if (state.backtracking > 0) { Memoize(input, 78, annotationTypeBody_StartIndex); }

		}
		DebugLocation(484, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeBody"); }
		return retval;

	}
	// $ANTLR end "annotationTypeBody"

	partial void EnterRule_annotationTypeElementDeclaration();
	partial void LeaveRule_annotationTypeElementDeclaration();
	// $ANTLR start "annotationTypeElementDeclaration"
	// JavaJava.g3:486:1: annotationTypeElementDeclaration : modifiers annotationTypeElementRest ;
	[GrammarRule("annotationTypeElementDeclaration")]
	private AstParserRuleReturnScope<object, IToken> annotationTypeElementDeclaration()
	{
		EnterRule_annotationTypeElementDeclaration();
		EnterRule("annotationTypeElementDeclaration", 79);
		TraceIn("annotationTypeElementDeclaration", 79);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationTypeElementDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> modifiers311 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> annotationTypeElementRest312 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "annotationTypeElementDeclaration");
		DebugLocation(486, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 79)) { return retval; }

			// JavaJava.g3:487:5: ( modifiers annotationTypeElementRest )
			DebugEnterAlt(1);
			// JavaJava.g3:487:9: modifiers annotationTypeElementRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(487, 9);
			PushFollow(Follow._modifiers_in_annotationTypeElementDeclaration3326);
			modifiers311=modifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, modifiers311.Tree);
			DebugLocation(487, 19);
			PushFollow(Follow._annotationTypeElementRest_in_annotationTypeElementDeclaration3328);
			annotationTypeElementRest312=annotationTypeElementRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeElementRest312.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeElementDeclaration", 79);
			LeaveRule("annotationTypeElementDeclaration", 79);
			LeaveRule_annotationTypeElementDeclaration();
			if (state.backtracking > 0) { Memoize(input, 79, annotationTypeElementDeclaration_StartIndex); }

		}
		DebugLocation(488, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeElementDeclaration"); }
		return retval;

	}
	// $ANTLR end "annotationTypeElementDeclaration"

	partial void EnterRule_annotationTypeElementRest();
	partial void LeaveRule_annotationTypeElementRest();
	// $ANTLR start "annotationTypeElementRest"
	// JavaJava.g3:490:1: annotationTypeElementRest : ( type annotationMethodOrConstantRest ';' | normalClassDeclaration ( ';' )? | normalInterfaceDeclaration ( ';' )? | enumDeclaration ( ';' )? | annotationTypeDeclaration ( ';' )? );
	[GrammarRule("annotationTypeElementRest")]
	private AstParserRuleReturnScope<object, IToken> annotationTypeElementRest()
	{
		EnterRule_annotationTypeElementRest();
		EnterRule("annotationTypeElementRest", 80);
		TraceIn("annotationTypeElementRest", 80);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationTypeElementRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal315 = default(IToken);
		IToken char_literal317 = default(IToken);
		IToken char_literal319 = default(IToken);
		IToken char_literal321 = default(IToken);
		IToken char_literal323 = default(IToken);
		AstParserRuleReturnScope<object, IToken> type313 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> annotationMethodOrConstantRest314 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> normalClassDeclaration316 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> normalInterfaceDeclaration318 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> enumDeclaration320 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> annotationTypeDeclaration322 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal315_tree = default(object);
		object char_literal317_tree = default(object);
		object char_literal319_tree = default(object);
		object char_literal321_tree = default(object);
		object char_literal323_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationTypeElementRest");
		DebugLocation(490, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 80)) { return retval; }

			// JavaJava.g3:491:5: ( type annotationMethodOrConstantRest ';' | normalClassDeclaration ( ';' )? | normalInterfaceDeclaration ( ';' )? | enumDeclaration ( ';' )? | annotationTypeDeclaration ( ';' )? )
			int alt107=5;
			try { DebugEnterDecision(107, false);
			switch (input.LA(1))
			{
			case Identifier:
			case 60:
			case 62:
			case 65:
			case 70:
			case 76:
			case 82:
			case 84:
			case 93:
				{
				alt107 = 1;
				}
				break;
			case 66:
				{
				alt107 = 2;
				}
				break;
			case 83:
				{
				alt107 = 3;
				}
				break;
			case ENUM:
				{
				alt107 = 4;
				}
				break;
			case 54:
				{
				alt107 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 107, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(107); }
			switch (alt107)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:491:9: type annotationMethodOrConstantRest ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(491, 9);
				PushFollow(Follow._type_in_annotationTypeElementRest3351);
				type313=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type313.Tree);
				DebugLocation(491, 14);
				PushFollow(Follow._annotationMethodOrConstantRest_in_annotationTypeElementRest3353);
				annotationMethodOrConstantRest314=annotationMethodOrConstantRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationMethodOrConstantRest314.Tree);
				DebugLocation(491, 45);
				char_literal315=(IToken)Match(input,48,Follow._48_in_annotationTypeElementRest3355); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal315_tree = (object)adaptor.Create(char_literal315);
				adaptor.AddChild(root_0, char_literal315_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:492:9: normalClassDeclaration ( ';' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(492, 9);
				PushFollow(Follow._normalClassDeclaration_in_annotationTypeElementRest3365);
				normalClassDeclaration316=normalClassDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalClassDeclaration316.Tree);
				DebugLocation(492, 32);
				// JavaJava.g3:492:32: ( ';' )?
				int alt103=2;
				try { DebugEnterSubRule(103);
				try { DebugEnterDecision(103, false);
				int LA103_1 = input.LA(1);

				if ((LA103_1==48))
				{
					alt103 = 1;
				}
				} finally { DebugExitDecision(103); }
				switch (alt103)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:492:32: ';'
					{
					DebugLocation(492, 32);
					char_literal317=(IToken)Match(input,48,Follow._48_in_annotationTypeElementRest3367); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal317_tree = (object)adaptor.Create(char_literal317);
					adaptor.AddChild(root_0, char_literal317_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(103); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:493:9: normalInterfaceDeclaration ( ';' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(493, 9);
				PushFollow(Follow._normalInterfaceDeclaration_in_annotationTypeElementRest3378);
				normalInterfaceDeclaration318=normalInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, normalInterfaceDeclaration318.Tree);
				DebugLocation(493, 36);
				// JavaJava.g3:493:36: ( ';' )?
				int alt104=2;
				try { DebugEnterSubRule(104);
				try { DebugEnterDecision(104, false);
				int LA104_1 = input.LA(1);

				if ((LA104_1==48))
				{
					alt104 = 1;
				}
				} finally { DebugExitDecision(104); }
				switch (alt104)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:493:36: ';'
					{
					DebugLocation(493, 36);
					char_literal319=(IToken)Match(input,48,Follow._48_in_annotationTypeElementRest3380); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal319_tree = (object)adaptor.Create(char_literal319);
					adaptor.AddChild(root_0, char_literal319_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(104); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:494:9: enumDeclaration ( ';' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(494, 9);
				PushFollow(Follow._enumDeclaration_in_annotationTypeElementRest3391);
				enumDeclaration320=enumDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumDeclaration320.Tree);
				DebugLocation(494, 25);
				// JavaJava.g3:494:25: ( ';' )?
				int alt105=2;
				try { DebugEnterSubRule(105);
				try { DebugEnterDecision(105, false);
				int LA105_1 = input.LA(1);

				if ((LA105_1==48))
				{
					alt105 = 1;
				}
				} finally { DebugExitDecision(105); }
				switch (alt105)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:494:25: ';'
					{
					DebugLocation(494, 25);
					char_literal321=(IToken)Match(input,48,Follow._48_in_annotationTypeElementRest3393); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal321_tree = (object)adaptor.Create(char_literal321);
					adaptor.AddChild(root_0, char_literal321_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(105); }


				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:495:9: annotationTypeDeclaration ( ';' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(495, 9);
				PushFollow(Follow._annotationTypeDeclaration_in_annotationTypeElementRest3404);
				annotationTypeDeclaration322=annotationTypeDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationTypeDeclaration322.Tree);
				DebugLocation(495, 35);
				// JavaJava.g3:495:35: ( ';' )?
				int alt106=2;
				try { DebugEnterSubRule(106);
				try { DebugEnterDecision(106, false);
				int LA106_1 = input.LA(1);

				if ((LA106_1==48))
				{
					alt106 = 1;
				}
				} finally { DebugExitDecision(106); }
				switch (alt106)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:495:35: ';'
					{
					DebugLocation(495, 35);
					char_literal323=(IToken)Match(input,48,Follow._48_in_annotationTypeElementRest3406); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal323_tree = (object)adaptor.Create(char_literal323);
					adaptor.AddChild(root_0, char_literal323_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(106); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationTypeElementRest", 80);
			LeaveRule("annotationTypeElementRest", 80);
			LeaveRule_annotationTypeElementRest();
			if (state.backtracking > 0) { Memoize(input, 80, annotationTypeElementRest_StartIndex); }

		}
		DebugLocation(496, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationTypeElementRest"); }
		return retval;

	}
	// $ANTLR end "annotationTypeElementRest"

	partial void EnterRule_annotationMethodOrConstantRest();
	partial void LeaveRule_annotationMethodOrConstantRest();
	// $ANTLR start "annotationMethodOrConstantRest"
	// JavaJava.g3:498:1: annotationMethodOrConstantRest : ( annotationMethodRest | annotationConstantRest );
	[GrammarRule("annotationMethodOrConstantRest")]
	private AstParserRuleReturnScope<object, IToken> annotationMethodOrConstantRest()
	{
		EnterRule_annotationMethodOrConstantRest();
		EnterRule("annotationMethodOrConstantRest", 81);
		TraceIn("annotationMethodOrConstantRest", 81);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationMethodOrConstantRest_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> annotationMethodRest324 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> annotationConstantRest325 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "annotationMethodOrConstantRest");
		DebugLocation(498, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 81)) { return retval; }

			// JavaJava.g3:499:5: ( annotationMethodRest | annotationConstantRest )
			int alt108=2;
			try { DebugEnterDecision(108, false);
			int LA108_1 = input.LA(1);

			if ((LA108_1==Identifier))
			{
				int LA108_2 = input.LA(2);

				if ((LA108_2==32))
				{
					alt108 = 1;
				}
				else if ((LA108_2==39||LA108_2==48||LA108_2==50||LA108_2==55))
				{
					alt108 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 108, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 108, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(108); }
			switch (alt108)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:499:9: annotationMethodRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(499, 9);
				PushFollow(Follow._annotationMethodRest_in_annotationMethodOrConstantRest3430);
				annotationMethodRest324=annotationMethodRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationMethodRest324.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:500:9: annotationConstantRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(500, 9);
				PushFollow(Follow._annotationConstantRest_in_annotationMethodOrConstantRest3440);
				annotationConstantRest325=annotationConstantRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, annotationConstantRest325.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationMethodOrConstantRest", 81);
			LeaveRule("annotationMethodOrConstantRest", 81);
			LeaveRule_annotationMethodOrConstantRest();
			if (state.backtracking > 0) { Memoize(input, 81, annotationMethodOrConstantRest_StartIndex); }

		}
		DebugLocation(501, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationMethodOrConstantRest"); }
		return retval;

	}
	// $ANTLR end "annotationMethodOrConstantRest"

	partial void EnterRule_annotationMethodRest();
	partial void LeaveRule_annotationMethodRest();
	// $ANTLR start "annotationMethodRest"
	// JavaJava.g3:503:1: annotationMethodRest : Identifier '(' ')' ( defaultValue )? ;
	[GrammarRule("annotationMethodRest")]
	private AstParserRuleReturnScope<object, IToken> annotationMethodRest()
	{
		EnterRule_annotationMethodRest();
		EnterRule("annotationMethodRest", 82);
		TraceIn("annotationMethodRest", 82);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationMethodRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier326 = default(IToken);
		IToken char_literal327 = default(IToken);
		IToken char_literal328 = default(IToken);
		AstParserRuleReturnScope<object, IToken> defaultValue329 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier326_tree = default(object);
		object char_literal327_tree = default(object);
		object char_literal328_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "annotationMethodRest");
		DebugLocation(503, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 82)) { return retval; }

			// JavaJava.g3:504:5: ( Identifier '(' ')' ( defaultValue )? )
			DebugEnterAlt(1);
			// JavaJava.g3:504:9: Identifier '(' ')' ( defaultValue )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(504, 9);
			Identifier326=(IToken)Match(input,Identifier,Follow._Identifier_in_annotationMethodRest3463); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier326_tree = (object)adaptor.Create(Identifier326);
			adaptor.AddChild(root_0, Identifier326_tree);
			}
			DebugLocation(504, 20);
			if (state.backtracking == 0)
			{
				id((Identifier326!=null?Identifier326.Text:default(string)));
			}
			DebugLocation(504, 44);
			char_literal327=(IToken)Match(input,32,Follow._32_in_annotationMethodRest3467); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal327_tree = (object)adaptor.Create(char_literal327);
			adaptor.AddChild(root_0, char_literal327_tree);
			}
			DebugLocation(504, 48);
			if (state.backtracking == 0)
			{
				s("(");
			}
			DebugLocation(504, 59);
			char_literal328=(IToken)Match(input,33,Follow._33_in_annotationMethodRest3472); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal328_tree = (object)adaptor.Create(char_literal328);
			adaptor.AddChild(root_0, char_literal328_tree);
			}
			DebugLocation(504, 62);
			if (state.backtracking == 0)
			{
				s(")");
			}
			DebugLocation(504, 73);
			// JavaJava.g3:504:73: ( defaultValue )?
			int alt109=2;
			try { DebugEnterSubRule(109);
			try { DebugEnterDecision(109, false);
			int LA109_1 = input.LA(1);

			if ((LA109_1==68))
			{
				alt109 = 1;
			}
			} finally { DebugExitDecision(109); }
			switch (alt109)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:504:73: defaultValue
				{
				DebugLocation(504, 73);
				PushFollow(Follow._defaultValue_in_annotationMethodRest3476);
				defaultValue329=defaultValue();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, defaultValue329.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(109); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationMethodRest", 82);
			LeaveRule("annotationMethodRest", 82);
			LeaveRule_annotationMethodRest();
			if (state.backtracking > 0) { Memoize(input, 82, annotationMethodRest_StartIndex); }

		}
		DebugLocation(505, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationMethodRest"); }
		return retval;

	}
	// $ANTLR end "annotationMethodRest"

	partial void EnterRule_annotationConstantRest();
	partial void LeaveRule_annotationConstantRest();
	// $ANTLR start "annotationConstantRest"
	// JavaJava.g3:507:1: annotationConstantRest : variableDeclarators ;
	[GrammarRule("annotationConstantRest")]
	private AstParserRuleReturnScope<object, IToken> annotationConstantRest()
	{
		EnterRule_annotationConstantRest();
		EnterRule("annotationConstantRest", 83);
		TraceIn("annotationConstantRest", 83);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int annotationConstantRest_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> variableDeclarators330 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "annotationConstantRest");
		DebugLocation(507, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 83)) { return retval; }

			// JavaJava.g3:508:5: ( variableDeclarators )
			DebugEnterAlt(1);
			// JavaJava.g3:508:9: variableDeclarators
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(508, 9);
			PushFollow(Follow._variableDeclarators_in_annotationConstantRest3500);
			variableDeclarators330=variableDeclarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarators330.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("annotationConstantRest", 83);
			LeaveRule("annotationConstantRest", 83);
			LeaveRule_annotationConstantRest();
			if (state.backtracking > 0) { Memoize(input, 83, annotationConstantRest_StartIndex); }

		}
		DebugLocation(509, 4);
		} finally { DebugExitRule(GrammarFileName, "annotationConstantRest"); }
		return retval;

	}
	// $ANTLR end "annotationConstantRest"

	partial void EnterRule_defaultValue();
	partial void LeaveRule_defaultValue();
	// $ANTLR start "defaultValue"
	// JavaJava.g3:511:1: defaultValue : 'default' elementValue ;
	[GrammarRule("defaultValue")]
	private AstParserRuleReturnScope<object, IToken> defaultValue()
	{
		EnterRule_defaultValue();
		EnterRule("defaultValue", 84);
		TraceIn("defaultValue", 84);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int defaultValue_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal331 = default(IToken);
		AstParserRuleReturnScope<object, IToken> elementValue332 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal331_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "defaultValue");
		DebugLocation(511, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 84)) { return retval; }

			// JavaJava.g3:512:5: ( 'default' elementValue )
			DebugEnterAlt(1);
			// JavaJava.g3:512:9: 'default' elementValue
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(512, 9);
			string_literal331=(IToken)Match(input,68,Follow._68_in_defaultValue3523); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal331_tree = (object)adaptor.Create(string_literal331);
			adaptor.AddChild(root_0, string_literal331_tree);
			}
			DebugLocation(512, 19);
			if (state.backtracking == 0)
			{
				keywordCount++;JavaMetrics.UniqueKeywords.Add("default");
			}
			DebugLocation(512, 79);
			PushFollow(Follow._elementValue_in_defaultValue3527);
			elementValue332=elementValue();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, elementValue332.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("defaultValue", 84);
			LeaveRule("defaultValue", 84);
			LeaveRule_defaultValue();
			if (state.backtracking > 0) { Memoize(input, 84, defaultValue_StartIndex); }

		}
		DebugLocation(513, 4);
		} finally { DebugExitRule(GrammarFileName, "defaultValue"); }
		return retval;

	}
	// $ANTLR end "defaultValue"

	partial void EnterRule_block();
	partial void LeaveRule_block();
	// $ANTLR start "block"
	// JavaJava.g3:517:1: block : '{' ( blockStatement )* '}' ;
	[GrammarRule("block")]
	private AstParserRuleReturnScope<object, IToken> block()
	{
		EnterRule_block();
		EnterRule("block", 85);
		TraceIn("block", 85);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int block_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal333 = default(IToken);
		IToken char_literal335 = default(IToken);
		AstParserRuleReturnScope<object, IToken> blockStatement334 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal333_tree = default(object);
		object char_literal335_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "block");
		DebugLocation(517, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 85)) { return retval; }

			// JavaJava.g3:518:5: ( '{' ( blockStatement )* '}' )
			DebugEnterAlt(1);
			// JavaJava.g3:518:9: '{' ( blockStatement )* '}'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(518, 9);
			char_literal333=(IToken)Match(input,108,Follow._108_in_block3548); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal333_tree = (object)adaptor.Create(char_literal333);
			adaptor.AddChild(root_0, char_literal333_tree);
			}
			DebugLocation(518, 13);
			if (state.backtracking == 0)
			{
				s("{");
			}
			DebugLocation(518, 23);
			// JavaJava.g3:518:23: ( blockStatement )*
			try { DebugEnterSubRule(110);
			while (true)
			{
				int alt110=2;
				try { DebugEnterDecision(110, false);
				int LA110_1 = input.LA(1);

				if ((LA110_1==ASSERT||(LA110_1>=CharacterLiteral && LA110_1<=ENUM)||LA110_1==FloatingPointLiteral||(LA110_1>=HexLiteral && LA110_1<=Identifier)||(LA110_1>=OctalLiteral && LA110_1<=StringLiteral)||LA110_1==25||LA110_1==32||(LA110_1>=36 && LA110_1<=37)||(LA110_1>=40 && LA110_1<=41)||LA110_1==48||LA110_1==54||(LA110_1>=59 && LA110_1<=62)||(LA110_1>=65 && LA110_1<=67)||(LA110_1>=69 && LA110_1<=70)||(LA110_1>=73 && LA110_1<=74)||(LA110_1>=76 && LA110_1<=78)||(LA110_1>=82 && LA110_1<=84)||(LA110_1>=86 && LA110_1<=87)||(LA110_1>=89 && LA110_1<=100)||(LA110_1>=103 && LA110_1<=105)||(LA110_1>=107 && LA110_1<=108)||LA110_1==113))
				{
					alt110 = 1;
				}


				} finally { DebugExitDecision(110); }
				switch ( alt110 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:518:23: blockStatement
					{
					DebugLocation(518, 23);
					PushFollow(Follow._blockStatement_in_block3552);
					blockStatement334=blockStatement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement334.Tree);

					}
					break;

				default:
					goto loop110;
				}
			}

			loop110:
				;

			} finally { DebugExitSubRule(110); }

			DebugLocation(518, 39);
			char_literal335=(IToken)Match(input,112,Follow._112_in_block3555); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal335_tree = (object)adaptor.Create(char_literal335);
			adaptor.AddChild(root_0, char_literal335_tree);
			}
			DebugLocation(518, 43);
			if (state.backtracking == 0)
			{
				s("}");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("block", 85);
			LeaveRule("block", 85);
			LeaveRule_block();
			if (state.backtracking > 0) { Memoize(input, 85, block_StartIndex); }

		}
		DebugLocation(519, 4);
		} finally { DebugExitRule(GrammarFileName, "block"); }
		return retval;

	}
	// $ANTLR end "block"

	partial void EnterRule_blockStatement();
	partial void LeaveRule_blockStatement();
	// $ANTLR start "blockStatement"
	// JavaJava.g3:521:1: blockStatement : ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement );
	[GrammarRule("blockStatement")]
	private AstParserRuleReturnScope<object, IToken> blockStatement()
	{
		EnterRule_blockStatement();
		EnterRule("blockStatement", 86);
		TraceIn("blockStatement", 86);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int blockStatement_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> localVariableDeclarationStatement336 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classOrInterfaceDeclaration337 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statement338 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "blockStatement");
		DebugLocation(521, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 86)) { return retval; }

			// JavaJava.g3:522:5: ( localVariableDeclarationStatement | classOrInterfaceDeclaration | statement )
			int alt111=3;
			try { DebugEnterDecision(111, false);
			switch (input.LA(1))
			{
			case 74:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((EvaluatePredicate(synpred152_JavaJava_fragment)))
				{
					alt111 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 54:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((EvaluatePredicate(synpred152_JavaJava_fragment)))
				{
					alt111 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case Identifier:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 60:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 65:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 62:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 93:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 82:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 84:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 76:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 70:
				{
				int LA111_2 = input.LA(2);

				if ((EvaluatePredicate(synpred151_JavaJava_fragment)))
				{
					alt111 = 1;
				}
				else if ((true))
				{
					alt111 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case ENUM:
			case 59:
			case 66:
			case 83:
			case 89:
			case 90:
			case 91:
			case 94:
			case 95:
				{
				alt111 = 2;
				}
				break;
			case ASSERT:
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case OctalLiteral:
			case StringLiteral:
			case 25:
			case 32:
			case 36:
			case 37:
			case 40:
			case 41:
			case 48:
			case 61:
			case 67:
			case 69:
			case 73:
			case 77:
			case 78:
			case 86:
			case 87:
			case 92:
			case 96:
			case 97:
			case 98:
			case 99:
			case 100:
			case 103:
			case 104:
			case 105:
			case 107:
			case 108:
			case 113:
				{
				alt111 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 111, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(111); }
			switch (alt111)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:522:10: localVariableDeclarationStatement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(522, 10);
				PushFollow(Follow._localVariableDeclarationStatement_in_blockStatement3581);
				localVariableDeclarationStatement336=localVariableDeclarationStatement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclarationStatement336.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:523:9: classOrInterfaceDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(523, 9);
				PushFollow(Follow._classOrInterfaceDeclaration_in_blockStatement3591);
				classOrInterfaceDeclaration337=classOrInterfaceDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceDeclaration337.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:524:8: statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(524, 8);
				PushFollow(Follow._statement_in_blockStatement3600);
				statement338=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement338.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("blockStatement", 86);
			LeaveRule("blockStatement", 86);
			LeaveRule_blockStatement();
			if (state.backtracking > 0) { Memoize(input, 86, blockStatement_StartIndex); }

		}
		DebugLocation(525, 4);
		} finally { DebugExitRule(GrammarFileName, "blockStatement"); }
		return retval;

	}
	// $ANTLR end "blockStatement"

	partial void EnterRule_localVariableDeclarationStatement();
	partial void LeaveRule_localVariableDeclarationStatement();
	// $ANTLR start "localVariableDeclarationStatement"
	// JavaJava.g3:527:1: localVariableDeclarationStatement : localVariableDeclaration ';' ;
	[GrammarRule("localVariableDeclarationStatement")]
	private AstParserRuleReturnScope<object, IToken> localVariableDeclarationStatement()
	{
		EnterRule_localVariableDeclarationStatement();
		EnterRule("localVariableDeclarationStatement", 87);
		TraceIn("localVariableDeclarationStatement", 87);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int localVariableDeclarationStatement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal340 = default(IToken);
		AstParserRuleReturnScope<object, IToken> localVariableDeclaration339 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal340_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "localVariableDeclarationStatement");
		DebugLocation(527, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 87)) { return retval; }

			// JavaJava.g3:528:5: ( localVariableDeclaration ';' )
			DebugEnterAlt(1);
			// JavaJava.g3:528:10: localVariableDeclaration ';'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(528, 10);
			PushFollow(Follow._localVariableDeclaration_in_localVariableDeclarationStatement3625);
			localVariableDeclaration339=localVariableDeclaration();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclaration339.Tree);
			DebugLocation(528, 35);
			if (state.backtracking == 0)
			{
				primitive=false;
			}
			DebugLocation(528, 53);
			char_literal340=(IToken)Match(input,48,Follow._48_in_localVariableDeclarationStatement3628); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal340_tree = (object)adaptor.Create(char_literal340);
			adaptor.AddChild(root_0, char_literal340_tree);
			}
			DebugLocation(528, 57);
			if (state.backtracking == 0)
			{
				s(";");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableDeclarationStatement", 87);
			LeaveRule("localVariableDeclarationStatement", 87);
			LeaveRule_localVariableDeclarationStatement();
			if (state.backtracking > 0) { Memoize(input, 87, localVariableDeclarationStatement_StartIndex); }

		}
		DebugLocation(529, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableDeclarationStatement"); }
		return retval;

	}
	// $ANTLR end "localVariableDeclarationStatement"

	partial void EnterRule_localVariableDeclaration();
	partial void LeaveRule_localVariableDeclaration();
	// $ANTLR start "localVariableDeclaration"
	// JavaJava.g3:531:1: localVariableDeclaration : variableModifiers type variableDeclarators ;
	[GrammarRule("localVariableDeclaration")]
	private AstParserRuleReturnScope<object, IToken> localVariableDeclaration()
	{
		EnterRule_localVariableDeclaration();
		EnterRule("localVariableDeclaration", 88);
		TraceIn("localVariableDeclaration", 88);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int localVariableDeclaration_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> variableModifiers341 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type342 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> variableDeclarators343 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "localVariableDeclaration");
		DebugLocation(531, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 88)) { return retval; }

			// JavaJava.g3:532:5: ( variableModifiers type variableDeclarators )
			DebugEnterAlt(1);
			// JavaJava.g3:532:9: variableModifiers type variableDeclarators
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(532, 9);
			PushFollow(Follow._variableModifiers_in_localVariableDeclaration3649);
			variableModifiers341=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers341.Tree);
			DebugLocation(532, 27);
			PushFollow(Follow._type_in_localVariableDeclaration3651);
			type342=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type342.Tree);
			DebugLocation(532, 32);
			PushFollow(Follow._variableDeclarators_in_localVariableDeclaration3653);
			variableDeclarators343=variableDeclarators();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclarators343.Tree);
			DebugLocation(532, 52);
			if (state.backtracking == 0)
			{
				primitive = false;
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("localVariableDeclaration", 88);
			LeaveRule("localVariableDeclaration", 88);
			LeaveRule_localVariableDeclaration();
			if (state.backtracking > 0) { Memoize(input, 88, localVariableDeclaration_StartIndex); }

		}
		DebugLocation(533, 4);
		} finally { DebugExitRule(GrammarFileName, "localVariableDeclaration"); }
		return retval;

	}
	// $ANTLR end "localVariableDeclaration"

	partial void EnterRule_variableModifiers();
	partial void LeaveRule_variableModifiers();
	// $ANTLR start "variableModifiers"
	// JavaJava.g3:535:1: variableModifiers : ( variableModifier )* ;
	[GrammarRule("variableModifiers")]
	private AstParserRuleReturnScope<object, IToken> variableModifiers()
	{
		EnterRule_variableModifiers();
		EnterRule("variableModifiers", 89);
		TraceIn("variableModifiers", 89);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int variableModifiers_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> variableModifier344 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "variableModifiers");
		DebugLocation(535, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 89)) { return retval; }

			// JavaJava.g3:536:5: ( ( variableModifier )* )
			DebugEnterAlt(1);
			// JavaJava.g3:536:9: ( variableModifier )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(536, 9);
			// JavaJava.g3:536:9: ( variableModifier )*
			try { DebugEnterSubRule(112);
			while (true)
			{
				int alt112=2;
				try { DebugEnterDecision(112, false);
				int LA112_1 = input.LA(1);

				if ((LA112_1==54||LA112_1==74))
				{
					alt112 = 1;
				}


				} finally { DebugExitDecision(112); }
				switch ( alt112 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:536:9: variableModifier
					{
					DebugLocation(536, 9);
					PushFollow(Follow._variableModifier_in_variableModifiers3678);
					variableModifier344=variableModifier();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifier344.Tree);

					}
					break;

				default:
					goto loop112;
				}
			}

			loop112:
				;

			} finally { DebugExitSubRule(112); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("variableModifiers", 89);
			LeaveRule("variableModifiers", 89);
			LeaveRule_variableModifiers();
			if (state.backtracking > 0) { Memoize(input, 89, variableModifiers_StartIndex); }

		}
		DebugLocation(537, 4);
		} finally { DebugExitRule(GrammarFileName, "variableModifiers"); }
		return retval;

	}
	// $ANTLR end "variableModifiers"

	partial void EnterRule_statement();
	partial void LeaveRule_statement();
	// $ANTLR start "statement"
	// JavaJava.g3:539:1: statement : ( block | ASSERT expression ( ':' expression )? ';' | 'if' parExpression statement ( options {k=1; } : 'else' statement )? | 'for' '(' forControl ')' statement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | 'try' block ( catches 'finally' block | catches | 'finally' block ) | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( Identifier )? ';' | 'continue' ( Identifier )? ';' | ';' | statementExpression ';' | Identifier ':' statement );
	[GrammarRule("statement")]
	private AstParserRuleReturnScope<object, IToken> statement()
	{
		EnterRule_statement();
		EnterRule("statement", 90);
		TraceIn("statement", 90);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int statement_StartIndex = input.Index;

		object root_0 = default(object);

		IToken ASSERT346 = default(IToken);
		IToken char_literal348 = default(IToken);
		IToken char_literal350 = default(IToken);
		IToken string_literal351 = default(IToken);
		IToken string_literal354 = default(IToken);
		IToken string_literal356 = default(IToken);
		IToken char_literal357 = default(IToken);
		IToken char_literal359 = default(IToken);
		IToken string_literal361 = default(IToken);
		IToken string_literal364 = default(IToken);
		IToken string_literal366 = default(IToken);
		IToken char_literal368 = default(IToken);
		IToken string_literal369 = default(IToken);
		IToken string_literal372 = default(IToken);
		IToken string_literal375 = default(IToken);
		IToken string_literal377 = default(IToken);
		IToken char_literal379 = default(IToken);
		IToken char_literal381 = default(IToken);
		IToken string_literal382 = default(IToken);
		IToken string_literal385 = default(IToken);
		IToken char_literal387 = default(IToken);
		IToken string_literal388 = default(IToken);
		IToken char_literal390 = default(IToken);
		IToken string_literal391 = default(IToken);
		IToken Identifier392 = default(IToken);
		IToken char_literal393 = default(IToken);
		IToken string_literal394 = default(IToken);
		IToken Identifier395 = default(IToken);
		IToken char_literal396 = default(IToken);
		IToken char_literal397 = default(IToken);
		IToken char_literal399 = default(IToken);
		IToken Identifier400 = default(IToken);
		IToken char_literal401 = default(IToken);
		AstParserRuleReturnScope<object, IToken> block345 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression347 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression349 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> parExpression352 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statement353 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statement355 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> forControl358 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statement360 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> parExpression362 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statement363 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statement365 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> parExpression367 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> block370 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> catches371 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> block373 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> catches374 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> block376 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> parExpression378 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> switchBlockStatementGroups380 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> parExpression383 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> block384 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression386 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression389 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statementExpression398 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> statement402 = default(AstParserRuleReturnScope<object, IToken>);

		object ASSERT346_tree = default(object);
		object char_literal348_tree = default(object);
		object char_literal350_tree = default(object);
		object string_literal351_tree = default(object);
		object string_literal354_tree = default(object);
		object string_literal356_tree = default(object);
		object char_literal357_tree = default(object);
		object char_literal359_tree = default(object);
		object string_literal361_tree = default(object);
		object string_literal364_tree = default(object);
		object string_literal366_tree = default(object);
		object char_literal368_tree = default(object);
		object string_literal369_tree = default(object);
		object string_literal372_tree = default(object);
		object string_literal375_tree = default(object);
		object string_literal377_tree = default(object);
		object char_literal379_tree = default(object);
		object char_literal381_tree = default(object);
		object string_literal382_tree = default(object);
		object string_literal385_tree = default(object);
		object char_literal387_tree = default(object);
		object string_literal388_tree = default(object);
		object char_literal390_tree = default(object);
		object string_literal391_tree = default(object);
		object Identifier392_tree = default(object);
		object char_literal393_tree = default(object);
		object string_literal394_tree = default(object);
		object Identifier395_tree = default(object);
		object char_literal396_tree = default(object);
		object char_literal397_tree = default(object);
		object char_literal399_tree = default(object);
		object Identifier400_tree = default(object);
		object char_literal401_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(539, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 90)) { return retval; }

			// JavaJava.g3:540:5: ( block | ASSERT expression ( ':' expression )? ';' | 'if' parExpression statement ( options {k=1; } : 'else' statement )? | 'for' '(' forControl ')' statement | 'while' parExpression statement | 'do' statement 'while' parExpression ';' | 'try' block ( catches 'finally' block | catches | 'finally' block ) | 'switch' parExpression '{' switchBlockStatementGroups '}' | 'synchronized' parExpression block | 'return' ( expression )? ';' | 'throw' expression ';' | 'break' ( Identifier )? ';' | 'continue' ( Identifier )? ';' | ';' | statementExpression ';' | Identifier ':' statement )
			int alt119=16;
			try { DebugEnterDecision(119, false);
			switch (input.LA(1))
			{
			case 108:
				{
				alt119 = 1;
				}
				break;
			case ASSERT:
				{
				alt119 = 2;
				}
				break;
			case 78:
				{
				alt119 = 3;
				}
				break;
			case 77:
				{
				alt119 = 4;
				}
				break;
			case 107:
				{
				alt119 = 5;
				}
				break;
			case 69:
				{
				alt119 = 6;
				}
				break;
			case 104:
				{
				alt119 = 7;
				}
				break;
			case 97:
				{
				alt119 = 8;
				}
				break;
			case 98:
				{
				alt119 = 9;
				}
				break;
			case 92:
				{
				alt119 = 10;
				}
				break;
			case 100:
				{
				alt119 = 11;
				}
				break;
			case 61:
				{
				alt119 = 12;
				}
				break;
			case 67:
				{
				alt119 = 13;
				}
				break;
			case 48:
				{
				alt119 = 14;
				}
				break;
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case OctalLiteral:
			case StringLiteral:
			case 25:
			case 32:
			case 36:
			case 37:
			case 40:
			case 41:
			case 60:
			case 62:
			case 65:
			case 70:
			case 73:
			case 76:
			case 82:
			case 84:
			case 86:
			case 87:
			case 93:
			case 96:
			case 99:
			case 103:
			case 105:
			case 113:
				{
				alt119 = 15;
				}
				break;
			case Identifier:
				{
				int LA119_2 = input.LA(2);

				if (((LA119_2>=26 && LA119_2<=32)||(LA119_2>=34 && LA119_2<=38)||(LA119_2>=40 && LA119_2<=43)||(LA119_2>=45 && LA119_2<=46)||(LA119_2>=48 && LA119_2<=53)||LA119_2==55||(LA119_2>=57 && LA119_2<=58)||LA119_2==81||(LA119_2>=109 && LA119_2<=111)))
				{
					alt119 = 15;
				}
				else if ((LA119_2==47))
				{
					alt119 = 16;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 119, 16, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 119, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(119); }
			switch (alt119)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:540:7: block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(540, 7);
				PushFollow(Follow._block_in_statement3696);
				block345=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block345.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:541:9: ASSERT expression ( ':' expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(541, 9);
				ASSERT346=(IToken)Match(input,ASSERT,Follow._ASSERT_in_statement3706); if (state.failed) return retval;
				if (state.backtracking == 0) {
				ASSERT346_tree = (object)adaptor.Create(ASSERT346);
				adaptor.AddChild(root_0, ASSERT346_tree);
				}
				DebugLocation(541, 16);
				PushFollow(Follow._expression_in_statement3708);
				expression347=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression347.Tree);
				DebugLocation(541, 27);
				// JavaJava.g3:541:27: ( ':' expression )?
				int alt113=2;
				try { DebugEnterSubRule(113);
				try { DebugEnterDecision(113, false);
				int LA113_1 = input.LA(1);

				if ((LA113_1==47))
				{
					alt113 = 1;
				}
				} finally { DebugExitDecision(113); }
				switch (alt113)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:541:28: ':' expression
					{
					DebugLocation(541, 28);
					char_literal348=(IToken)Match(input,47,Follow._47_in_statement3711); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal348_tree = (object)adaptor.Create(char_literal348);
					adaptor.AddChild(root_0, char_literal348_tree);
					}
					DebugLocation(541, 32);
					PushFollow(Follow._expression_in_statement3713);
					expression349=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression349.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(113); }

				DebugLocation(541, 45);
				char_literal350=(IToken)Match(input,48,Follow._48_in_statement3717); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal350_tree = (object)adaptor.Create(char_literal350);
				adaptor.AddChild(root_0, char_literal350_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:542:9: 'if' parExpression statement ( options {k=1; } : 'else' statement )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(542, 9);
				string_literal351=(IToken)Match(input,78,Follow._78_in_statement3727); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal351_tree = (object)adaptor.Create(string_literal351);
				adaptor.AddChild(root_0, string_literal351_tree);
				}
				DebugLocation(542, 13);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("if"); mmc++;
				}
				DebugLocation(542, 75);
				PushFollow(Follow._parExpression_in_statement3730);
				parExpression352=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression352.Tree);
				DebugLocation(542, 89);
				PushFollow(Follow._statement_in_statement3732);
				statement353=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement353.Tree);
				DebugLocation(542, 99);
				// JavaJava.g3:542:99: ( options {k=1; } : 'else' statement )?
				int alt114=2;
				try { DebugEnterSubRule(114);
				try { DebugEnterDecision(114, false);
				int LA114_1 = input.LA(1);

				if ((LA114_1==71))
				{
					int LA114_2 = input.LA(2);

					if ((EvaluatePredicate(synpred157_JavaJava_fragment)))
					{
						alt114 = 1;
					}
				}
				} finally { DebugExitDecision(114); }
				switch (alt114)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:542:115: 'else' statement
					{
					DebugLocation(542, 115);
					string_literal354=(IToken)Match(input,71,Follow._71_in_statement3742); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal354_tree = (object)adaptor.Create(string_literal354);
					adaptor.AddChild(root_0, string_literal354_tree);
					}
					DebugLocation(542, 122);
					if (state.backtracking == 0)
					{
						keywordCount++;JavaMetrics.UniqueKeywords.Add("else");
					}
					DebugLocation(542, 179);
					PushFollow(Follow._statement_in_statement3746);
					statement355=statement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, statement355.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(114); }


				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:543:9: 'for' '(' forControl ')' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(543, 9);
				string_literal356=(IToken)Match(input,77,Follow._77_in_statement3758); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal356_tree = (object)adaptor.Create(string_literal356);
				adaptor.AddChild(root_0, string_literal356_tree);
				}
				DebugLocation(543, 15);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("for");mmc++;
				}
				DebugLocation(543, 77);
				char_literal357=(IToken)Match(input,32,Follow._32_in_statement3762); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal357_tree = (object)adaptor.Create(char_literal357);
				adaptor.AddChild(root_0, char_literal357_tree);
				}
				DebugLocation(543, 81);
				if (state.backtracking == 0)
				{
					s("(");
				}
				DebugLocation(543, 91);
				PushFollow(Follow._forControl_in_statement3766);
				forControl358=forControl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, forControl358.Tree);
				DebugLocation(543, 102);
				char_literal359=(IToken)Match(input,33,Follow._33_in_statement3768); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal359_tree = (object)adaptor.Create(char_literal359);
				adaptor.AddChild(root_0, char_literal359_tree);
				}
				DebugLocation(543, 106);
				if (state.backtracking == 0)
				{
					s("}");
				}
				DebugLocation(543, 116);
				PushFollow(Follow._statement_in_statement3772);
				statement360=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement360.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:544:9: 'while' parExpression statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(544, 9);
				string_literal361=(IToken)Match(input,107,Follow._107_in_statement3782); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal361_tree = (object)adaptor.Create(string_literal361);
				adaptor.AddChild(root_0, string_literal361_tree);
				}
				DebugLocation(544, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("while"); mmc++;
				}
				DebugLocation(544, 81);
				PushFollow(Follow._parExpression_in_statement3785);
				parExpression362=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression362.Tree);
				DebugLocation(544, 96);
				PushFollow(Follow._statement_in_statement3788);
				statement363=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement363.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:545:9: 'do' statement 'while' parExpression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(545, 9);
				string_literal364=(IToken)Match(input,69,Follow._69_in_statement3798); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal364_tree = (object)adaptor.Create(string_literal364);
				adaptor.AddChild(root_0, string_literal364_tree);
				}
				DebugLocation(545, 13);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("do");mmc++;
				}
				DebugLocation(545, 74);
				PushFollow(Follow._statement_in_statement3801);
				statement365=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement365.Tree);
				DebugLocation(545, 84);
				string_literal366=(IToken)Match(input,107,Follow._107_in_statement3803); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal366_tree = (object)adaptor.Create(string_literal366);
				adaptor.AddChild(root_0, string_literal366_tree);
				}
				DebugLocation(545, 92);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("while");
				}
				DebugLocation(545, 150);
				PushFollow(Follow._parExpression_in_statement3807);
				parExpression367=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression367.Tree);
				DebugLocation(545, 164);
				char_literal368=(IToken)Match(input,48,Follow._48_in_statement3809); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal368_tree = (object)adaptor.Create(char_literal368);
				adaptor.AddChild(root_0, char_literal368_tree);
				}
				DebugLocation(545, 168);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// JavaJava.g3:546:9: 'try' block ( catches 'finally' block | catches | 'finally' block )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(546, 9);
				string_literal369=(IToken)Match(input,104,Follow._104_in_statement3821); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal369_tree = (object)adaptor.Create(string_literal369);
				adaptor.AddChild(root_0, string_literal369_tree);
				}
				DebugLocation(546, 14);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("try");
				}
				DebugLocation(546, 70);
				PushFollow(Follow._block_in_statement3824);
				block370=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block370.Tree);
				DebugLocation(547, 9);
				// JavaJava.g3:547:9: ( catches 'finally' block | catches | 'finally' block )
				int alt115=3;
				try { DebugEnterSubRule(115);
				try { DebugEnterDecision(115, false);
				int LA115_1 = input.LA(1);

				if ((LA115_1==64))
				{
					int LA115_2 = input.LA(2);

					if ((EvaluatePredicate(synpred162_JavaJava_fragment)))
					{
						alt115 = 1;
					}
					else if ((EvaluatePredicate(synpred163_JavaJava_fragment)))
					{
						alt115 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 115, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA115_1==75))
				{
					alt115 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 115, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(115); }
				switch (alt115)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:547:11: catches 'finally' block
					{
					DebugLocation(547, 11);
					PushFollow(Follow._catches_in_statement3836);
					catches371=catches();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catches371.Tree);
					DebugLocation(547, 19);
					string_literal372=(IToken)Match(input,75,Follow._75_in_statement3838); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal372_tree = (object)adaptor.Create(string_literal372);
					adaptor.AddChild(root_0, string_literal372_tree);
					}
					DebugLocation(547, 29);
					if (state.backtracking == 0)
					{
						keywordCount++;JavaMetrics.UniqueKeywords.Add("finally");
					}
					DebugLocation(547, 88);
					PushFollow(Follow._block_in_statement3841);
					block373=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block373.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:548:11: catches
					{
					DebugLocation(548, 11);
					PushFollow(Follow._catches_in_statement3853);
					catches374=catches();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catches374.Tree);

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// JavaJava.g3:549:13: 'finally' block
					{
					DebugLocation(549, 13);
					string_literal375=(IToken)Match(input,75,Follow._75_in_statement3867); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal375_tree = (object)adaptor.Create(string_literal375);
					adaptor.AddChild(root_0, string_literal375_tree);
					}
					DebugLocation(549, 22);
					if (state.backtracking == 0)
					{
						keywordCount++;JavaMetrics.UniqueKeywords.Add("finally");
					}
					DebugLocation(549, 82);
					PushFollow(Follow._block_in_statement3870);
					block376=block();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, block376.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(115); }


				}
				break;
			case 8:
				DebugEnterAlt(8);
				// JavaJava.g3:551:9: 'switch' parExpression '{' switchBlockStatementGroups '}'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(551, 9);
				string_literal377=(IToken)Match(input,97,Follow._97_in_statement3890); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal377_tree = (object)adaptor.Create(string_literal377);
				adaptor.AddChild(root_0, string_literal377_tree);
				}
				DebugLocation(551, 17);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("switch");
				}
				DebugLocation(551, 77);
				PushFollow(Follow._parExpression_in_statement3894);
				parExpression378=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression378.Tree);
				DebugLocation(551, 91);
				char_literal379=(IToken)Match(input,108,Follow._108_in_statement3896); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal379_tree = (object)adaptor.Create(char_literal379);
				adaptor.AddChild(root_0, char_literal379_tree);
				}
				DebugLocation(551, 95);
				PushFollow(Follow._switchBlockStatementGroups_in_statement3898);
				switchBlockStatementGroups380=switchBlockStatementGroups();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, switchBlockStatementGroups380.Tree);
				DebugLocation(551, 122);
				char_literal381=(IToken)Match(input,112,Follow._112_in_statement3900); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal381_tree = (object)adaptor.Create(char_literal381);
				adaptor.AddChild(root_0, char_literal381_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// JavaJava.g3:552:9: 'synchronized' parExpression block
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(552, 9);
				string_literal382=(IToken)Match(input,98,Follow._98_in_statement3910); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal382_tree = (object)adaptor.Create(string_literal382);
				adaptor.AddChild(root_0, string_literal382_tree);
				}
				DebugLocation(552, 23);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("synchronized");
				}
				DebugLocation(552, 88);
				PushFollow(Follow._parExpression_in_statement3913);
				parExpression383=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression383.Tree);
				DebugLocation(552, 102);
				PushFollow(Follow._block_in_statement3915);
				block384=block();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, block384.Tree);

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// JavaJava.g3:553:9: 'return' ( expression )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(553, 9);
				string_literal385=(IToken)Match(input,92,Follow._92_in_statement3925); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal385_tree = (object)adaptor.Create(string_literal385);
				adaptor.AddChild(root_0, string_literal385_tree);
				}
				DebugLocation(553, 18);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("return");
				}
				DebugLocation(553, 77);
				// JavaJava.g3:553:77: ( expression )?
				int alt116=2;
				try { DebugEnterSubRule(116);
				try { DebugEnterDecision(116, false);
				int LA116_1 = input.LA(1);

				if (((LA116_1>=CharacterLiteral && LA116_1<=DecimalLiteral)||LA116_1==FloatingPointLiteral||(LA116_1>=HexLiteral && LA116_1<=Identifier)||(LA116_1>=OctalLiteral && LA116_1<=StringLiteral)||LA116_1==25||LA116_1==32||(LA116_1>=36 && LA116_1<=37)||(LA116_1>=40 && LA116_1<=41)||LA116_1==60||LA116_1==62||LA116_1==65||LA116_1==70||LA116_1==73||LA116_1==76||LA116_1==82||LA116_1==84||(LA116_1>=86 && LA116_1<=87)||LA116_1==93||LA116_1==96||LA116_1==99||LA116_1==103||LA116_1==105||LA116_1==113))
				{
					alt116 = 1;
				}
				} finally { DebugExitDecision(116); }
				switch (alt116)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:553:77: expression
					{
					DebugLocation(553, 77);
					PushFollow(Follow._expression_in_statement3929);
					expression386=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression386.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(116); }

				DebugLocation(553, 89);
				char_literal387=(IToken)Match(input,48,Follow._48_in_statement3932); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal387_tree = (object)adaptor.Create(char_literal387);
				adaptor.AddChild(root_0, char_literal387_tree);
				}
				DebugLocation(553, 93);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// JavaJava.g3:554:9: 'throw' expression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(554, 9);
				string_literal388=(IToken)Match(input,100,Follow._100_in_statement3944); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal388_tree = (object)adaptor.Create(string_literal388);
				adaptor.AddChild(root_0, string_literal388_tree);
				}
				DebugLocation(554, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("throw");
				}
				DebugLocation(554, 74);
				PushFollow(Follow._expression_in_statement3947);
				expression389=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression389.Tree);
				DebugLocation(554, 85);
				char_literal390=(IToken)Match(input,48,Follow._48_in_statement3949); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal390_tree = (object)adaptor.Create(char_literal390);
				adaptor.AddChild(root_0, char_literal390_tree);
				}
				DebugLocation(554, 89);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// JavaJava.g3:555:9: 'break' ( Identifier )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(555, 9);
				string_literal391=(IToken)Match(input,61,Follow._61_in_statement3961); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal391_tree = (object)adaptor.Create(string_literal391);
				adaptor.AddChild(root_0, string_literal391_tree);
				}
				DebugLocation(555, 17);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("break"); Console.Write("FOUND BREAK");
				}
				DebugLocation(555, 104);
				// JavaJava.g3:555:104: ( Identifier )?
				int alt117=2;
				try { DebugEnterSubRule(117);
				try { DebugEnterDecision(117, false);
				int LA117_1 = input.LA(1);

				if ((LA117_1==Identifier))
				{
					alt117 = 1;
				}
				} finally { DebugExitDecision(117); }
				switch (alt117)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:555:104: Identifier
					{
					DebugLocation(555, 104);
					Identifier392=(IToken)Match(input,Identifier,Follow._Identifier_in_statement3964); if (state.failed) return retval;
					if (state.backtracking == 0) {
					Identifier392_tree = (object)adaptor.Create(Identifier392);
					adaptor.AddChild(root_0, Identifier392_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(117); }

				DebugLocation(555, 116);
				if (state.backtracking == 0)
				{
					if(primitive) id((Identifier392!=null?Identifier392.Text:default(string)));
				}
				DebugLocation(555, 153);
				char_literal393=(IToken)Match(input,48,Follow._48_in_statement3968); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal393_tree = (object)adaptor.Create(char_literal393);
				adaptor.AddChild(root_0, char_literal393_tree);
				}
				DebugLocation(555, 157);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 13:
				DebugEnterAlt(13);
				// JavaJava.g3:556:9: 'continue' ( Identifier )? ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(556, 9);
				string_literal394=(IToken)Match(input,67,Follow._67_in_statement3980); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal394_tree = (object)adaptor.Create(string_literal394);
				adaptor.AddChild(root_0, string_literal394_tree);
				}
				DebugLocation(556, 20);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("continue");
				}
				DebugLocation(556, 81);
				// JavaJava.g3:556:81: ( Identifier )?
				int alt118=2;
				try { DebugEnterSubRule(118);
				try { DebugEnterDecision(118, false);
				int LA118_1 = input.LA(1);

				if ((LA118_1==Identifier))
				{
					alt118 = 1;
				}
				} finally { DebugExitDecision(118); }
				switch (alt118)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:556:81: Identifier
					{
					DebugLocation(556, 81);
					Identifier395=(IToken)Match(input,Identifier,Follow._Identifier_in_statement3984); if (state.failed) return retval;
					if (state.backtracking == 0) {
					Identifier395_tree = (object)adaptor.Create(Identifier395);
					adaptor.AddChild(root_0, Identifier395_tree);
					}

					}
					break;

				}
				} finally { DebugExitSubRule(118); }

				DebugLocation(556, 94);
				if (state.backtracking == 0)
				{
					 id((Identifier395!=null?Identifier395.Text:default(string)));
				}
				DebugLocation(556, 118);
				char_literal396=(IToken)Match(input,48,Follow._48_in_statement3989); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal396_tree = (object)adaptor.Create(char_literal396);
				adaptor.AddChild(root_0, char_literal396_tree);
				}
				DebugLocation(556, 122);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 14:
				DebugEnterAlt(14);
				// JavaJava.g3:557:9: ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(557, 9);
				char_literal397=(IToken)Match(input,48,Follow._48_in_statement4001); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal397_tree = (object)adaptor.Create(char_literal397);
				adaptor.AddChild(root_0, char_literal397_tree);
				}
				DebugLocation(557, 13);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 15:
				DebugEnterAlt(15);
				// JavaJava.g3:558:9: statementExpression ';'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(558, 9);
				PushFollow(Follow._statementExpression_in_statement4013);
				statementExpression398=statementExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statementExpression398.Tree);
				DebugLocation(558, 29);
				char_literal399=(IToken)Match(input,48,Follow._48_in_statement4015); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal399_tree = (object)adaptor.Create(char_literal399);
				adaptor.AddChild(root_0, char_literal399_tree);
				}
				DebugLocation(558, 34);
				if (state.backtracking == 0)
				{
					s(";");
				}

				}
				break;
			case 16:
				DebugEnterAlt(16);
				// JavaJava.g3:559:9: Identifier ':' statement
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(559, 9);
				Identifier400=(IToken)Match(input,Identifier,Follow._Identifier_in_statement4028); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier400_tree = (object)adaptor.Create(Identifier400);
				adaptor.AddChild(root_0, Identifier400_tree);
				}
				DebugLocation(559, 20);
				if (state.backtracking == 0)
				{
					if(primitive) id((Identifier400!=null?Identifier400.Text:default(string)));
				}
				DebugLocation(559, 58);
				char_literal401=(IToken)Match(input,47,Follow._47_in_statement4032); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal401_tree = (object)adaptor.Create(char_literal401);
				adaptor.AddChild(root_0, char_literal401_tree);
				}
				DebugLocation(559, 62);
				PushFollow(Follow._statement_in_statement4034);
				statement402=statement();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, statement402.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statement", 90);
			LeaveRule("statement", 90);
			LeaveRule_statement();
			if (state.backtracking > 0) { Memoize(input, 90, statement_StartIndex); }

		}
		DebugLocation(560, 4);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return retval;

	}
	// $ANTLR end "statement"

	partial void EnterRule_catches();
	partial void LeaveRule_catches();
	// $ANTLR start "catches"
	// JavaJava.g3:562:1: catches : catchClause ( catchClause )* ;
	[GrammarRule("catches")]
	private AstParserRuleReturnScope<object, IToken> catches()
	{
		EnterRule_catches();
		EnterRule("catches", 91);
		TraceIn("catches", 91);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int catches_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> catchClause403 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> catchClause404 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "catches");
		DebugLocation(562, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 91)) { return retval; }

			// JavaJava.g3:563:5: ( catchClause ( catchClause )* )
			DebugEnterAlt(1);
			// JavaJava.g3:563:9: catchClause ( catchClause )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(563, 9);
			PushFollow(Follow._catchClause_in_catches4057);
			catchClause403=catchClause();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, catchClause403.Tree);
			DebugLocation(563, 21);
			// JavaJava.g3:563:21: ( catchClause )*
			try { DebugEnterSubRule(120);
			while (true)
			{
				int alt120=2;
				try { DebugEnterDecision(120, false);
				int LA120_1 = input.LA(1);

				if ((LA120_1==64))
				{
					alt120 = 1;
				}


				} finally { DebugExitDecision(120); }
				switch ( alt120 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:563:22: catchClause
					{
					DebugLocation(563, 22);
					PushFollow(Follow._catchClause_in_catches4060);
					catchClause404=catchClause();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, catchClause404.Tree);

					}
					break;

				default:
					goto loop120;
				}
			}

			loop120:
				;

			} finally { DebugExitSubRule(120); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catches", 91);
			LeaveRule("catches", 91);
			LeaveRule_catches();
			if (state.backtracking > 0) { Memoize(input, 91, catches_StartIndex); }

		}
		DebugLocation(564, 4);
		} finally { DebugExitRule(GrammarFileName, "catches"); }
		return retval;

	}
	// $ANTLR end "catches"

	partial void EnterRule_catchClause();
	partial void LeaveRule_catchClause();
	// $ANTLR start "catchClause"
	// JavaJava.g3:566:1: catchClause : 'catch' '(' formalParameter ')' block ;
	[GrammarRule("catchClause")]
	private AstParserRuleReturnScope<object, IToken> catchClause()
	{
		EnterRule_catchClause();
		EnterRule("catchClause", 92);
		TraceIn("catchClause", 92);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int catchClause_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal405 = default(IToken);
		IToken char_literal406 = default(IToken);
		IToken char_literal408 = default(IToken);
		AstParserRuleReturnScope<object, IToken> formalParameter407 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> block409 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal405_tree = default(object);
		object char_literal406_tree = default(object);
		object char_literal408_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "catchClause");
		DebugLocation(566, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 92)) { return retval; }

			// JavaJava.g3:567:5: ( 'catch' '(' formalParameter ')' block )
			DebugEnterAlt(1);
			// JavaJava.g3:567:9: 'catch' '(' formalParameter ')' block
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(567, 9);
			string_literal405=(IToken)Match(input,64,Follow._64_in_catchClause4085); if (state.failed) return retval;
			if (state.backtracking == 0) {
			string_literal405_tree = (object)adaptor.Create(string_literal405);
			adaptor.AddChild(root_0, string_literal405_tree);
			}
			DebugLocation(567, 17);
			if (state.backtracking == 0)
			{
				keywordCount++;JavaMetrics.UniqueKeywords.Add("catch");
			}
			DebugLocation(567, 74);
			char_literal406=(IToken)Match(input,32,Follow._32_in_catchClause4088); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal406_tree = (object)adaptor.Create(char_literal406);
			adaptor.AddChild(root_0, char_literal406_tree);
			}
			DebugLocation(567, 78);
			if (state.backtracking == 0)
			{
				s("(");
			}
			DebugLocation(567, 88);
			PushFollow(Follow._formalParameter_in_catchClause4092);
			formalParameter407=formalParameter();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, formalParameter407.Tree);
			DebugLocation(567, 104);
			char_literal408=(IToken)Match(input,33,Follow._33_in_catchClause4094); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal408_tree = (object)adaptor.Create(char_literal408);
			adaptor.AddChild(root_0, char_literal408_tree);
			}
			DebugLocation(567, 107);
			if (state.backtracking == 0)
			{
				s(")");
			}
			DebugLocation(567, 118);
			PushFollow(Follow._block_in_catchClause4098);
			block409=block();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, block409.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("catchClause", 92);
			LeaveRule("catchClause", 92);
			LeaveRule_catchClause();
			if (state.backtracking > 0) { Memoize(input, 92, catchClause_StartIndex); }

		}
		DebugLocation(568, 4);
		} finally { DebugExitRule(GrammarFileName, "catchClause"); }
		return retval;

	}
	// $ANTLR end "catchClause"

	partial void EnterRule_formalParameter();
	partial void LeaveRule_formalParameter();
	// $ANTLR start "formalParameter"
	// JavaJava.g3:570:1: formalParameter : variableModifiers type variableDeclaratorId ;
	[GrammarRule("formalParameter")]
	private AstParserRuleReturnScope<object, IToken> formalParameter()
	{
		EnterRule_formalParameter();
		EnterRule("formalParameter", 93);
		TraceIn("formalParameter", 93);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int formalParameter_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> variableModifiers410 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type411 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> variableDeclaratorId412 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "formalParameter");
		DebugLocation(570, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 93)) { return retval; }

			// JavaJava.g3:571:5: ( variableModifiers type variableDeclaratorId )
			DebugEnterAlt(1);
			// JavaJava.g3:571:9: variableModifiers type variableDeclaratorId
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(571, 9);
			PushFollow(Follow._variableModifiers_in_formalParameter4117);
			variableModifiers410=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers410.Tree);
			DebugLocation(571, 27);
			PushFollow(Follow._type_in_formalParameter4119);
			type411=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type411.Tree);
			DebugLocation(571, 32);
			PushFollow(Follow._variableDeclaratorId_in_formalParameter4121);
			variableDeclaratorId412=variableDeclaratorId();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableDeclaratorId412.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("formalParameter", 93);
			LeaveRule("formalParameter", 93);
			LeaveRule_formalParameter();
			if (state.backtracking > 0) { Memoize(input, 93, formalParameter_StartIndex); }

		}
		DebugLocation(572, 4);
		} finally { DebugExitRule(GrammarFileName, "formalParameter"); }
		return retval;

	}
	// $ANTLR end "formalParameter"

	partial void EnterRule_switchBlockStatementGroups();
	partial void LeaveRule_switchBlockStatementGroups();
	// $ANTLR start "switchBlockStatementGroups"
	// JavaJava.g3:574:1: switchBlockStatementGroups : ( switchBlockStatementGroup )* ;
	[GrammarRule("switchBlockStatementGroups")]
	private AstParserRuleReturnScope<object, IToken> switchBlockStatementGroups()
	{
		EnterRule_switchBlockStatementGroups();
		EnterRule("switchBlockStatementGroups", 94);
		TraceIn("switchBlockStatementGroups", 94);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int switchBlockStatementGroups_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> switchBlockStatementGroup413 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "switchBlockStatementGroups");
		DebugLocation(574, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 94)) { return retval; }

			// JavaJava.g3:575:5: ( ( switchBlockStatementGroup )* )
			DebugEnterAlt(1);
			// JavaJava.g3:575:9: ( switchBlockStatementGroup )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(575, 9);
			// JavaJava.g3:575:9: ( switchBlockStatementGroup )*
			try { DebugEnterSubRule(121);
			while (true)
			{
				int alt121=2;
				try { DebugEnterDecision(121, false);
				int LA121_1 = input.LA(1);

				if ((LA121_1==63||LA121_1==68))
				{
					alt121 = 1;
				}


				} finally { DebugExitDecision(121); }
				switch ( alt121 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:575:10: switchBlockStatementGroup
					{
					DebugLocation(575, 10);
					PushFollow(Follow._switchBlockStatementGroup_in_switchBlockStatementGroups4149);
					switchBlockStatementGroup413=switchBlockStatementGroup();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switchBlockStatementGroup413.Tree);

					}
					break;

				default:
					goto loop121;
				}
			}

			loop121:
				;

			} finally { DebugExitSubRule(121); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchBlockStatementGroups", 94);
			LeaveRule("switchBlockStatementGroups", 94);
			LeaveRule_switchBlockStatementGroups();
			if (state.backtracking > 0) { Memoize(input, 94, switchBlockStatementGroups_StartIndex); }

		}
		DebugLocation(576, 4);
		} finally { DebugExitRule(GrammarFileName, "switchBlockStatementGroups"); }
		return retval;

	}
	// $ANTLR end "switchBlockStatementGroups"

	partial void EnterRule_switchBlockStatementGroup();
	partial void LeaveRule_switchBlockStatementGroup();
	// $ANTLR start "switchBlockStatementGroup"
	// JavaJava.g3:582:1: switchBlockStatementGroup : ( switchLabel )+ ( blockStatement )* ;
	[GrammarRule("switchBlockStatementGroup")]
	private AstParserRuleReturnScope<object, IToken> switchBlockStatementGroup()
	{
		EnterRule_switchBlockStatementGroup();
		EnterRule("switchBlockStatementGroup", 95);
		TraceIn("switchBlockStatementGroup", 95);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int switchBlockStatementGroup_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> switchLabel414 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> blockStatement415 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "switchBlockStatementGroup");
		DebugLocation(582, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 95)) { return retval; }

			// JavaJava.g3:583:5: ( ( switchLabel )+ ( blockStatement )* )
			DebugEnterAlt(1);
			// JavaJava.g3:583:9: ( switchLabel )+ ( blockStatement )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(583, 9);
			// JavaJava.g3:583:9: ( switchLabel )+
			int cnt122=0;
			try { DebugEnterSubRule(122);
			while (true)
			{
				int alt122=2;
				try { DebugEnterDecision(122, false);
				int LA122_1 = input.LA(1);

				if ((LA122_1==63))
				{
					int LA122_2 = input.LA(2);

					if ((EvaluatePredicate(synpred178_JavaJava_fragment)))
					{
						alt122 = 1;
					}


				}
				else if ((LA122_1==68))
				{
					int LA122_2 = input.LA(2);

					if ((EvaluatePredicate(synpred178_JavaJava_fragment)))
					{
						alt122 = 1;
					}


				}


				} finally { DebugExitDecision(122); }
				switch (alt122)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:583:9: switchLabel
					{
					DebugLocation(583, 9);
					PushFollow(Follow._switchLabel_in_switchBlockStatementGroup4176);
					switchLabel414=switchLabel();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, switchLabel414.Tree);

					}
					break;

				default:
					if (cnt122 >= 1)
						goto loop122;

					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee122 = new EarlyExitException( 122, input );
					DebugRecognitionException(eee122);
					throw eee122;
				}
				cnt122++;
			}
			loop122:
				;

			} finally { DebugExitSubRule(122); }

			DebugLocation(583, 22);
			// JavaJava.g3:583:22: ( blockStatement )*
			try { DebugEnterSubRule(123);
			while (true)
			{
				int alt123=2;
				try { DebugEnterDecision(123, false);
				int LA123_1 = input.LA(1);

				if ((LA123_1==ASSERT||(LA123_1>=CharacterLiteral && LA123_1<=ENUM)||LA123_1==FloatingPointLiteral||(LA123_1>=HexLiteral && LA123_1<=Identifier)||(LA123_1>=OctalLiteral && LA123_1<=StringLiteral)||LA123_1==25||LA123_1==32||(LA123_1>=36 && LA123_1<=37)||(LA123_1>=40 && LA123_1<=41)||LA123_1==48||LA123_1==54||(LA123_1>=59 && LA123_1<=62)||(LA123_1>=65 && LA123_1<=67)||(LA123_1>=69 && LA123_1<=70)||(LA123_1>=73 && LA123_1<=74)||(LA123_1>=76 && LA123_1<=78)||(LA123_1>=82 && LA123_1<=84)||(LA123_1>=86 && LA123_1<=87)||(LA123_1>=89 && LA123_1<=100)||(LA123_1>=103 && LA123_1<=105)||(LA123_1>=107 && LA123_1<=108)||LA123_1==113))
				{
					alt123 = 1;
				}


				} finally { DebugExitDecision(123); }
				switch ( alt123 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:583:22: blockStatement
					{
					DebugLocation(583, 22);
					PushFollow(Follow._blockStatement_in_switchBlockStatementGroup4179);
					blockStatement415=blockStatement();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, blockStatement415.Tree);

					}
					break;

				default:
					goto loop123;
				}
			}

			loop123:
				;

			} finally { DebugExitSubRule(123); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchBlockStatementGroup", 95);
			LeaveRule("switchBlockStatementGroup", 95);
			LeaveRule_switchBlockStatementGroup();
			if (state.backtracking > 0) { Memoize(input, 95, switchBlockStatementGroup_StartIndex); }

		}
		DebugLocation(584, 4);
		} finally { DebugExitRule(GrammarFileName, "switchBlockStatementGroup"); }
		return retval;

	}
	// $ANTLR end "switchBlockStatementGroup"

	partial void EnterRule_switchLabel();
	partial void LeaveRule_switchLabel();
	// $ANTLR start "switchLabel"
	// JavaJava.g3:586:1: switchLabel : ( 'case' constantExpression ':' | 'case' enumConstantName ':' | 'default' ':' );
	[GrammarRule("switchLabel")]
	private AstParserRuleReturnScope<object, IToken> switchLabel()
	{
		EnterRule_switchLabel();
		EnterRule("switchLabel", 96);
		TraceIn("switchLabel", 96);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int switchLabel_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal416 = default(IToken);
		IToken char_literal418 = default(IToken);
		IToken string_literal419 = default(IToken);
		IToken char_literal421 = default(IToken);
		IToken string_literal422 = default(IToken);
		IToken char_literal423 = default(IToken);
		AstParserRuleReturnScope<object, IToken> constantExpression417 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> enumConstantName420 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal416_tree = default(object);
		object char_literal418_tree = default(object);
		object string_literal419_tree = default(object);
		object char_literal421_tree = default(object);
		object string_literal422_tree = default(object);
		object char_literal423_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "switchLabel");
		DebugLocation(586, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 96)) { return retval; }

			// JavaJava.g3:587:5: ( 'case' constantExpression ':' | 'case' enumConstantName ':' | 'default' ':' )
			int alt124=3;
			try { DebugEnterDecision(124, false);
			int LA124_1 = input.LA(1);

			if ((LA124_1==63))
			{
				int LA124_2 = input.LA(2);

				if (((LA124_2>=CharacterLiteral && LA124_2<=DecimalLiteral)||LA124_2==FloatingPointLiteral||LA124_2==HexLiteral||(LA124_2>=OctalLiteral && LA124_2<=StringLiteral)||LA124_2==25||LA124_2==32||(LA124_2>=36 && LA124_2<=37)||(LA124_2>=40 && LA124_2<=41)||LA124_2==60||LA124_2==62||LA124_2==65||LA124_2==70||LA124_2==73||LA124_2==76||LA124_2==82||LA124_2==84||(LA124_2>=86 && LA124_2<=87)||LA124_2==93||LA124_2==96||LA124_2==99||LA124_2==103||LA124_2==105||LA124_2==113))
				{
					alt124 = 1;
				}
				else if ((LA124_2==Identifier))
				{
					int LA124_3 = input.LA(3);

					if (((LA124_3>=26 && LA124_3<=32)||(LA124_3>=34 && LA124_3<=38)||(LA124_3>=40 && LA124_3<=43)||(LA124_3>=45 && LA124_3<=46)||(LA124_3>=49 && LA124_3<=53)||LA124_3==55||(LA124_3>=57 && LA124_3<=58)||LA124_3==81||(LA124_3>=109 && LA124_3<=111)))
					{
						alt124 = 1;
					}
					else if ((LA124_3==47))
					{
						int LA124_4 = input.LA(4);

						if ((EvaluatePredicate(synpred180_JavaJava_fragment)))
						{
							alt124 = 1;
						}
						else if ((EvaluatePredicate(synpred181_JavaJava_fragment)))
						{
							alt124 = 2;
						}
						else
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 124, 5, input, 4);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 124, 4, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 124, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA124_1==68))
			{
				alt124 = 3;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 124, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(124); }
			switch (alt124)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:587:9: 'case' constantExpression ':'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(587, 9);
				string_literal416=(IToken)Match(input,63,Follow._63_in_switchLabel4203); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal416_tree = (object)adaptor.Create(string_literal416);
				adaptor.AddChild(root_0, string_literal416_tree);
				}
				DebugLocation(587, 15);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("case");mmc++;
				}
				DebugLocation(587, 78);
				PushFollow(Follow._constantExpression_in_switchLabel4206);
				constantExpression417=constantExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, constantExpression417.Tree);
				DebugLocation(587, 97);
				char_literal418=(IToken)Match(input,47,Follow._47_in_switchLabel4208); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal418_tree = (object)adaptor.Create(char_literal418);
				adaptor.AddChild(root_0, char_literal418_tree);
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:588:9: 'case' enumConstantName ':'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(588, 9);
				string_literal419=(IToken)Match(input,63,Follow._63_in_switchLabel4218); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal419_tree = (object)adaptor.Create(string_literal419);
				adaptor.AddChild(root_0, string_literal419_tree);
				}
				DebugLocation(588, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("case");mmc++;
				}
				DebugLocation(588, 79);
				PushFollow(Follow._enumConstantName_in_switchLabel4222);
				enumConstantName420=enumConstantName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enumConstantName420.Tree);
				DebugLocation(588, 96);
				char_literal421=(IToken)Match(input,47,Follow._47_in_switchLabel4224); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal421_tree = (object)adaptor.Create(char_literal421);
				adaptor.AddChild(root_0, char_literal421_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:589:9: 'default' ':'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(589, 9);
				string_literal422=(IToken)Match(input,68,Follow._68_in_switchLabel4234); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal422_tree = (object)adaptor.Create(string_literal422);
				adaptor.AddChild(root_0, string_literal422_tree);
				}
				DebugLocation(589, 19);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("defult");mmc++;
				}
				DebugLocation(589, 84);
				char_literal423=(IToken)Match(input,47,Follow._47_in_switchLabel4238); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal423_tree = (object)adaptor.Create(char_literal423);
				adaptor.AddChild(root_0, char_literal423_tree);
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("switchLabel", 96);
			LeaveRule("switchLabel", 96);
			LeaveRule_switchLabel();
			if (state.backtracking > 0) { Memoize(input, 96, switchLabel_StartIndex); }

		}
		DebugLocation(590, 4);
		} finally { DebugExitRule(GrammarFileName, "switchLabel"); }
		return retval;

	}
	// $ANTLR end "switchLabel"

	partial void EnterRule_forControl();
	partial void LeaveRule_forControl();
	// $ANTLR start "forControl"
	// JavaJava.g3:592:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );
	[GrammarRule("forControl")]
	private AstParserRuleReturnScope<object, IToken> forControl()
	{
		EnterRule_forControl();
		EnterRule("forControl", 97);
		TraceIn("forControl", 97);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int forControl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal426 = default(IToken);
		IToken char_literal428 = default(IToken);
		AstParserRuleReturnScope<object, IToken> enhancedForControl424 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> forInit425 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression427 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> forUpdate429 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal426_tree = default(object);
		object char_literal428_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "forControl");
		DebugLocation(592, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 97)) { return retval; }

			// JavaJava.g3:594:5: ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? )
			int alt128=2;
			try { DebugEnterDecision(128, false);
			try
			{
				alt128 = dfa128.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(128); }
			switch (alt128)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:594:9: enhancedForControl
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(594, 9);
				PushFollow(Follow._enhancedForControl_in_forControl4269);
				enhancedForControl424=enhancedForControl();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, enhancedForControl424.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:595:9: ( forInit )? ';' ( expression )? ';' ( forUpdate )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(595, 9);
				// JavaJava.g3:595:9: ( forInit )?
				int alt125=2;
				try { DebugEnterSubRule(125);
				try { DebugEnterDecision(125, false);
				int LA125_1 = input.LA(1);

				if (((LA125_1>=CharacterLiteral && LA125_1<=DecimalLiteral)||LA125_1==FloatingPointLiteral||(LA125_1>=HexLiteral && LA125_1<=Identifier)||(LA125_1>=OctalLiteral && LA125_1<=StringLiteral)||LA125_1==25||LA125_1==32||(LA125_1>=36 && LA125_1<=37)||(LA125_1>=40 && LA125_1<=41)||LA125_1==54||LA125_1==60||LA125_1==62||LA125_1==65||LA125_1==70||(LA125_1>=73 && LA125_1<=74)||LA125_1==76||LA125_1==82||LA125_1==84||(LA125_1>=86 && LA125_1<=87)||LA125_1==93||LA125_1==96||LA125_1==99||LA125_1==103||LA125_1==105||LA125_1==113))
				{
					alt125 = 1;
				}
				} finally { DebugExitDecision(125); }
				switch (alt125)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:595:9: forInit
					{
					DebugLocation(595, 9);
					PushFollow(Follow._forInit_in_forControl4279);
					forInit425=forInit();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, forInit425.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(125); }

				DebugLocation(595, 18);
				char_literal426=(IToken)Match(input,48,Follow._48_in_forControl4282); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal426_tree = (object)adaptor.Create(char_literal426);
				adaptor.AddChild(root_0, char_literal426_tree);
				}
				DebugLocation(595, 22);
				// JavaJava.g3:595:22: ( expression )?
				int alt126=2;
				try { DebugEnterSubRule(126);
				try { DebugEnterDecision(126, false);
				int LA126_1 = input.LA(1);

				if (((LA126_1>=CharacterLiteral && LA126_1<=DecimalLiteral)||LA126_1==FloatingPointLiteral||(LA126_1>=HexLiteral && LA126_1<=Identifier)||(LA126_1>=OctalLiteral && LA126_1<=StringLiteral)||LA126_1==25||LA126_1==32||(LA126_1>=36 && LA126_1<=37)||(LA126_1>=40 && LA126_1<=41)||LA126_1==60||LA126_1==62||LA126_1==65||LA126_1==70||LA126_1==73||LA126_1==76||LA126_1==82||LA126_1==84||(LA126_1>=86 && LA126_1<=87)||LA126_1==93||LA126_1==96||LA126_1==99||LA126_1==103||LA126_1==105||LA126_1==113))
				{
					alt126 = 1;
				}
				} finally { DebugExitDecision(126); }
				switch (alt126)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:595:22: expression
					{
					DebugLocation(595, 22);
					PushFollow(Follow._expression_in_forControl4284);
					expression427=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression427.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(126); }

				DebugLocation(595, 34);
				char_literal428=(IToken)Match(input,48,Follow._48_in_forControl4287); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal428_tree = (object)adaptor.Create(char_literal428);
				adaptor.AddChild(root_0, char_literal428_tree);
				}
				DebugLocation(595, 38);
				// JavaJava.g3:595:38: ( forUpdate )?
				int alt127=2;
				try { DebugEnterSubRule(127);
				try { DebugEnterDecision(127, false);
				int LA127_1 = input.LA(1);

				if (((LA127_1>=CharacterLiteral && LA127_1<=DecimalLiteral)||LA127_1==FloatingPointLiteral||(LA127_1>=HexLiteral && LA127_1<=Identifier)||(LA127_1>=OctalLiteral && LA127_1<=StringLiteral)||LA127_1==25||LA127_1==32||(LA127_1>=36 && LA127_1<=37)||(LA127_1>=40 && LA127_1<=41)||LA127_1==60||LA127_1==62||LA127_1==65||LA127_1==70||LA127_1==73||LA127_1==76||LA127_1==82||LA127_1==84||(LA127_1>=86 && LA127_1<=87)||LA127_1==93||LA127_1==96||LA127_1==99||LA127_1==103||LA127_1==105||LA127_1==113))
				{
					alt127 = 1;
				}
				} finally { DebugExitDecision(127); }
				switch (alt127)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:595:38: forUpdate
					{
					DebugLocation(595, 38);
					PushFollow(Follow._forUpdate_in_forControl4289);
					forUpdate429=forUpdate();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, forUpdate429.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(127); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("forControl", 97);
			LeaveRule("forControl", 97);
			LeaveRule_forControl();
			if (state.backtracking > 0) { Memoize(input, 97, forControl_StartIndex); }

		}
		DebugLocation(596, 4);
		} finally { DebugExitRule(GrammarFileName, "forControl"); }
		return retval;

	}
	// $ANTLR end "forControl"

	partial void EnterRule_forInit();
	partial void LeaveRule_forInit();
	// $ANTLR start "forInit"
	// JavaJava.g3:598:1: forInit : ( localVariableDeclaration | expressionList );
	[GrammarRule("forInit")]
	private AstParserRuleReturnScope<object, IToken> forInit()
	{
		EnterRule_forInit();
		EnterRule("forInit", 98);
		TraceIn("forInit", 98);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int forInit_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> localVariableDeclaration430 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expressionList431 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "forInit");
		DebugLocation(598, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 98)) { return retval; }

			// JavaJava.g3:599:5: ( localVariableDeclaration | expressionList )
			int alt129=2;
			try { DebugEnterDecision(129, false);
			switch (input.LA(1))
			{
			case 54:
			case 74:
				{
				alt129 = 1;
				}
				break;
			case Identifier:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 60:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 4, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 65:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 5, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 62:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 6, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 93:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 7, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 82:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 8, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 84:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 9, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 76:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 10, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 70:
				{
				int LA129_2 = input.LA(2);

				if ((EvaluatePredicate(synpred186_JavaJava_fragment)))
				{
					alt129 = 1;
				}
				else if ((true))
				{
					alt129 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case OctalLiteral:
			case StringLiteral:
			case 25:
			case 32:
			case 36:
			case 37:
			case 40:
			case 41:
			case 73:
			case 86:
			case 87:
			case 96:
			case 99:
			case 103:
			case 105:
			case 113:
				{
				alt129 = 2;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 129, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(129); }
			switch (alt129)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:599:9: localVariableDeclaration
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(599, 9);
				PushFollow(Follow._localVariableDeclaration_in_forInit4309);
				localVariableDeclaration430=localVariableDeclaration();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, localVariableDeclaration430.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:600:9: expressionList
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(600, 9);
				PushFollow(Follow._expressionList_in_forInit4320);
				expressionList431=expressionList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList431.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("forInit", 98);
			LeaveRule("forInit", 98);
			LeaveRule_forInit();
			if (state.backtracking > 0) { Memoize(input, 98, forInit_StartIndex); }

		}
		DebugLocation(601, 4);
		} finally { DebugExitRule(GrammarFileName, "forInit"); }
		return retval;

	}
	// $ANTLR end "forInit"

	partial void EnterRule_enhancedForControl();
	partial void LeaveRule_enhancedForControl();
	// $ANTLR start "enhancedForControl"
	// JavaJava.g3:603:1: enhancedForControl : variableModifiers type Identifier ':' expression ;
	[GrammarRule("enhancedForControl")]
	private AstParserRuleReturnScope<object, IToken> enhancedForControl()
	{
		EnterRule_enhancedForControl();
		EnterRule("enhancedForControl", 99);
		TraceIn("enhancedForControl", 99);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int enhancedForControl_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier434 = default(IToken);
		IToken char_literal435 = default(IToken);
		AstParserRuleReturnScope<object, IToken> variableModifiers432 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type433 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression436 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier434_tree = default(object);
		object char_literal435_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "enhancedForControl");
		DebugLocation(603, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 99)) { return retval; }

			// JavaJava.g3:604:5: ( variableModifiers type Identifier ':' expression )
			DebugEnterAlt(1);
			// JavaJava.g3:604:9: variableModifiers type Identifier ':' expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(604, 9);
			PushFollow(Follow._variableModifiers_in_enhancedForControl4343);
			variableModifiers432=variableModifiers();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, variableModifiers432.Tree);
			DebugLocation(604, 27);
			PushFollow(Follow._type_in_enhancedForControl4345);
			type433=type();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, type433.Tree);
			DebugLocation(604, 32);
			Identifier434=(IToken)Match(input,Identifier,Follow._Identifier_in_enhancedForControl4347); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier434_tree = (object)adaptor.Create(Identifier434);
			adaptor.AddChild(root_0, Identifier434_tree);
			}
			DebugLocation(604, 43);
			if (state.backtracking == 0)
			{
				 id((Identifier434!=null?Identifier434.Text:default(string)));
			}
			DebugLocation(604, 68);
			char_literal435=(IToken)Match(input,47,Follow._47_in_enhancedForControl4351); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal435_tree = (object)adaptor.Create(char_literal435);
			adaptor.AddChild(root_0, char_literal435_tree);
			}
			DebugLocation(604, 72);
			PushFollow(Follow._expression_in_enhancedForControl4353);
			expression436=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression436.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("enhancedForControl", 99);
			LeaveRule("enhancedForControl", 99);
			LeaveRule_enhancedForControl();
			if (state.backtracking > 0) { Memoize(input, 99, enhancedForControl_StartIndex); }

		}
		DebugLocation(605, 4);
		} finally { DebugExitRule(GrammarFileName, "enhancedForControl"); }
		return retval;

	}
	// $ANTLR end "enhancedForControl"

	partial void EnterRule_forUpdate();
	partial void LeaveRule_forUpdate();
	// $ANTLR start "forUpdate"
	// JavaJava.g3:607:1: forUpdate : expressionList ;
	[GrammarRule("forUpdate")]
	private AstParserRuleReturnScope<object, IToken> forUpdate()
	{
		EnterRule_forUpdate();
		EnterRule("forUpdate", 100);
		TraceIn("forUpdate", 100);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int forUpdate_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> expressionList437 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "forUpdate");
		DebugLocation(607, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 100)) { return retval; }

			// JavaJava.g3:608:5: ( expressionList )
			DebugEnterAlt(1);
			// JavaJava.g3:608:9: expressionList
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(608, 9);
			PushFollow(Follow._expressionList_in_forUpdate4372);
			expressionList437=expressionList();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList437.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("forUpdate", 100);
			LeaveRule("forUpdate", 100);
			LeaveRule_forUpdate();
			if (state.backtracking > 0) { Memoize(input, 100, forUpdate_StartIndex); }

		}
		DebugLocation(609, 4);
		} finally { DebugExitRule(GrammarFileName, "forUpdate"); }
		return retval;

	}
	// $ANTLR end "forUpdate"

	partial void EnterRule_parExpression();
	partial void LeaveRule_parExpression();
	// $ANTLR start "parExpression"
	// JavaJava.g3:613:1: parExpression : '(' expression ')' ;
	[GrammarRule("parExpression")]
	private AstParserRuleReturnScope<object, IToken> parExpression()
	{
		EnterRule_parExpression();
		EnterRule("parExpression", 101);
		TraceIn("parExpression", 101);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int parExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal438 = default(IToken);
		IToken char_literal440 = default(IToken);
		AstParserRuleReturnScope<object, IToken> expression439 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal438_tree = default(object);
		object char_literal440_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "parExpression");
		DebugLocation(613, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 101)) { return retval; }

			// JavaJava.g3:614:5: ( '(' expression ')' )
			DebugEnterAlt(1);
			// JavaJava.g3:614:9: '(' expression ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(614, 9);
			char_literal438=(IToken)Match(input,32,Follow._32_in_parExpression4393); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal438_tree = (object)adaptor.Create(char_literal438);
			adaptor.AddChild(root_0, char_literal438_tree);
			}
			DebugLocation(614, 12);
			if (state.backtracking == 0)
			{
				s("(");
			}
			DebugLocation(614, 22);
			PushFollow(Follow._expression_in_parExpression4396);
			expression439=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression439.Tree);
			DebugLocation(614, 33);
			char_literal440=(IToken)Match(input,33,Follow._33_in_parExpression4398); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal440_tree = (object)adaptor.Create(char_literal440);
			adaptor.AddChild(root_0, char_literal440_tree);
			}
			DebugLocation(614, 36);
			if (state.backtracking == 0)
			{
				s(")");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("parExpression", 101);
			LeaveRule("parExpression", 101);
			LeaveRule_parExpression();
			if (state.backtracking > 0) { Memoize(input, 101, parExpression_StartIndex); }

		}
		DebugLocation(615, 4);
		} finally { DebugExitRule(GrammarFileName, "parExpression"); }
		return retval;

	}
	// $ANTLR end "parExpression"

	partial void EnterRule_expressionList();
	partial void LeaveRule_expressionList();
	// $ANTLR start "expressionList"
	// JavaJava.g3:617:1: expressionList : expression ( ',' expression )* ;
	[GrammarRule("expressionList")]
	private AstParserRuleReturnScope<object, IToken> expressionList()
	{
		EnterRule_expressionList();
		EnterRule("expressionList", 102);
		TraceIn("expressionList", 102);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int expressionList_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal442 = default(IToken);
		AstParserRuleReturnScope<object, IToken> expression441 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression443 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal442_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "expressionList");
		DebugLocation(617, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 102)) { return retval; }

			// JavaJava.g3:618:5: ( expression ( ',' expression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:618:9: expression ( ',' expression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(618, 9);
			PushFollow(Follow._expression_in_expressionList4423);
			expression441=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression441.Tree);
			DebugLocation(618, 20);
			// JavaJava.g3:618:20: ( ',' expression )*
			try { DebugEnterSubRule(130);
			while (true)
			{
				int alt130=2;
				try { DebugEnterDecision(130, false);
				int LA130_1 = input.LA(1);

				if ((LA130_1==39))
				{
					alt130 = 1;
				}


				} finally { DebugExitDecision(130); }
				switch ( alt130 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:618:21: ',' expression
					{
					DebugLocation(618, 21);
					char_literal442=(IToken)Match(input,39,Follow._39_in_expressionList4426); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal442_tree = (object)adaptor.Create(char_literal442);
					adaptor.AddChild(root_0, char_literal442_tree);
					}
					DebugLocation(618, 24);
					if (state.backtracking == 0)
					{
						s(",");
					}
					DebugLocation(618, 34);
					PushFollow(Follow._expression_in_expressionList4429);
					expression443=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression443.Tree);

					}
					break;

				default:
					goto loop130;
				}
			}

			loop130:
				;

			} finally { DebugExitSubRule(130); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expressionList", 102);
			LeaveRule("expressionList", 102);
			LeaveRule_expressionList();
			if (state.backtracking > 0) { Memoize(input, 102, expressionList_StartIndex); }

		}
		DebugLocation(619, 4);
		} finally { DebugExitRule(GrammarFileName, "expressionList"); }
		return retval;

	}
	// $ANTLR end "expressionList"

	partial void EnterRule_statementExpression();
	partial void LeaveRule_statementExpression();
	// $ANTLR start "statementExpression"
	// JavaJava.g3:621:1: statementExpression : expression ;
	[GrammarRule("statementExpression")]
	private AstParserRuleReturnScope<object, IToken> statementExpression()
	{
		EnterRule_statementExpression();
		EnterRule("statementExpression", 103);
		TraceIn("statementExpression", 103);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int statementExpression_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> expression444 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "statementExpression");
		DebugLocation(621, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 103)) { return retval; }

			// JavaJava.g3:622:5: ( expression )
			DebugEnterAlt(1);
			// JavaJava.g3:622:9: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(622, 9);
			PushFollow(Follow._expression_in_statementExpression4450);
			expression444=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression444.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("statementExpression", 103);
			LeaveRule("statementExpression", 103);
			LeaveRule_statementExpression();
			if (state.backtracking > 0) { Memoize(input, 103, statementExpression_StartIndex); }

		}
		DebugLocation(623, 4);
		} finally { DebugExitRule(GrammarFileName, "statementExpression"); }
		return retval;

	}
	// $ANTLR end "statementExpression"

	partial void EnterRule_constantExpression();
	partial void LeaveRule_constantExpression();
	// $ANTLR start "constantExpression"
	// JavaJava.g3:625:1: constantExpression : expression ;
	[GrammarRule("constantExpression")]
	private AstParserRuleReturnScope<object, IToken> constantExpression()
	{
		EnterRule_constantExpression();
		EnterRule("constantExpression", 104);
		TraceIn("constantExpression", 104);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int constantExpression_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> expression445 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "constantExpression");
		DebugLocation(625, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 104)) { return retval; }

			// JavaJava.g3:626:5: ( expression )
			DebugEnterAlt(1);
			// JavaJava.g3:626:9: expression
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(626, 9);
			PushFollow(Follow._expression_in_constantExpression4474);
			expression445=expression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, expression445.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("constantExpression", 104);
			LeaveRule("constantExpression", 104);
			LeaveRule_constantExpression();
			if (state.backtracking > 0) { Memoize(input, 104, constantExpression_StartIndex); }

		}
		DebugLocation(627, 4);
		} finally { DebugExitRule(GrammarFileName, "constantExpression"); }
		return retval;

	}
	// $ANTLR end "constantExpression"

	partial void EnterRule_expression();
	partial void LeaveRule_expression();
	// $ANTLR start "expression"
	// JavaJava.g3:629:1: expression : conditionalExpression ( assignmentOperator expression )? ;
	[GrammarRule("expression")]
	private AstParserRuleReturnScope<object, IToken> expression()
	{
		EnterRule_expression();
		EnterRule("expression", 105);
		TraceIn("expression", 105);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int expression_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> conditionalExpression446 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> assignmentOperator447 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression448 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "expression");
		DebugLocation(629, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 105)) { return retval; }

			// JavaJava.g3:630:5: ( conditionalExpression ( assignmentOperator expression )? )
			DebugEnterAlt(1);
			// JavaJava.g3:630:9: conditionalExpression ( assignmentOperator expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(630, 9);
			PushFollow(Follow._conditionalExpression_in_expression4497);
			conditionalExpression446=conditionalExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalExpression446.Tree);
			DebugLocation(630, 31);
			// JavaJava.g3:630:31: ( assignmentOperator expression )?
			int alt131=2;
			try { DebugEnterSubRule(131);
			try { DebugEnterDecision(131, false);
			switch (input.LA(1))
			{
			case 50:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 38:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 42:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 35:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 46:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 31:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 110:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 58:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 28:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 49:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			case 52:
				{
				int LA131_2 = input.LA(2);

				if ((EvaluatePredicate(synpred188_JavaJava_fragment)))
				{
					alt131 = 1;
				}
				}
				break;
			}

			} finally { DebugExitDecision(131); }
			switch (alt131)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:630:32: assignmentOperator expression
				{
				DebugLocation(630, 32);
				PushFollow(Follow._assignmentOperator_in_expression4500);
				assignmentOperator447=assignmentOperator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, assignmentOperator447.Tree);
				DebugLocation(630, 51);
				PushFollow(Follow._expression_in_expression4502);
				expression448=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression448.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(131); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("expression", 105);
			LeaveRule("expression", 105);
			LeaveRule_expression();
			if (state.backtracking > 0) { Memoize(input, 105, expression_StartIndex); }

		}
		DebugLocation(631, 4);
		} finally { DebugExitRule(GrammarFileName, "expression"); }
		return retval;

	}
	// $ANTLR end "expression"

	partial void EnterRule_assignmentOperator();
	partial void LeaveRule_assignmentOperator();
	// $ANTLR start "assignmentOperator"
	// JavaJava.g3:633:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}?| ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}?| ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?);
	[GrammarRule("assignmentOperator")]
	private AstParserRuleReturnScope<object, IToken> assignmentOperator()
	{
		EnterRule_assignmentOperator();
		EnterRule("assignmentOperator", 106);
		TraceIn("assignmentOperator", 106);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int assignmentOperator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken t1 = default(IToken);
		IToken t2 = default(IToken);
		IToken t3 = default(IToken);
		IToken t4 = default(IToken);
		IToken char_literal449 = default(IToken);
		IToken string_literal450 = default(IToken);
		IToken string_literal451 = default(IToken);
		IToken string_literal452 = default(IToken);
		IToken string_literal453 = default(IToken);
		IToken string_literal454 = default(IToken);
		IToken string_literal455 = default(IToken);
		IToken string_literal456 = default(IToken);
		IToken string_literal457 = default(IToken);

		object t1_tree = default(object);
		object t2_tree = default(object);
		object t3_tree = default(object);
		object t4_tree = default(object);
		object char_literal449_tree = default(object);
		object string_literal450_tree = default(object);
		object string_literal451_tree = default(object);
		object string_literal452_tree = default(object);
		object string_literal453_tree = default(object);
		object string_literal454_tree = default(object);
		object string_literal455_tree = default(object);
		object string_literal456_tree = default(object);
		object string_literal457_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "assignmentOperator");
		DebugLocation(633, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 106)) { return retval; }

			// JavaJava.g3:634:5: ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}?| ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}?| ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?)
			int alt132=12;
			try { DebugEnterDecision(132, false);
			int LA132_1 = input.LA(1);

			if ((LA132_1==50))
			{
				alt132 = 1;
			}
			else if ((LA132_1==38))
			{
				alt132 = 2;
			}
			else if ((LA132_1==42))
			{
				alt132 = 3;
			}
			else if ((LA132_1==35))
			{
				alt132 = 4;
			}
			else if ((LA132_1==46))
			{
				alt132 = 5;
			}
			else if ((LA132_1==31))
			{
				alt132 = 6;
			}
			else if ((LA132_1==110))
			{
				alt132 = 7;
			}
			else if ((LA132_1==58))
			{
				alt132 = 8;
			}
			else if ((LA132_1==28))
			{
				alt132 = 9;
			}
			else if ((LA132_1==49) && (EvaluatePredicate(synpred198_JavaJava_fragment)))
			{
				alt132 = 10;
			}
			else if ((LA132_1==52))
			{
				int LA132_2 = input.LA(2);

				if ((LA132_2==52))
				{
					int LA132_3 = input.LA(3);

					if ((LA132_3==52) && (EvaluatePredicate(synpred199_JavaJava_fragment)))
					{
						alt132 = 11;
					}
					else if ((LA132_3==50) && (EvaluatePredicate(synpred200_JavaJava_fragment)))
					{
						alt132 = 12;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 132, 12, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 132, 11, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 132, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(132); }
			switch (alt132)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:634:9: '='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(634, 9);
				char_literal449=(IToken)Match(input,50,Follow._50_in_assignmentOperator4527); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal449_tree = (object)adaptor.Create(char_literal449);
				adaptor.AddChild(root_0, char_literal449_tree);
				}
				DebugLocation(634, 13);
				if (state.backtracking == 0)
				{
					s("=");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:635:9: '+='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(635, 9);
				string_literal450=(IToken)Match(input,38,Follow._38_in_assignmentOperator4539); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal450_tree = (object)adaptor.Create(string_literal450);
				adaptor.AddChild(root_0, string_literal450_tree);
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:636:9: '-='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(636, 9);
				string_literal451=(IToken)Match(input,42,Follow._42_in_assignmentOperator4549); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal451_tree = (object)adaptor.Create(string_literal451);
				adaptor.AddChild(root_0, string_literal451_tree);
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:637:9: '*='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(637, 9);
				string_literal452=(IToken)Match(input,35,Follow._35_in_assignmentOperator4559); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal452_tree = (object)adaptor.Create(string_literal452);
				adaptor.AddChild(root_0, string_literal452_tree);
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:638:9: '/='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(638, 9);
				string_literal453=(IToken)Match(input,46,Follow._46_in_assignmentOperator4569); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal453_tree = (object)adaptor.Create(string_literal453);
				adaptor.AddChild(root_0, string_literal453_tree);
				}

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:639:9: '&='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(639, 9);
				string_literal454=(IToken)Match(input,31,Follow._31_in_assignmentOperator4579); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal454_tree = (object)adaptor.Create(string_literal454);
				adaptor.AddChild(root_0, string_literal454_tree);
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// JavaJava.g3:640:9: '|='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(640, 9);
				string_literal455=(IToken)Match(input,110,Follow._110_in_assignmentOperator4589); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal455_tree = (object)adaptor.Create(string_literal455);
				adaptor.AddChild(root_0, string_literal455_tree);
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// JavaJava.g3:641:9: '^='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(641, 9);
				string_literal456=(IToken)Match(input,58,Follow._58_in_assignmentOperator4599); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal456_tree = (object)adaptor.Create(string_literal456);
				adaptor.AddChild(root_0, string_literal456_tree);
				}

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// JavaJava.g3:642:9: '%='
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(642, 9);
				string_literal457=(IToken)Match(input,28,Follow._28_in_assignmentOperator4609); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal457_tree = (object)adaptor.Create(string_literal457);
				adaptor.AddChild(root_0, string_literal457_tree);
				}

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// JavaJava.g3:643:9: ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(643, 27);
				t1=(IToken)Match(input,49,Follow._49_in_assignmentOperator4630); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(643, 34);
				t2=(IToken)Match(input,49,Follow._49_in_assignmentOperator4634); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(643, 41);
				t3=(IToken)Match(input,50,Follow._50_in_assignmentOperator4638); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t3_tree = (object)adaptor.Create(t3);
				adaptor.AddChild(root_0, t3_tree);
				}
				DebugLocation(644, 9);
				if (!((true /*t1.Line == t2.Line &&
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine && 
				          t2.Line == t3.Line && 
				          t2.CharPositionInLine + 1 == t3.CharPositionInLine */)))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "assignmentOperator", "true /*$t1.Line == $t2.Line &&\r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine && \r\n          $t2.Line == $t3.Line && \r\n          $t2.CharPositionInLine + 1 == $t3.CharPositionInLine */");
				}

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// JavaJava.g3:648:9: ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(648, 31);
				t1=(IToken)Match(input,52,Follow._52_in_assignmentOperator4672); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(648, 38);
				t2=(IToken)Match(input,52,Follow._52_in_assignmentOperator4676); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(648, 45);
				t3=(IToken)Match(input,52,Follow._52_in_assignmentOperator4680); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t3_tree = (object)adaptor.Create(t3);
				adaptor.AddChild(root_0, t3_tree);
				}
				DebugLocation(648, 52);
				t4=(IToken)Match(input,50,Follow._50_in_assignmentOperator4684); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t4_tree = (object)adaptor.Create(t4);
				adaptor.AddChild(root_0, t4_tree);
				}
				DebugLocation(649, 9);
				if (!(( true/*t1.Line == t2.Line && 
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine &&
				          t2.Line == t3.Line && 
				          t2.CharPositionInLine + 1 == t3.CharPositionInLine &&
				          t3.Line == t4.Line && 
				          t3.CharPositionInLine + 1 == t4.CharPositionInLine */)))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "assignmentOperator", " true/*$t1.Line == $t2.Line && \r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine &&\r\n          $t2.Line == $t3.Line && \r\n          $t2.CharPositionInLine + 1 == $t3.CharPositionInLine &&\r\n          $t3.Line == $t4.Line && \r\n          $t3.CharPositionInLine + 1 == $t4.CharPositionInLine */");
				}

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// JavaJava.g3:655:9: ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(655, 27);
				t1=(IToken)Match(input,52,Follow._52_in_assignmentOperator4715); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(655, 34);
				t2=(IToken)Match(input,52,Follow._52_in_assignmentOperator4719); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(655, 41);
				t3=(IToken)Match(input,50,Follow._50_in_assignmentOperator4723); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t3_tree = (object)adaptor.Create(t3);
				adaptor.AddChild(root_0, t3_tree);
				}
				DebugLocation(656, 9);
				if (!((true /*t1.Line == t2.Line && 
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine && 
				          t2.Line == t3.Line && 
				          t2.CharPositionInLine + 1 == t3.CharPositionInLine*/ )))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "assignmentOperator", "true /*$t1.Line == $t2.Line && \r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine && \r\n          $t2.Line == $t3.Line && \r\n          $t2.CharPositionInLine + 1 == $t3.CharPositionInLine*/ ");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("assignmentOperator", 106);
			LeaveRule("assignmentOperator", 106);
			LeaveRule_assignmentOperator();
			if (state.backtracking > 0) { Memoize(input, 106, assignmentOperator_StartIndex); }

		}
		DebugLocation(660, 4);
		} finally { DebugExitRule(GrammarFileName, "assignmentOperator"); }
		return retval;

	}
	// $ANTLR end "assignmentOperator"

	partial void EnterRule_conditionalExpression();
	partial void LeaveRule_conditionalExpression();
	// $ANTLR start "conditionalExpression"
	// JavaJava.g3:662:1: conditionalExpression : conditionalOrExpression ( '?' expression ':' expression )? ;
	[GrammarRule("conditionalExpression")]
	private AstParserRuleReturnScope<object, IToken> conditionalExpression()
	{
		EnterRule_conditionalExpression();
		EnterRule("conditionalExpression", 107);
		TraceIn("conditionalExpression", 107);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int conditionalExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal459 = default(IToken);
		IToken char_literal461 = default(IToken);
		AstParserRuleReturnScope<object, IToken> conditionalOrExpression458 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression460 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression462 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal459_tree = default(object);
		object char_literal461_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalExpression");
		DebugLocation(662, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 107)) { return retval; }

			// JavaJava.g3:663:5: ( conditionalOrExpression ( '?' expression ':' expression )? )
			DebugEnterAlt(1);
			// JavaJava.g3:663:9: conditionalOrExpression ( '?' expression ':' expression )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(663, 9);
			PushFollow(Follow._conditionalOrExpression_in_conditionalExpression4752);
			conditionalOrExpression458=conditionalOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalOrExpression458.Tree);
			DebugLocation(663, 33);
			// JavaJava.g3:663:33: ( '?' expression ':' expression )?
			int alt133=2;
			try { DebugEnterSubRule(133);
			try { DebugEnterDecision(133, false);
			int LA133_1 = input.LA(1);

			if ((LA133_1==53))
			{
				alt133 = 1;
			}
			} finally { DebugExitDecision(133); }
			switch (alt133)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:663:35: '?' expression ':' expression
				{
				DebugLocation(663, 35);
				char_literal459=(IToken)Match(input,53,Follow._53_in_conditionalExpression4756); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal459_tree = (object)adaptor.Create(char_literal459);
				adaptor.AddChild(root_0, char_literal459_tree);
				}
				DebugLocation(663, 39);
				PushFollow(Follow._expression_in_conditionalExpression4758);
				expression460=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression460.Tree);
				DebugLocation(663, 50);
				char_literal461=(IToken)Match(input,47,Follow._47_in_conditionalExpression4760); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal461_tree = (object)adaptor.Create(char_literal461);
				adaptor.AddChild(root_0, char_literal461_tree);
				}
				DebugLocation(663, 54);
				PushFollow(Follow._expression_in_conditionalExpression4762);
				expression462=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression462.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(133); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalExpression", 107);
			LeaveRule("conditionalExpression", 107);
			LeaveRule_conditionalExpression();
			if (state.backtracking > 0) { Memoize(input, 107, conditionalExpression_StartIndex); }

		}
		DebugLocation(664, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalExpression"

	partial void EnterRule_conditionalOrExpression();
	partial void LeaveRule_conditionalOrExpression();
	// $ANTLR start "conditionalOrExpression"
	// JavaJava.g3:666:1: conditionalOrExpression : conditionalAndExpression ( '||' conditionalAndExpression )* ;
	[GrammarRule("conditionalOrExpression")]
	private AstParserRuleReturnScope<object, IToken> conditionalOrExpression()
	{
		EnterRule_conditionalOrExpression();
		EnterRule("conditionalOrExpression", 108);
		TraceIn("conditionalOrExpression", 108);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int conditionalOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal464 = default(IToken);
		AstParserRuleReturnScope<object, IToken> conditionalAndExpression463 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> conditionalAndExpression465 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal464_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalOrExpression");
		DebugLocation(666, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 108)) { return retval; }

			// JavaJava.g3:667:5: ( conditionalAndExpression ( '||' conditionalAndExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:667:9: conditionalAndExpression ( '||' conditionalAndExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(667, 9);
			PushFollow(Follow._conditionalAndExpression_in_conditionalOrExpression4784);
			conditionalAndExpression463=conditionalAndExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalAndExpression463.Tree);
			DebugLocation(667, 34);
			// JavaJava.g3:667:34: ( '||' conditionalAndExpression )*
			try { DebugEnterSubRule(134);
			while (true)
			{
				int alt134=2;
				try { DebugEnterDecision(134, false);
				int LA134_1 = input.LA(1);

				if ((LA134_1==111))
				{
					alt134 = 1;
				}


				} finally { DebugExitDecision(134); }
				switch ( alt134 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:667:36: '||' conditionalAndExpression
					{
					DebugLocation(667, 36);
					string_literal464=(IToken)Match(input,111,Follow._111_in_conditionalOrExpression4788); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal464_tree = (object)adaptor.Create(string_literal464);
					adaptor.AddChild(root_0, string_literal464_tree);
					}
					DebugLocation(667, 41);
					if (state.backtracking == 0)
					{
						s("||"); mmc++;
					}
					DebugLocation(667, 59);
					PushFollow(Follow._conditionalAndExpression_in_conditionalOrExpression4792);
					conditionalAndExpression465=conditionalAndExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, conditionalAndExpression465.Tree);

					}
					break;

				default:
					goto loop134;
				}
			}

			loop134:
				;

			} finally { DebugExitSubRule(134); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalOrExpression", 108);
			LeaveRule("conditionalOrExpression", 108);
			LeaveRule_conditionalOrExpression();
			if (state.backtracking > 0) { Memoize(input, 108, conditionalOrExpression_StartIndex); }

		}
		DebugLocation(668, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalOrExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalOrExpression"

	partial void EnterRule_conditionalAndExpression();
	partial void LeaveRule_conditionalAndExpression();
	// $ANTLR start "conditionalAndExpression"
	// JavaJava.g3:670:1: conditionalAndExpression : inclusiveOrExpression ( '&&' inclusiveOrExpression )* ;
	[GrammarRule("conditionalAndExpression")]
	private AstParserRuleReturnScope<object, IToken> conditionalAndExpression()
	{
		EnterRule_conditionalAndExpression();
		EnterRule("conditionalAndExpression", 109);
		TraceIn("conditionalAndExpression", 109);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int conditionalAndExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal467 = default(IToken);
		AstParserRuleReturnScope<object, IToken> inclusiveOrExpression466 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> inclusiveOrExpression468 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal467_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "conditionalAndExpression");
		DebugLocation(670, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 109)) { return retval; }

			// JavaJava.g3:671:5: ( inclusiveOrExpression ( '&&' inclusiveOrExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:671:9: inclusiveOrExpression ( '&&' inclusiveOrExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(671, 9);
			PushFollow(Follow._inclusiveOrExpression_in_conditionalAndExpression4814);
			inclusiveOrExpression466=inclusiveOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, inclusiveOrExpression466.Tree);
			DebugLocation(671, 31);
			// JavaJava.g3:671:31: ( '&&' inclusiveOrExpression )*
			try { DebugEnterSubRule(135);
			while (true)
			{
				int alt135=2;
				try { DebugEnterDecision(135, false);
				int LA135_1 = input.LA(1);

				if ((LA135_1==29))
				{
					alt135 = 1;
				}


				} finally { DebugExitDecision(135); }
				switch ( alt135 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:671:33: '&&' inclusiveOrExpression
					{
					DebugLocation(671, 33);
					string_literal467=(IToken)Match(input,29,Follow._29_in_conditionalAndExpression4818); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal467_tree = (object)adaptor.Create(string_literal467);
					adaptor.AddChild(root_0, string_literal467_tree);
					}
					DebugLocation(671, 38);
					if (state.backtracking == 0)
					{
						s("&&"); mmc++;
					}
					DebugLocation(671, 56);
					PushFollow(Follow._inclusiveOrExpression_in_conditionalAndExpression4822);
					inclusiveOrExpression468=inclusiveOrExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, inclusiveOrExpression468.Tree);

					}
					break;

				default:
					goto loop135;
				}
			}

			loop135:
				;

			} finally { DebugExitSubRule(135); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("conditionalAndExpression", 109);
			LeaveRule("conditionalAndExpression", 109);
			LeaveRule_conditionalAndExpression();
			if (state.backtracking > 0) { Memoize(input, 109, conditionalAndExpression_StartIndex); }

		}
		DebugLocation(672, 4);
		} finally { DebugExitRule(GrammarFileName, "conditionalAndExpression"); }
		return retval;

	}
	// $ANTLR end "conditionalAndExpression"

	partial void EnterRule_inclusiveOrExpression();
	partial void LeaveRule_inclusiveOrExpression();
	// $ANTLR start "inclusiveOrExpression"
	// JavaJava.g3:674:1: inclusiveOrExpression : exclusiveOrExpression ( '|' exclusiveOrExpression )* ;
	[GrammarRule("inclusiveOrExpression")]
	private AstParserRuleReturnScope<object, IToken> inclusiveOrExpression()
	{
		EnterRule_inclusiveOrExpression();
		EnterRule("inclusiveOrExpression", 110);
		TraceIn("inclusiveOrExpression", 110);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int inclusiveOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal470 = default(IToken);
		AstParserRuleReturnScope<object, IToken> exclusiveOrExpression469 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> exclusiveOrExpression471 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal470_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "inclusiveOrExpression");
		DebugLocation(674, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 110)) { return retval; }

			// JavaJava.g3:675:5: ( exclusiveOrExpression ( '|' exclusiveOrExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:675:9: exclusiveOrExpression ( '|' exclusiveOrExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(675, 9);
			PushFollow(Follow._exclusiveOrExpression_in_inclusiveOrExpression4844);
			exclusiveOrExpression469=exclusiveOrExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, exclusiveOrExpression469.Tree);
			DebugLocation(675, 31);
			// JavaJava.g3:675:31: ( '|' exclusiveOrExpression )*
			try { DebugEnterSubRule(136);
			while (true)
			{
				int alt136=2;
				try { DebugEnterDecision(136, false);
				int LA136_1 = input.LA(1);

				if ((LA136_1==109))
				{
					alt136 = 1;
				}


				} finally { DebugExitDecision(136); }
				switch ( alt136 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:675:33: '|' exclusiveOrExpression
					{
					DebugLocation(675, 33);
					char_literal470=(IToken)Match(input,109,Follow._109_in_inclusiveOrExpression4848); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal470_tree = (object)adaptor.Create(char_literal470);
					adaptor.AddChild(root_0, char_literal470_tree);
					}
					DebugLocation(675, 37);
					if (state.backtracking == 0)
					{
						s("|"); 
					}
					DebugLocation(675, 48);
					PushFollow(Follow._exclusiveOrExpression_in_inclusiveOrExpression4852);
					exclusiveOrExpression471=exclusiveOrExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, exclusiveOrExpression471.Tree);

					}
					break;

				default:
					goto loop136;
				}
			}

			loop136:
				;

			} finally { DebugExitSubRule(136); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("inclusiveOrExpression", 110);
			LeaveRule("inclusiveOrExpression", 110);
			LeaveRule_inclusiveOrExpression();
			if (state.backtracking > 0) { Memoize(input, 110, inclusiveOrExpression_StartIndex); }

		}
		DebugLocation(676, 4);
		} finally { DebugExitRule(GrammarFileName, "inclusiveOrExpression"); }
		return retval;

	}
	// $ANTLR end "inclusiveOrExpression"

	partial void EnterRule_exclusiveOrExpression();
	partial void LeaveRule_exclusiveOrExpression();
	// $ANTLR start "exclusiveOrExpression"
	// JavaJava.g3:678:1: exclusiveOrExpression : andExpression ( '^' andExpression )* ;
	[GrammarRule("exclusiveOrExpression")]
	private AstParserRuleReturnScope<object, IToken> exclusiveOrExpression()
	{
		EnterRule_exclusiveOrExpression();
		EnterRule("exclusiveOrExpression", 111);
		TraceIn("exclusiveOrExpression", 111);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int exclusiveOrExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal473 = default(IToken);
		AstParserRuleReturnScope<object, IToken> andExpression472 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> andExpression474 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal473_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "exclusiveOrExpression");
		DebugLocation(678, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 111)) { return retval; }

			// JavaJava.g3:679:5: ( andExpression ( '^' andExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:679:9: andExpression ( '^' andExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(679, 9);
			PushFollow(Follow._andExpression_in_exclusiveOrExpression4874);
			andExpression472=andExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, andExpression472.Tree);
			DebugLocation(679, 23);
			// JavaJava.g3:679:23: ( '^' andExpression )*
			try { DebugEnterSubRule(137);
			while (true)
			{
				int alt137=2;
				try { DebugEnterDecision(137, false);
				int LA137_1 = input.LA(1);

				if ((LA137_1==57))
				{
					alt137 = 1;
				}


				} finally { DebugExitDecision(137); }
				switch ( alt137 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:679:25: '^' andExpression
					{
					DebugLocation(679, 25);
					char_literal473=(IToken)Match(input,57,Follow._57_in_exclusiveOrExpression4878); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal473_tree = (object)adaptor.Create(char_literal473);
					adaptor.AddChild(root_0, char_literal473_tree);
					}
					DebugLocation(679, 29);
					PushFollow(Follow._andExpression_in_exclusiveOrExpression4880);
					andExpression474=andExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, andExpression474.Tree);

					}
					break;

				default:
					goto loop137;
				}
			}

			loop137:
				;

			} finally { DebugExitSubRule(137); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("exclusiveOrExpression", 111);
			LeaveRule("exclusiveOrExpression", 111);
			LeaveRule_exclusiveOrExpression();
			if (state.backtracking > 0) { Memoize(input, 111, exclusiveOrExpression_StartIndex); }

		}
		DebugLocation(680, 4);
		} finally { DebugExitRule(GrammarFileName, "exclusiveOrExpression"); }
		return retval;

	}
	// $ANTLR end "exclusiveOrExpression"

	partial void EnterRule_andExpression();
	partial void LeaveRule_andExpression();
	// $ANTLR start "andExpression"
	// JavaJava.g3:682:1: andExpression : equalityExpression ( '&' equalityExpression )* ;
	[GrammarRule("andExpression")]
	private AstParserRuleReturnScope<object, IToken> andExpression()
	{
		EnterRule_andExpression();
		EnterRule("andExpression", 112);
		TraceIn("andExpression", 112);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int andExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal476 = default(IToken);
		AstParserRuleReturnScope<object, IToken> equalityExpression475 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> equalityExpression477 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal476_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "andExpression");
		DebugLocation(682, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 112)) { return retval; }

			// JavaJava.g3:683:5: ( equalityExpression ( '&' equalityExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:683:9: equalityExpression ( '&' equalityExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(683, 9);
			PushFollow(Follow._equalityExpression_in_andExpression4902);
			equalityExpression475=equalityExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, equalityExpression475.Tree);
			DebugLocation(683, 28);
			// JavaJava.g3:683:28: ( '&' equalityExpression )*
			try { DebugEnterSubRule(138);
			while (true)
			{
				int alt138=2;
				try { DebugEnterDecision(138, false);
				int LA138_1 = input.LA(1);

				if ((LA138_1==30))
				{
					alt138 = 1;
				}


				} finally { DebugExitDecision(138); }
				switch ( alt138 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:683:30: '&' equalityExpression
					{
					DebugLocation(683, 30);
					char_literal476=(IToken)Match(input,30,Follow._30_in_andExpression4906); if (state.failed) return retval;
					if (state.backtracking == 0) {
					char_literal476_tree = (object)adaptor.Create(char_literal476);
					adaptor.AddChild(root_0, char_literal476_tree);
					}
					DebugLocation(683, 34);
					if (state.backtracking == 0)
					{
						s("&");
					}
					DebugLocation(683, 44);
					PushFollow(Follow._equalityExpression_in_andExpression4910);
					equalityExpression477=equalityExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, equalityExpression477.Tree);

					}
					break;

				default:
					goto loop138;
				}
			}

			loop138:
				;

			} finally { DebugExitSubRule(138); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("andExpression", 112);
			LeaveRule("andExpression", 112);
			LeaveRule_andExpression();
			if (state.backtracking > 0) { Memoize(input, 112, andExpression_StartIndex); }

		}
		DebugLocation(684, 4);
		} finally { DebugExitRule(GrammarFileName, "andExpression"); }
		return retval;

	}
	// $ANTLR end "andExpression"

	partial void EnterRule_equalityExpression();
	partial void LeaveRule_equalityExpression();
	// $ANTLR start "equalityExpression"
	// JavaJava.g3:686:1: equalityExpression : instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* ;
	[GrammarRule("equalityExpression")]
	private AstParserRuleReturnScope<object, IToken> equalityExpression()
	{
		EnterRule_equalityExpression();
		EnterRule("equalityExpression", 113);
		TraceIn("equalityExpression", 113);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int equalityExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal479 = default(IToken);
		IToken string_literal480 = default(IToken);
		AstParserRuleReturnScope<object, IToken> instanceOfExpression478 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> instanceOfExpression481 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal479_tree = default(object);
		object string_literal480_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "equalityExpression");
		DebugLocation(686, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 113)) { return retval; }

			// JavaJava.g3:687:5: ( instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:687:9: instanceOfExpression ( ( '==' | '!=' ) instanceOfExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(687, 9);
			PushFollow(Follow._instanceOfExpression_in_equalityExpression4932);
			instanceOfExpression478=instanceOfExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, instanceOfExpression478.Tree);
			DebugLocation(687, 30);
			// JavaJava.g3:687:30: ( ( '==' | '!=' ) instanceOfExpression )*
			try { DebugEnterSubRule(140);
			while (true)
			{
				int alt140=2;
				try { DebugEnterDecision(140, false);
				int LA140_1 = input.LA(1);

				if ((LA140_1==26||LA140_1==51))
				{
					alt140 = 1;
				}


				} finally { DebugExitDecision(140); }
				switch ( alt140 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:687:32: ( '==' | '!=' ) instanceOfExpression
					{
					DebugLocation(687, 32);
					// JavaJava.g3:687:32: ( '==' | '!=' )
					int alt139=2;
					try { DebugEnterSubRule(139);
					try { DebugEnterDecision(139, false);
					int LA139_1 = input.LA(1);

					if ((LA139_1==51))
					{
						alt139 = 1;
					}
					else if ((LA139_1==26))
					{
						alt139 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 139, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(139); }
					switch (alt139)
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:687:33: '=='
						{
						DebugLocation(687, 33);
						string_literal479=(IToken)Match(input,51,Follow._51_in_equalityExpression4937); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal479_tree = (object)adaptor.Create(string_literal479);
						adaptor.AddChild(root_0, string_literal479_tree);
						}
						DebugLocation(687, 38);
						if (state.backtracking == 0)
						{
							s("==");
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// JavaJava.g3:687:50: '!='
						{
						DebugLocation(687, 50);
						string_literal480=(IToken)Match(input,26,Follow._26_in_equalityExpression4942); if (state.failed) return retval;
						if (state.backtracking == 0) {
						string_literal480_tree = (object)adaptor.Create(string_literal480);
						adaptor.AddChild(root_0, string_literal480_tree);
						}
						DebugLocation(687, 55);
						if (state.backtracking == 0)
						{
							s("!=");
						}

						}
						break;

					}
					} finally { DebugExitSubRule(139); }

					DebugLocation(687, 67);
					PushFollow(Follow._instanceOfExpression_in_equalityExpression4947);
					instanceOfExpression481=instanceOfExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, instanceOfExpression481.Tree);

					}
					break;

				default:
					goto loop140;
				}
			}

			loop140:
				;

			} finally { DebugExitSubRule(140); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("equalityExpression", 113);
			LeaveRule("equalityExpression", 113);
			LeaveRule_equalityExpression();
			if (state.backtracking > 0) { Memoize(input, 113, equalityExpression_StartIndex); }

		}
		DebugLocation(688, 4);
		} finally { DebugExitRule(GrammarFileName, "equalityExpression"); }
		return retval;

	}
	// $ANTLR end "equalityExpression"

	partial void EnterRule_instanceOfExpression();
	partial void LeaveRule_instanceOfExpression();
	// $ANTLR start "instanceOfExpression"
	// JavaJava.g3:690:1: instanceOfExpression : relationalExpression ( 'instanceof' type )? ;
	[GrammarRule("instanceOfExpression")]
	private AstParserRuleReturnScope<object, IToken> instanceOfExpression()
	{
		EnterRule_instanceOfExpression();
		EnterRule("instanceOfExpression", 114);
		TraceIn("instanceOfExpression", 114);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int instanceOfExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken string_literal483 = default(IToken);
		AstParserRuleReturnScope<object, IToken> relationalExpression482 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type484 = default(AstParserRuleReturnScope<object, IToken>);

		object string_literal483_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "instanceOfExpression");
		DebugLocation(690, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 114)) { return retval; }

			// JavaJava.g3:691:5: ( relationalExpression ( 'instanceof' type )? )
			DebugEnterAlt(1);
			// JavaJava.g3:691:9: relationalExpression ( 'instanceof' type )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(691, 9);
			PushFollow(Follow._relationalExpression_in_instanceOfExpression4969);
			relationalExpression482=relationalExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, relationalExpression482.Tree);
			DebugLocation(691, 30);
			// JavaJava.g3:691:30: ( 'instanceof' type )?
			int alt141=2;
			try { DebugEnterSubRule(141);
			try { DebugEnterDecision(141, false);
			int LA141_1 = input.LA(1);

			if ((LA141_1==81))
			{
				alt141 = 1;
			}
			} finally { DebugExitDecision(141); }
			switch (alt141)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:691:31: 'instanceof' type
				{
				DebugLocation(691, 31);
				string_literal483=(IToken)Match(input,81,Follow._81_in_instanceOfExpression4972); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal483_tree = (object)adaptor.Create(string_literal483);
				adaptor.AddChild(root_0, string_literal483_tree);
				}
				DebugLocation(691, 44);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("instanceof");
				}
				DebugLocation(691, 106);
				PushFollow(Follow._type_in_instanceOfExpression4975);
				type484=type();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, type484.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(141); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("instanceOfExpression", 114);
			LeaveRule("instanceOfExpression", 114);
			LeaveRule_instanceOfExpression();
			if (state.backtracking > 0) { Memoize(input, 114, instanceOfExpression_StartIndex); }

		}
		DebugLocation(692, 4);
		} finally { DebugExitRule(GrammarFileName, "instanceOfExpression"); }
		return retval;

	}
	// $ANTLR end "instanceOfExpression"

	partial void EnterRule_relationalExpression();
	partial void LeaveRule_relationalExpression();
	// $ANTLR start "relationalExpression"
	// JavaJava.g3:694:1: relationalExpression : shiftExpression ( relationalOp shiftExpression )* ;
	[GrammarRule("relationalExpression")]
	private AstParserRuleReturnScope<object, IToken> relationalExpression()
	{
		EnterRule_relationalExpression();
		EnterRule("relationalExpression", 115);
		TraceIn("relationalExpression", 115);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int relationalExpression_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> shiftExpression485 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> relationalOp486 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> shiftExpression487 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "relationalExpression");
		DebugLocation(694, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 115)) { return retval; }

			// JavaJava.g3:695:5: ( shiftExpression ( relationalOp shiftExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:695:9: shiftExpression ( relationalOp shiftExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(695, 9);
			PushFollow(Follow._shiftExpression_in_relationalExpression4996);
			shiftExpression485=shiftExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, shiftExpression485.Tree);
			DebugLocation(695, 25);
			// JavaJava.g3:695:25: ( relationalOp shiftExpression )*
			try { DebugEnterSubRule(142);
			while (true)
			{
				int alt142=2;
				try { DebugEnterDecision(142, false);
				int LA142_1 = input.LA(1);

				if ((LA142_1==49))
				{
					int LA142_2 = input.LA(2);

					if (((LA142_2>=CharacterLiteral && LA142_2<=DecimalLiteral)||LA142_2==FloatingPointLiteral||(LA142_2>=HexLiteral && LA142_2<=Identifier)||(LA142_2>=OctalLiteral && LA142_2<=StringLiteral)||LA142_2==25||LA142_2==32||(LA142_2>=36 && LA142_2<=37)||(LA142_2>=40 && LA142_2<=41)||LA142_2==50||LA142_2==60||LA142_2==62||LA142_2==65||LA142_2==70||LA142_2==73||LA142_2==76||LA142_2==82||LA142_2==84||(LA142_2>=86 && LA142_2<=87)||LA142_2==93||LA142_2==96||LA142_2==99||LA142_2==103||LA142_2==105||LA142_2==113))
					{
						alt142 = 1;
					}


				}
				else if ((LA142_1==52))
				{
					int LA142_2 = input.LA(2);

					if (((LA142_2>=CharacterLiteral && LA142_2<=DecimalLiteral)||LA142_2==FloatingPointLiteral||(LA142_2>=HexLiteral && LA142_2<=Identifier)||(LA142_2>=OctalLiteral && LA142_2<=StringLiteral)||LA142_2==25||LA142_2==32||(LA142_2>=36 && LA142_2<=37)||(LA142_2>=40 && LA142_2<=41)||LA142_2==50||LA142_2==60||LA142_2==62||LA142_2==65||LA142_2==70||LA142_2==73||LA142_2==76||LA142_2==82||LA142_2==84||(LA142_2>=86 && LA142_2<=87)||LA142_2==93||LA142_2==96||LA142_2==99||LA142_2==103||LA142_2==105||LA142_2==113))
					{
						alt142 = 1;
					}


				}


				} finally { DebugExitDecision(142); }
				switch ( alt142 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:695:27: relationalOp shiftExpression
					{
					DebugLocation(695, 27);
					PushFollow(Follow._relationalOp_in_relationalExpression5000);
					relationalOp486=relationalOp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, relationalOp486.Tree);
					DebugLocation(695, 40);
					PushFollow(Follow._shiftExpression_in_relationalExpression5002);
					shiftExpression487=shiftExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shiftExpression487.Tree);

					}
					break;

				default:
					goto loop142;
				}
			}

			loop142:
				;

			} finally { DebugExitSubRule(142); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relationalExpression", 115);
			LeaveRule("relationalExpression", 115);
			LeaveRule_relationalExpression();
			if (state.backtracking > 0) { Memoize(input, 115, relationalExpression_StartIndex); }

		}
		DebugLocation(696, 4);
		} finally { DebugExitRule(GrammarFileName, "relationalExpression"); }
		return retval;

	}
	// $ANTLR end "relationalExpression"

	partial void EnterRule_relationalOp();
	partial void LeaveRule_relationalOp();
	// $ANTLR start "relationalOp"
	// JavaJava.g3:698:1: relationalOp : ( ( '<' '=' )=>t1= '<' t2= '=' {...}?| ( '>' '=' )=>t1= '>' t2= '=' {...}?| '<' | '>' );
	[GrammarRule("relationalOp")]
	private AstParserRuleReturnScope<object, IToken> relationalOp()
	{
		EnterRule_relationalOp();
		EnterRule("relationalOp", 116);
		TraceIn("relationalOp", 116);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int relationalOp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken t1 = default(IToken);
		IToken t2 = default(IToken);
		IToken char_literal488 = default(IToken);
		IToken char_literal489 = default(IToken);

		object t1_tree = default(object);
		object t2_tree = default(object);
		object char_literal488_tree = default(object);
		object char_literal489_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "relationalOp");
		DebugLocation(698, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 116)) { return retval; }

			// JavaJava.g3:699:5: ( ( '<' '=' )=>t1= '<' t2= '=' {...}?| ( '>' '=' )=>t1= '>' t2= '=' {...}?| '<' | '>' )
			int alt143=4;
			try { DebugEnterDecision(143, false);
			int LA143_1 = input.LA(1);

			if ((LA143_1==49))
			{
				int LA143_2 = input.LA(2);

				if ((LA143_2==50) && (EvaluatePredicate(synpred211_JavaJava_fragment)))
				{
					alt143 = 1;
				}
				else if (((LA143_2>=CharacterLiteral && LA143_2<=DecimalLiteral)||LA143_2==FloatingPointLiteral||(LA143_2>=HexLiteral && LA143_2<=Identifier)||(LA143_2>=OctalLiteral && LA143_2<=StringLiteral)||LA143_2==25||LA143_2==32||(LA143_2>=36 && LA143_2<=37)||(LA143_2>=40 && LA143_2<=41)||LA143_2==60||LA143_2==62||LA143_2==65||LA143_2==70||LA143_2==73||LA143_2==76||LA143_2==82||LA143_2==84||(LA143_2>=86 && LA143_2<=87)||LA143_2==93||LA143_2==96||LA143_2==99||LA143_2==103||LA143_2==105||LA143_2==113))
				{
					alt143 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 143, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA143_1==52))
			{
				int LA143_2 = input.LA(2);

				if ((LA143_2==50) && (EvaluatePredicate(synpred212_JavaJava_fragment)))
				{
					alt143 = 2;
				}
				else if (((LA143_2>=CharacterLiteral && LA143_2<=DecimalLiteral)||LA143_2==FloatingPointLiteral||(LA143_2>=HexLiteral && LA143_2<=Identifier)||(LA143_2>=OctalLiteral && LA143_2<=StringLiteral)||LA143_2==25||LA143_2==32||(LA143_2>=36 && LA143_2<=37)||(LA143_2>=40 && LA143_2<=41)||LA143_2==60||LA143_2==62||LA143_2==65||LA143_2==70||LA143_2==73||LA143_2==76||LA143_2==82||LA143_2==84||(LA143_2>=86 && LA143_2<=87)||LA143_2==93||LA143_2==96||LA143_2==99||LA143_2==103||LA143_2==105||LA143_2==113))
				{
					alt143 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 143, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 143, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(143); }
			switch (alt143)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:699:9: ( '<' '=' )=>t1= '<' t2= '=' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(699, 23);
				t1=(IToken)Match(input,49,Follow._49_in_relationalOp5037); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(699, 30);
				t2=(IToken)Match(input,50,Follow._50_in_relationalOp5041); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(700, 9);
				if (!((true/* t1.Line == t2.Line && 
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine*/ )))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "relationalOp", "true/* $t1.Line == $t2.Line && \r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine*/ ");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:702:9: ( '>' '=' )=>t1= '>' t2= '=' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(702, 23);
				t1=(IToken)Match(input,52,Follow._52_in_relationalOp5071); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(702, 30);
				t2=(IToken)Match(input,50,Follow._50_in_relationalOp5075); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(703, 9);
				if (!((true/* t1.Line == t2.Line && 
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine*/ )))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "relationalOp", "true/* $t1.Line == $t2.Line && \r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine*/ ");
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:705:9: '<'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(705, 9);
				char_literal488=(IToken)Match(input,49,Follow._49_in_relationalOp5096); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal488_tree = (object)adaptor.Create(char_literal488);
				adaptor.AddChild(root_0, char_literal488_tree);
				}
				DebugLocation(705, 13);
				if (state.backtracking == 0)
				{
					s("<");
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:706:9: '>'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(706, 9);
				char_literal489=(IToken)Match(input,52,Follow._52_in_relationalOp5108); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal489_tree = (object)adaptor.Create(char_literal489);
				adaptor.AddChild(root_0, char_literal489_tree);
				}
				DebugLocation(706, 13);
				if (state.backtracking == 0)
				{
					s(">");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("relationalOp", 116);
			LeaveRule("relationalOp", 116);
			LeaveRule_relationalOp();
			if (state.backtracking > 0) { Memoize(input, 116, relationalOp_StartIndex); }

		}
		DebugLocation(707, 4);
		} finally { DebugExitRule(GrammarFileName, "relationalOp"); }
		return retval;

	}
	// $ANTLR end "relationalOp"

	partial void EnterRule_shiftExpression();
	partial void LeaveRule_shiftExpression();
	// $ANTLR start "shiftExpression"
	// JavaJava.g3:709:1: shiftExpression : additiveExpression ( shiftOp additiveExpression )* ;
	[GrammarRule("shiftExpression")]
	private AstParserRuleReturnScope<object, IToken> shiftExpression()
	{
		EnterRule_shiftExpression();
		EnterRule("shiftExpression", 117);
		TraceIn("shiftExpression", 117);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int shiftExpression_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> additiveExpression490 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> shiftOp491 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> additiveExpression492 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "shiftExpression");
		DebugLocation(709, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 117)) { return retval; }

			// JavaJava.g3:710:5: ( additiveExpression ( shiftOp additiveExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:710:9: additiveExpression ( shiftOp additiveExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(710, 9);
			PushFollow(Follow._additiveExpression_in_shiftExpression5129);
			additiveExpression490=additiveExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, additiveExpression490.Tree);
			DebugLocation(710, 28);
			// JavaJava.g3:710:28: ( shiftOp additiveExpression )*
			try { DebugEnterSubRule(144);
			while (true)
			{
				int alt144=2;
				try { DebugEnterDecision(144, false);
				int LA144_1 = input.LA(1);

				if ((LA144_1==49))
				{
					int LA144_2 = input.LA(2);

					if ((LA144_2==49))
					{
						int LA144_3 = input.LA(3);

						if (((LA144_3>=CharacterLiteral && LA144_3<=DecimalLiteral)||LA144_3==FloatingPointLiteral||(LA144_3>=HexLiteral && LA144_3<=Identifier)||(LA144_3>=OctalLiteral && LA144_3<=StringLiteral)||LA144_3==25||LA144_3==32||(LA144_3>=36 && LA144_3<=37)||(LA144_3>=40 && LA144_3<=41)||LA144_3==60||LA144_3==62||LA144_3==65||LA144_3==70||LA144_3==73||LA144_3==76||LA144_3==82||LA144_3==84||(LA144_3>=86 && LA144_3<=87)||LA144_3==93||LA144_3==96||LA144_3==99||LA144_3==103||LA144_3==105||LA144_3==113))
						{
							alt144 = 1;
						}


					}


				}
				else if ((LA144_1==52))
				{
					int LA144_2 = input.LA(2);

					if ((LA144_2==52))
					{
						int LA144_3 = input.LA(3);

						if ((LA144_3==52))
						{
							int LA144_4 = input.LA(4);

							if (((LA144_4>=CharacterLiteral && LA144_4<=DecimalLiteral)||LA144_4==FloatingPointLiteral||(LA144_4>=HexLiteral && LA144_4<=Identifier)||(LA144_4>=OctalLiteral && LA144_4<=StringLiteral)||LA144_4==25||LA144_4==32||(LA144_4>=36 && LA144_4<=37)||(LA144_4>=40 && LA144_4<=41)||LA144_4==60||LA144_4==62||LA144_4==65||LA144_4==70||LA144_4==73||LA144_4==76||LA144_4==82||LA144_4==84||(LA144_4>=86 && LA144_4<=87)||LA144_4==93||LA144_4==96||LA144_4==99||LA144_4==103||LA144_4==105||LA144_4==113))
							{
								alt144 = 1;
							}


						}
						else if (((LA144_3>=CharacterLiteral && LA144_3<=DecimalLiteral)||LA144_3==FloatingPointLiteral||(LA144_3>=HexLiteral && LA144_3<=Identifier)||(LA144_3>=OctalLiteral && LA144_3<=StringLiteral)||LA144_3==25||LA144_3==32||(LA144_3>=36 && LA144_3<=37)||(LA144_3>=40 && LA144_3<=41)||LA144_3==60||LA144_3==62||LA144_3==65||LA144_3==70||LA144_3==73||LA144_3==76||LA144_3==82||LA144_3==84||(LA144_3>=86 && LA144_3<=87)||LA144_3==93||LA144_3==96||LA144_3==99||LA144_3==103||LA144_3==105||LA144_3==113))
						{
							alt144 = 1;
						}


					}


				}


				} finally { DebugExitDecision(144); }
				switch ( alt144 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:710:30: shiftOp additiveExpression
					{
					DebugLocation(710, 30);
					PushFollow(Follow._shiftOp_in_shiftExpression5133);
					shiftOp491=shiftOp();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, shiftOp491.Tree);
					DebugLocation(710, 38);
					PushFollow(Follow._additiveExpression_in_shiftExpression5135);
					additiveExpression492=additiveExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, additiveExpression492.Tree);

					}
					break;

				default:
					goto loop144;
				}
			}

			loop144:
				;

			} finally { DebugExitSubRule(144); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shiftExpression", 117);
			LeaveRule("shiftExpression", 117);
			LeaveRule_shiftExpression();
			if (state.backtracking > 0) { Memoize(input, 117, shiftExpression_StartIndex); }

		}
		DebugLocation(711, 4);
		} finally { DebugExitRule(GrammarFileName, "shiftExpression"); }
		return retval;

	}
	// $ANTLR end "shiftExpression"

	partial void EnterRule_shiftOp();
	partial void LeaveRule_shiftOp();
	// $ANTLR start "shiftOp"
	// JavaJava.g3:713:1: shiftOp : ( ( '<' '<' )=>t1= '<' t2= '<' {...}?| ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}?| ( '>' '>' )=>t1= '>' t2= '>' {...}?);
	[GrammarRule("shiftOp")]
	private AstParserRuleReturnScope<object, IToken> shiftOp()
	{
		EnterRule_shiftOp();
		EnterRule("shiftOp", 118);
		TraceIn("shiftOp", 118);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int shiftOp_StartIndex = input.Index;

		object root_0 = default(object);

		IToken t1 = default(IToken);
		IToken t2 = default(IToken);
		IToken t3 = default(IToken);

		object t1_tree = default(object);
		object t2_tree = default(object);
		object t3_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "shiftOp");
		DebugLocation(713, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 118)) { return retval; }

			// JavaJava.g3:714:5: ( ( '<' '<' )=>t1= '<' t2= '<' {...}?| ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}?| ( '>' '>' )=>t1= '>' t2= '>' {...}?)
			int alt145=3;
			try { DebugEnterDecision(145, false);
			int LA145_1 = input.LA(1);

			if ((LA145_1==49) && (EvaluatePredicate(synpred215_JavaJava_fragment)))
			{
				alt145 = 1;
			}
			else if ((LA145_1==52))
			{
				int LA145_2 = input.LA(2);

				if ((LA145_2==52))
				{
					int LA145_3 = input.LA(3);

					if ((LA145_3==52) && (EvaluatePredicate(synpred216_JavaJava_fragment)))
					{
						alt145 = 2;
					}
					else if ((LA145_3==36) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==40) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==37) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==41) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==113) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==25) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==32) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==99) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==96) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==HexLiteral) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==OctalLiteral) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==DecimalLiteral) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==FloatingPointLiteral) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==CharacterLiteral) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==StringLiteral) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==103) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==73) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==87) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==86) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==Identifier) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==60) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==65) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==62) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==93) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==82) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==84) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==76) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==70) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else if ((LA145_3==105) && (EvaluatePredicate(synpred217_JavaJava_fragment)))
					{
						alt145 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 145, 3, input, 3);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 145, 2, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 145, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(145); }
			switch (alt145)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:714:9: ( '<' '<' )=>t1= '<' t2= '<' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(714, 23);
				t1=(IToken)Match(input,49,Follow._49_in_shiftOp5166); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(714, 30);
				t2=(IToken)Match(input,49,Follow._49_in_shiftOp5170); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(715, 9);
				if (!((true/* t1.Line == t2.Line && 
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine*/ )))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "shiftOp", "true/* $t1.Line == $t2.Line && \r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine*/ ");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:717:9: ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(717, 27);
				t1=(IToken)Match(input,52,Follow._52_in_shiftOp5202); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(717, 34);
				t2=(IToken)Match(input,52,Follow._52_in_shiftOp5206); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(717, 41);
				t3=(IToken)Match(input,52,Follow._52_in_shiftOp5210); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t3_tree = (object)adaptor.Create(t3);
				adaptor.AddChild(root_0, t3_tree);
				}
				DebugLocation(718, 9);
				if (!(( true/*t1.Line == t2.Line && 
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine &&
				          t2.Line == t3.Line && 
				          t2.CharPositionInLine + 1 == t3.CharPositionInLine */)))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "shiftOp", " true/*$t1.Line == $t2.Line && \r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine &&\r\n          $t2.Line == $t3.Line && \r\n          $t2.CharPositionInLine + 1 == $t3.CharPositionInLine */");
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:722:9: ( '>' '>' )=>t1= '>' t2= '>' {...}?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(722, 23);
				t1=(IToken)Match(input,52,Follow._52_in_shiftOp5240); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t1_tree = (object)adaptor.Create(t1);
				adaptor.AddChild(root_0, t1_tree);
				}
				DebugLocation(722, 30);
				t2=(IToken)Match(input,52,Follow._52_in_shiftOp5244); if (state.failed) return retval;
				if (state.backtracking == 0) {
				t2_tree = (object)adaptor.Create(t2);
				adaptor.AddChild(root_0, t2_tree);
				}
				DebugLocation(723, 9);
				if (!((true/* t1.Line == t2.Line && 
				          t1.CharPositionInLine + 1 == t2.CharPositionInLine*/ )))
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					throw new FailedPredicateException(input, "shiftOp", "true/* $t1.Line == $t2.Line && \r\n          $t1.CharPositionInLine + 1 == $t2.CharPositionInLine*/ ");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("shiftOp", 118);
			LeaveRule("shiftOp", 118);
			LeaveRule_shiftOp();
			if (state.backtracking > 0) { Memoize(input, 118, shiftOp_StartIndex); }

		}
		DebugLocation(725, 4);
		} finally { DebugExitRule(GrammarFileName, "shiftOp"); }
		return retval;

	}
	// $ANTLR end "shiftOp"

	partial void EnterRule_additiveExpression();
	partial void LeaveRule_additiveExpression();
	// $ANTLR start "additiveExpression"
	// JavaJava.g3:728:1: additiveExpression : multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* ;
	[GrammarRule("additiveExpression")]
	private AstParserRuleReturnScope<object, IToken> additiveExpression()
	{
		EnterRule_additiveExpression();
		EnterRule("additiveExpression", 119);
		TraceIn("additiveExpression", 119);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int additiveExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal494 = default(IToken);
		IToken char_literal495 = default(IToken);
		AstParserRuleReturnScope<object, IToken> multiplicativeExpression493 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> multiplicativeExpression496 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal494_tree = default(object);
		object char_literal495_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "additiveExpression");
		DebugLocation(728, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 119)) { return retval; }

			// JavaJava.g3:729:5: ( multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:729:9: multiplicativeExpression ( ( '+' | '-' ) multiplicativeExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(729, 9);
			PushFollow(Follow._multiplicativeExpression_in_additiveExpression5274);
			multiplicativeExpression493=multiplicativeExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicativeExpression493.Tree);
			DebugLocation(729, 34);
			// JavaJava.g3:729:34: ( ( '+' | '-' ) multiplicativeExpression )*
			try { DebugEnterSubRule(147);
			while (true)
			{
				int alt147=2;
				try { DebugEnterDecision(147, false);
				int LA147_1 = input.LA(1);

				if ((LA147_1==36||LA147_1==40))
				{
					alt147 = 1;
				}


				} finally { DebugExitDecision(147); }
				switch ( alt147 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:729:36: ( '+' | '-' ) multiplicativeExpression
					{
					DebugLocation(729, 36);
					// JavaJava.g3:729:36: ( '+' | '-' )
					int alt146=2;
					try { DebugEnterSubRule(146);
					try { DebugEnterDecision(146, false);
					int LA146_1 = input.LA(1);

					if ((LA146_1==36))
					{
						alt146 = 1;
					}
					else if ((LA146_1==40))
					{
						alt146 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 146, 0, input, 1);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					} finally { DebugExitDecision(146); }
					switch (alt146)
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:729:37: '+'
						{
						DebugLocation(729, 37);
						char_literal494=(IToken)Match(input,36,Follow._36_in_additiveExpression5279); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal494_tree = (object)adaptor.Create(char_literal494);
						adaptor.AddChild(root_0, char_literal494_tree);
						}
						DebugLocation(729, 41);
						if (state.backtracking == 0)
						{
							s("+");
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// JavaJava.g3:729:52: '-'
						{
						DebugLocation(729, 52);
						char_literal495=(IToken)Match(input,40,Follow._40_in_additiveExpression5284); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal495_tree = (object)adaptor.Create(char_literal495);
						adaptor.AddChild(root_0, char_literal495_tree);
						}
						DebugLocation(729, 56);
						if (state.backtracking == 0)
						{
							s("-");
						}

						}
						break;

					}
					} finally { DebugExitSubRule(146); }

					DebugLocation(729, 67);
					PushFollow(Follow._multiplicativeExpression_in_additiveExpression5289);
					multiplicativeExpression496=multiplicativeExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, multiplicativeExpression496.Tree);

					}
					break;

				default:
					goto loop147;
				}
			}

			loop147:
				;

			} finally { DebugExitSubRule(147); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("additiveExpression", 119);
			LeaveRule("additiveExpression", 119);
			LeaveRule_additiveExpression();
			if (state.backtracking > 0) { Memoize(input, 119, additiveExpression_StartIndex); }

		}
		DebugLocation(730, 4);
		} finally { DebugExitRule(GrammarFileName, "additiveExpression"); }
		return retval;

	}
	// $ANTLR end "additiveExpression"

	partial void EnterRule_multiplicativeExpression();
	partial void LeaveRule_multiplicativeExpression();
	// $ANTLR start "multiplicativeExpression"
	// JavaJava.g3:732:1: multiplicativeExpression : unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* ;
	[GrammarRule("multiplicativeExpression")]
	private AstParserRuleReturnScope<object, IToken> multiplicativeExpression()
	{
		EnterRule_multiplicativeExpression();
		EnterRule("multiplicativeExpression", 120);
		TraceIn("multiplicativeExpression", 120);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int multiplicativeExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal498 = default(IToken);
		IToken char_literal499 = default(IToken);
		IToken char_literal500 = default(IToken);
		AstParserRuleReturnScope<object, IToken> unaryExpression497 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpression501 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal498_tree = default(object);
		object char_literal499_tree = default(object);
		object char_literal500_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "multiplicativeExpression");
		DebugLocation(732, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 120)) { return retval; }

			// JavaJava.g3:733:5: ( unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )* )
			DebugEnterAlt(1);
			// JavaJava.g3:733:9: unaryExpression ( ( '*' | '/' | '%' ) unaryExpression )*
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(733, 9);
			PushFollow(Follow._unaryExpression_in_multiplicativeExpression5311);
			unaryExpression497=unaryExpression();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression497.Tree);
			DebugLocation(733, 25);
			// JavaJava.g3:733:25: ( ( '*' | '/' | '%' ) unaryExpression )*
			try { DebugEnterSubRule(149);
			while (true)
			{
				int alt149=2;
				try { DebugEnterDecision(149, false);
				int LA149_1 = input.LA(1);

				if ((LA149_1==27||LA149_1==34||LA149_1==45))
				{
					alt149 = 1;
				}


				} finally { DebugExitDecision(149); }
				switch ( alt149 )
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:733:27: ( '*' | '/' | '%' ) unaryExpression
					{
					DebugLocation(733, 27);
					// JavaJava.g3:733:27: ( '*' | '/' | '%' )
					int alt148=3;
					try { DebugEnterSubRule(148);
					try { DebugEnterDecision(148, false);
					switch (input.LA(1))
					{
					case 34:
						{
						alt148 = 1;
						}
						break;
					case 45:
						{
						alt148 = 2;
						}
						break;
					case 27:
						{
						alt148 = 3;
						}
						break;
					default:
						{
							if (state.backtracking>0) {state.failed=true; return retval;}
							NoViableAltException nvae = new NoViableAltException("", 148, 0, input, 1);
							DebugRecognitionException(nvae);
							throw nvae;
						}
					}

					} finally { DebugExitDecision(148); }
					switch (alt148)
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:733:29: '*'
						{
						DebugLocation(733, 29);
						char_literal498=(IToken)Match(input,34,Follow._34_in_multiplicativeExpression5317); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal498_tree = (object)adaptor.Create(char_literal498);
						adaptor.AddChild(root_0, char_literal498_tree);
						}
						DebugLocation(733, 33);
						if (state.backtracking == 0)
						{
							s("*");
						}

						}
						break;
					case 2:
						DebugEnterAlt(2);
						// JavaJava.g3:733:45: '/'
						{
						DebugLocation(733, 45);
						char_literal499=(IToken)Match(input,45,Follow._45_in_multiplicativeExpression5323); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal499_tree = (object)adaptor.Create(char_literal499);
						adaptor.AddChild(root_0, char_literal499_tree);
						}
						DebugLocation(733, 49);
						if (state.backtracking == 0)
						{
							s("/");
						}

						}
						break;
					case 3:
						DebugEnterAlt(3);
						// JavaJava.g3:733:61: '%'
						{
						DebugLocation(733, 61);
						char_literal500=(IToken)Match(input,27,Follow._27_in_multiplicativeExpression5329); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal500_tree = (object)adaptor.Create(char_literal500);
						adaptor.AddChild(root_0, char_literal500_tree);
						}
						DebugLocation(733, 65);
						if (state.backtracking == 0)
						{
							s("%");
						}

						}
						break;

					}
					} finally { DebugExitSubRule(148); }

					DebugLocation(733, 77);
					PushFollow(Follow._unaryExpression_in_multiplicativeExpression5334);
					unaryExpression501=unaryExpression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression501.Tree);

					}
					break;

				default:
					goto loop149;
				}
			}

			loop149:
				;

			} finally { DebugExitSubRule(149); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("multiplicativeExpression", 120);
			LeaveRule("multiplicativeExpression", 120);
			LeaveRule_multiplicativeExpression();
			if (state.backtracking > 0) { Memoize(input, 120, multiplicativeExpression_StartIndex); }

		}
		DebugLocation(734, 4);
		} finally { DebugExitRule(GrammarFileName, "multiplicativeExpression"); }
		return retval;

	}
	// $ANTLR end "multiplicativeExpression"

	partial void EnterRule_unaryExpression();
	partial void LeaveRule_unaryExpression();
	// $ANTLR start "unaryExpression"
	// JavaJava.g3:736:1: unaryExpression : ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus );
	[GrammarRule("unaryExpression")]
	private AstParserRuleReturnScope<object, IToken> unaryExpression()
	{
		EnterRule_unaryExpression();
		EnterRule("unaryExpression", 121);
		TraceIn("unaryExpression", 121);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int unaryExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal502 = default(IToken);
		IToken char_literal504 = default(IToken);
		IToken string_literal506 = default(IToken);
		IToken string_literal508 = default(IToken);
		AstParserRuleReturnScope<object, IToken> unaryExpression503 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpression505 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpression507 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpression509 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpressionNotPlusMinus510 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal502_tree = default(object);
		object char_literal504_tree = default(object);
		object string_literal506_tree = default(object);
		object string_literal508_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unaryExpression");
		DebugLocation(736, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 121)) { return retval; }

			// JavaJava.g3:737:5: ( '+' unaryExpression | '-' unaryExpression | '++' unaryExpression | '--' unaryExpression | unaryExpressionNotPlusMinus )
			int alt150=5;
			try { DebugEnterDecision(150, false);
			switch (input.LA(1))
			{
			case 36:
				{
				alt150 = 1;
				}
				break;
			case 40:
				{
				alt150 = 2;
				}
				break;
			case 37:
				{
				alt150 = 3;
				}
				break;
			case 41:
				{
				alt150 = 4;
				}
				break;
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case Identifier:
			case OctalLiteral:
			case StringLiteral:
			case 25:
			case 32:
			case 60:
			case 62:
			case 65:
			case 70:
			case 73:
			case 76:
			case 82:
			case 84:
			case 86:
			case 87:
			case 93:
			case 96:
			case 99:
			case 103:
			case 105:
			case 113:
				{
				alt150 = 5;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 150, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(150); }
			switch (alt150)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:737:9: '+' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(737, 9);
				char_literal502=(IToken)Match(input,36,Follow._36_in_unaryExpression5360); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal502_tree = (object)adaptor.Create(char_literal502);
				adaptor.AddChild(root_0, char_literal502_tree);
				}
				DebugLocation(737, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpression5362);
				unaryExpression503=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression503.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:738:9: '-' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(738, 9);
				char_literal504=(IToken)Match(input,40,Follow._40_in_unaryExpression5372); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal504_tree = (object)adaptor.Create(char_literal504);
				adaptor.AddChild(root_0, char_literal504_tree);
				}
				DebugLocation(738, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpression5374);
				unaryExpression505=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression505.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:739:9: '++' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(739, 9);
				string_literal506=(IToken)Match(input,37,Follow._37_in_unaryExpression5384); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal506_tree = (object)adaptor.Create(string_literal506);
				adaptor.AddChild(root_0, string_literal506_tree);
				}
				DebugLocation(739, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression5386);
				unaryExpression507=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression507.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:740:9: '--' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(740, 9);
				string_literal508=(IToken)Match(input,41,Follow._41_in_unaryExpression5396); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal508_tree = (object)adaptor.Create(string_literal508);
				adaptor.AddChild(root_0, string_literal508_tree);
				}
				DebugLocation(740, 14);
				PushFollow(Follow._unaryExpression_in_unaryExpression5398);
				unaryExpression509=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression509.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:741:9: unaryExpressionNotPlusMinus
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(741, 9);
				PushFollow(Follow._unaryExpressionNotPlusMinus_in_unaryExpression5408);
				unaryExpressionNotPlusMinus510=unaryExpressionNotPlusMinus();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpressionNotPlusMinus510.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unaryExpression", 121);
			LeaveRule("unaryExpression", 121);
			LeaveRule_unaryExpression();
			if (state.backtracking > 0) { Memoize(input, 121, unaryExpression_StartIndex); }

		}
		DebugLocation(742, 4);
		} finally { DebugExitRule(GrammarFileName, "unaryExpression"); }
		return retval;

	}
	// $ANTLR end "unaryExpression"

	partial void EnterRule_unaryExpressionNotPlusMinus();
	partial void LeaveRule_unaryExpressionNotPlusMinus();
	// $ANTLR start "unaryExpressionNotPlusMinus"
	// JavaJava.g3:744:1: unaryExpressionNotPlusMinus : ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? );
	[GrammarRule("unaryExpressionNotPlusMinus")]
	private AstParserRuleReturnScope<object, IToken> unaryExpressionNotPlusMinus()
	{
		EnterRule_unaryExpressionNotPlusMinus();
		EnterRule("unaryExpressionNotPlusMinus", 122);
		TraceIn("unaryExpressionNotPlusMinus", 122);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int unaryExpressionNotPlusMinus_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal511 = default(IToken);
		IToken char_literal513 = default(IToken);
		IToken string_literal518 = default(IToken);
		IToken string_literal519 = default(IToken);
		AstParserRuleReturnScope<object, IToken> unaryExpression512 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpression514 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> castExpression515 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> primary516 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> selector517 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal511_tree = default(object);
		object char_literal513_tree = default(object);
		object string_literal518_tree = default(object);
		object string_literal519_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "unaryExpressionNotPlusMinus");
		DebugLocation(744, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 122)) { return retval; }

			// JavaJava.g3:745:5: ( '~' unaryExpression | '!' unaryExpression | castExpression | primary ( selector )* ( '++' | '--' )? )
			int alt153=4;
			try { DebugEnterDecision(153, false);
			switch (input.LA(1))
			{
			case 113:
				{
				alt153 = 1;
				}
				break;
			case 25:
				{
				alt153 = 2;
				}
				break;
			case 32:
				{
				int LA153_2 = input.LA(2);

				if ((EvaluatePredicate(synpred229_JavaJava_fragment)))
				{
					alt153 = 3;
				}
				else if ((true))
				{
					alt153 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 153, 3, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case Identifier:
			case OctalLiteral:
			case StringLiteral:
			case 60:
			case 62:
			case 65:
			case 70:
			case 73:
			case 76:
			case 82:
			case 84:
			case 86:
			case 87:
			case 93:
			case 96:
			case 99:
			case 103:
			case 105:
				{
				alt153 = 4;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 153, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(153); }
			switch (alt153)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:745:9: '~' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(745, 9);
				char_literal511=(IToken)Match(input,113,Follow._113_in_unaryExpressionNotPlusMinus5427); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal511_tree = (object)adaptor.Create(char_literal511);
				adaptor.AddChild(root_0, char_literal511_tree);
				}
				DebugLocation(745, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpressionNotPlusMinus5429);
				unaryExpression512=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression512.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:746:9: '!' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(746, 9);
				char_literal513=(IToken)Match(input,25,Follow._25_in_unaryExpressionNotPlusMinus5439); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal513_tree = (object)adaptor.Create(char_literal513);
				adaptor.AddChild(root_0, char_literal513_tree);
				}
				DebugLocation(746, 13);
				PushFollow(Follow._unaryExpression_in_unaryExpressionNotPlusMinus5441);
				unaryExpression514=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression514.Tree);

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:747:9: castExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(747, 9);
				PushFollow(Follow._castExpression_in_unaryExpressionNotPlusMinus5451);
				castExpression515=castExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, castExpression515.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:748:9: primary ( selector )* ( '++' | '--' )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(748, 9);
				PushFollow(Follow._primary_in_unaryExpressionNotPlusMinus5461);
				primary516=primary();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primary516.Tree);
				DebugLocation(748, 17);
				// JavaJava.g3:748:17: ( selector )*
				try { DebugEnterSubRule(151);
				while (true)
				{
					int alt151=2;
					try { DebugEnterDecision(151, false);
					int LA151_1 = input.LA(1);

					if ((LA151_1==43||LA151_1==55))
					{
						alt151 = 1;
					}


					} finally { DebugExitDecision(151); }
					switch ( alt151 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:748:17: selector
						{
						DebugLocation(748, 17);
						PushFollow(Follow._selector_in_unaryExpressionNotPlusMinus5463);
						selector517=selector();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, selector517.Tree);

						}
						break;

					default:
						goto loop151;
					}
				}

				loop151:
					;

				} finally { DebugExitSubRule(151); }

				DebugLocation(748, 27);
				// JavaJava.g3:748:27: ( '++' | '--' )?
				int alt152=3;
				try { DebugEnterSubRule(152);
				try { DebugEnterDecision(152, false);
				int LA152_1 = input.LA(1);

				if ((LA152_1==37))
				{
					alt152 = 1;
				}
				else if ((LA152_1==41))
				{
					alt152 = 2;
				}
				} finally { DebugExitDecision(152); }
				switch (alt152)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:748:28: '++'
					{
					DebugLocation(748, 28);
					string_literal518=(IToken)Match(input,37,Follow._37_in_unaryExpressionNotPlusMinus5467); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal518_tree = (object)adaptor.Create(string_literal518);
					adaptor.AddChild(root_0, string_literal518_tree);
					}
					DebugLocation(748, 33);
					if (state.backtracking == 0)
					{
						s("++");
					}

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:748:44: '--'
					{
					DebugLocation(748, 44);
					string_literal519=(IToken)Match(input,41,Follow._41_in_unaryExpressionNotPlusMinus5471); if (state.failed) return retval;
					if (state.backtracking == 0) {
					string_literal519_tree = (object)adaptor.Create(string_literal519);
					adaptor.AddChild(root_0, string_literal519_tree);
					}
					DebugLocation(748, 49);
					if (state.backtracking == 0)
					{
						s("--");
					}

					}
					break;

				}
				} finally { DebugExitSubRule(152); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("unaryExpressionNotPlusMinus", 122);
			LeaveRule("unaryExpressionNotPlusMinus", 122);
			LeaveRule_unaryExpressionNotPlusMinus();
			if (state.backtracking > 0) { Memoize(input, 122, unaryExpressionNotPlusMinus_StartIndex); }

		}
		DebugLocation(749, 4);
		} finally { DebugExitRule(GrammarFileName, "unaryExpressionNotPlusMinus"); }
		return retval;

	}
	// $ANTLR end "unaryExpressionNotPlusMinus"

	partial void EnterRule_castExpression();
	partial void LeaveRule_castExpression();
	// $ANTLR start "castExpression"
	// JavaJava.g3:751:1: castExpression : ( '(' primitiveType ')' unaryExpression | '(' ( type | expression ) ')' unaryExpressionNotPlusMinus );
	[GrammarRule("castExpression")]
	private AstParserRuleReturnScope<object, IToken> castExpression()
	{
		EnterRule_castExpression();
		EnterRule("castExpression", 123);
		TraceIn("castExpression", 123);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int castExpression_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal520 = default(IToken);
		IToken char_literal522 = default(IToken);
		IToken char_literal524 = default(IToken);
		IToken char_literal527 = default(IToken);
		AstParserRuleReturnScope<object, IToken> primitiveType521 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpression523 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> type525 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression526 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> unaryExpressionNotPlusMinus528 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal520_tree = default(object);
		object char_literal522_tree = default(object);
		object char_literal524_tree = default(object);
		object char_literal527_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "castExpression");
		DebugLocation(751, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 123)) { return retval; }

			// JavaJava.g3:752:5: ( '(' primitiveType ')' unaryExpression | '(' ( type | expression ) ')' unaryExpressionNotPlusMinus )
			int alt155=2;
			try { DebugEnterDecision(155, false);
			int LA155_1 = input.LA(1);

			if ((LA155_1==32))
			{
				int LA155_2 = input.LA(2);

				if ((EvaluatePredicate(synpred233_JavaJava_fragment)))
				{
					alt155 = 1;
				}
				else if ((true))
				{
					alt155 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 155, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 155, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(155); }
			switch (alt155)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:752:8: '(' primitiveType ')' unaryExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(752, 8);
				char_literal520=(IToken)Match(input,32,Follow._32_in_castExpression5493); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal520_tree = (object)adaptor.Create(char_literal520);
				adaptor.AddChild(root_0, char_literal520_tree);
				}
				DebugLocation(752, 11);
				if (state.backtracking == 0)
				{
					s("(");
				}
				DebugLocation(752, 21);
				PushFollow(Follow._primitiveType_in_castExpression5496);
				primitiveType521=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType521.Tree);
				DebugLocation(752, 35);
				char_literal522=(IToken)Match(input,33,Follow._33_in_castExpression5498); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal522_tree = (object)adaptor.Create(char_literal522);
				adaptor.AddChild(root_0, char_literal522_tree);
				}
				DebugLocation(752, 39);
				PushFollow(Follow._unaryExpression_in_castExpression5500);
				unaryExpression523=unaryExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpression523.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:753:8: '(' ( type | expression ) ')' unaryExpressionNotPlusMinus
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(753, 8);
				char_literal524=(IToken)Match(input,32,Follow._32_in_castExpression5509); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal524_tree = (object)adaptor.Create(char_literal524);
				adaptor.AddChild(root_0, char_literal524_tree);
				}
				DebugLocation(753, 11);
				if (state.backtracking == 0)
				{
					s("(");
				}
				DebugLocation(753, 21);
				// JavaJava.g3:753:21: ( type | expression )
				int alt154=2;
				try { DebugEnterSubRule(154);
				try { DebugEnterDecision(154, false);
				try
				{
					alt154 = dfa154.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(154); }
				switch (alt154)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:753:22: type
					{
					DebugLocation(753, 22);
					PushFollow(Follow._type_in_castExpression5513);
					type525=type();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, type525.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:753:29: expression
					{
					DebugLocation(753, 29);
					PushFollow(Follow._expression_in_castExpression5517);
					expression526=expression();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, expression526.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(154); }

				DebugLocation(753, 41);
				char_literal527=(IToken)Match(input,33,Follow._33_in_castExpression5520); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal527_tree = (object)adaptor.Create(char_literal527);
				adaptor.AddChild(root_0, char_literal527_tree);
				}
				DebugLocation(753, 45);
				PushFollow(Follow._unaryExpressionNotPlusMinus_in_castExpression5522);
				unaryExpressionNotPlusMinus528=unaryExpressionNotPlusMinus();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, unaryExpressionNotPlusMinus528.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("castExpression", 123);
			LeaveRule("castExpression", 123);
			LeaveRule_castExpression();
			if (state.backtracking > 0) { Memoize(input, 123, castExpression_StartIndex); }

		}
		DebugLocation(754, 4);
		} finally { DebugExitRule(GrammarFileName, "castExpression"); }
		return retval;

	}
	// $ANTLR end "castExpression"

	partial void EnterRule_primary();
	partial void LeaveRule_primary();
	// $ANTLR start "primary"
	// JavaJava.g3:756:1: primary : ( parExpression | 'this' ( '.' Identifier )* ( identifierSuffix )? | 'super' superSuffix | literal | 'new' creator |I1= Identifier ( '.' I4= Identifier )* ( identifierSuffix )? | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' );
	[GrammarRule("primary")]
	private AstParserRuleReturnScope<object, IToken> primary()
	{
		EnterRule_primary();
		EnterRule("primary", 124);
		TraceIn("primary", 124);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int primary_StartIndex = input.Index;

		object root_0 = default(object);

		IToken I1 = default(IToken);
		IToken I4 = default(IToken);
		IToken string_literal530 = default(IToken);
		IToken char_literal531 = default(IToken);
		IToken Identifier532 = default(IToken);
		IToken string_literal534 = default(IToken);
		IToken string_literal537 = default(IToken);
		IToken char_literal539 = default(IToken);
		IToken char_literal542 = default(IToken);
		IToken char_literal543 = default(IToken);
		IToken char_literal544 = default(IToken);
		IToken string_literal545 = default(IToken);
		IToken string_literal546 = default(IToken);
		IToken char_literal547 = default(IToken);
		IToken string_literal548 = default(IToken);
		AstParserRuleReturnScope<object, IToken> parExpression529 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> identifierSuffix533 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> superSuffix535 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> literal536 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> creator538 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> identifierSuffix540 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> primitiveType541 = default(AstParserRuleReturnScope<object, IToken>);

		object I1_tree = default(object);
		object I4_tree = default(object);
		object string_literal530_tree = default(object);
		object char_literal531_tree = default(object);
		object Identifier532_tree = default(object);
		object string_literal534_tree = default(object);
		object string_literal537_tree = default(object);
		object char_literal539_tree = default(object);
		object char_literal542_tree = default(object);
		object char_literal543_tree = default(object);
		object char_literal544_tree = default(object);
		object string_literal545_tree = default(object);
		object string_literal546_tree = default(object);
		object char_literal547_tree = default(object);
		object string_literal548_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "primary");
		DebugLocation(756, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 124)) { return retval; }

			// JavaJava.g3:757:5: ( parExpression | 'this' ( '.' Identifier )* ( identifierSuffix )? | 'super' superSuffix | literal | 'new' creator |I1= Identifier ( '.' I4= Identifier )* ( identifierSuffix )? | primitiveType ( '[' ']' )* '.' 'class' | 'void' '.' 'class' )
			int alt161=8;
			try { DebugEnterDecision(161, false);
			switch (input.LA(1))
			{
			case 32:
				{
				alt161 = 1;
				}
				break;
			case 99:
				{
				alt161 = 2;
				}
				break;
			case 96:
				{
				alt161 = 3;
				}
				break;
			case CharacterLiteral:
			case DecimalLiteral:
			case FloatingPointLiteral:
			case HexLiteral:
			case OctalLiteral:
			case StringLiteral:
			case 73:
			case 87:
			case 103:
				{
				alt161 = 4;
				}
				break;
			case 86:
				{
				alt161 = 5;
				}
				break;
			case Identifier:
				{
				alt161 = 6;
				}
				break;
			case 60:
			case 62:
			case 65:
			case 70:
			case 76:
			case 82:
			case 84:
			case 93:
				{
				alt161 = 7;
				}
				break;
			case 105:
				{
				alt161 = 8;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 161, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(161); }
			switch (alt161)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:757:9: parExpression
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(757, 9);
				PushFollow(Follow._parExpression_in_primary5541);
				parExpression529=parExpression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, parExpression529.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:758:9: 'this' ( '.' Identifier )* ( identifierSuffix )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(758, 9);
				string_literal530=(IToken)Match(input,99,Follow._99_in_primary5551); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal530_tree = (object)adaptor.Create(string_literal530);
				adaptor.AddChild(root_0, string_literal530_tree);
				}
				DebugLocation(758, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("this");
				}
				DebugLocation(758, 72);
				// JavaJava.g3:758:72: ( '.' Identifier )*
				try { DebugEnterSubRule(156);
				while (true)
				{
					int alt156=2;
					try { DebugEnterDecision(156, false);
					int LA156_1 = input.LA(1);

					if ((LA156_1==43))
					{
						int LA156_2 = input.LA(2);

						if ((LA156_2==Identifier))
						{
							int LA156_3 = input.LA(3);

							if ((EvaluatePredicate(synpred236_JavaJava_fragment)))
							{
								alt156 = 1;
							}


						}


					}


					} finally { DebugExitDecision(156); }
					switch ( alt156 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:758:73: '.' Identifier
						{
						DebugLocation(758, 73);
						char_literal531=(IToken)Match(input,43,Follow._43_in_primary5555); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal531_tree = (object)adaptor.Create(char_literal531);
						adaptor.AddChild(root_0, char_literal531_tree);
						}
						DebugLocation(758, 77);
						if (state.backtracking == 0)
						{
							s(".");
						}
						DebugLocation(758, 87);
						Identifier532=(IToken)Match(input,Identifier,Follow._Identifier_in_primary5559); if (state.failed) return retval;
						if (state.backtracking == 0) {
						Identifier532_tree = (object)adaptor.Create(Identifier532);
						adaptor.AddChild(root_0, Identifier532_tree);
						}

						}
						break;

					default:
						goto loop156;
					}
				}

				loop156:
					;

				} finally { DebugExitSubRule(156); }

				DebugLocation(758, 100);
				// JavaJava.g3:758:100: ( identifierSuffix )?
				int alt157=2;
				try { DebugEnterSubRule(157);
				try { DebugEnterDecision(157, false);
				switch (input.LA(1))
				{
				case 55:
					{
					int LA157_2 = input.LA(2);

					if ((EvaluatePredicate(synpred237_JavaJava_fragment)))
					{
						alt157 = 1;
					}
					}
					break;
				case 32:
					{
					alt157 = 1;
					}
					break;
				case 43:
					{
					int LA157_2 = input.LA(2);

					if ((EvaluatePredicate(synpred237_JavaJava_fragment)))
					{
						alt157 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(157); }
				switch (alt157)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:758:100: identifierSuffix
					{
					DebugLocation(758, 100);
					PushFollow(Follow._identifierSuffix_in_primary5563);
					identifierSuffix533=identifierSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifierSuffix533.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(157); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:759:9: 'super' superSuffix
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(759, 9);
				string_literal534=(IToken)Match(input,96,Follow._96_in_primary5575); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal534_tree = (object)adaptor.Create(string_literal534);
				adaptor.AddChild(root_0, string_literal534_tree);
				}
				DebugLocation(759, 16);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("super");
				}
				DebugLocation(759, 74);
				PushFollow(Follow._superSuffix_in_primary5578);
				superSuffix535=superSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, superSuffix535.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:760:9: literal
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(760, 9);
				PushFollow(Follow._literal_in_primary5588);
				literal536=literal();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, literal536.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:761:9: 'new' creator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(761, 9);
				string_literal537=(IToken)Match(input,86,Follow._86_in_primary5598); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal537_tree = (object)adaptor.Create(string_literal537);
				adaptor.AddChild(root_0, string_literal537_tree);
				}
				DebugLocation(761, 14);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("new");
				}
				DebugLocation(761, 70);
				PushFollow(Follow._creator_in_primary5601);
				creator538=creator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, creator538.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:762:9: I1= Identifier ( '.' I4= Identifier )* ( identifierSuffix )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(762, 11);
				I1=(IToken)Match(input,Identifier,Follow._Identifier_in_primary5613); if (state.failed) return retval;
				if (state.backtracking == 0) {
				I1_tree = (object)adaptor.Create(I1);
				adaptor.AddChild(root_0, I1_tree);
				}
				DebugLocation(762, 23);
				id((I1!=null?I1.Text:default(string)));
				DebugLocation(762, 41);
				// JavaJava.g3:762:41: ( '.' I4= Identifier )*
				try { DebugEnterSubRule(158);
				while (true)
				{
					int alt158=2;
					try { DebugEnterDecision(158, false);
					int LA158_1 = input.LA(1);

					if ((LA158_1==43))
					{
						int LA158_2 = input.LA(2);

						if ((LA158_2==Identifier))
						{
							int LA158_3 = input.LA(3);

							if ((EvaluatePredicate(synpred242_JavaJava_fragment)))
							{
								alt158 = 1;
							}


						}


					}


					} finally { DebugExitDecision(158); }
					switch ( alt158 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:762:42: '.' I4= Identifier
						{
						DebugLocation(762, 42);
						char_literal539=(IToken)Match(input,43,Follow._43_in_primary5618); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal539_tree = (object)adaptor.Create(char_literal539);
						adaptor.AddChild(root_0, char_literal539_tree);
						}
						DebugLocation(762, 46);
						if (state.backtracking == 0)
						{
							s(".");
						}
						DebugLocation(762, 58);
						I4=(IToken)Match(input,Identifier,Follow._Identifier_in_primary5624); if (state.failed) return retval;
						if (state.backtracking == 0) {
						I4_tree = (object)adaptor.Create(I4);
						adaptor.AddChild(root_0, I4_tree);
						}

						}
						break;

					default:
						goto loop158;
					}
				}

				loop158:
					;

				} finally { DebugExitSubRule(158); }

				DebugLocation(762, 73);
				// JavaJava.g3:762:73: ( identifierSuffix )?
				int alt159=2;
				try { DebugEnterSubRule(159);
				try { DebugEnterDecision(159, false);
				switch (input.LA(1))
				{
				case 55:
					{
					int LA159_2 = input.LA(2);

					if ((EvaluatePredicate(synpred243_JavaJava_fragment)))
					{
						alt159 = 1;
					}
					}
					break;
				case 32:
					{
					alt159 = 1;
					}
					break;
				case 43:
					{
					int LA159_2 = input.LA(2);

					if ((EvaluatePredicate(synpred243_JavaJava_fragment)))
					{
						alt159 = 1;
					}
					}
					break;
				}

				} finally { DebugExitDecision(159); }
				switch (alt159)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:762:73: identifierSuffix
					{
					DebugLocation(762, 73);
					PushFollow(Follow._identifierSuffix_in_primary5629);
					identifierSuffix540=identifierSuffix();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, identifierSuffix540.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(159); }


				}
				break;
			case 7:
				DebugEnterAlt(7);
				// JavaJava.g3:763:9: primitiveType ( '[' ']' )* '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(763, 9);
				PushFollow(Follow._primitiveType_in_primary5641);
				primitiveType541=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType541.Tree);
				DebugLocation(763, 23);
				// JavaJava.g3:763:23: ( '[' ']' )*
				try { DebugEnterSubRule(160);
				while (true)
				{
					int alt160=2;
					try { DebugEnterDecision(160, false);
					int LA160_1 = input.LA(1);

					if ((LA160_1==55))
					{
						alt160 = 1;
					}


					} finally { DebugExitDecision(160); }
					switch ( alt160 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:763:24: '[' ']'
						{
						DebugLocation(763, 24);
						char_literal542=(IToken)Match(input,55,Follow._55_in_primary5644); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal542_tree = (object)adaptor.Create(char_literal542);
						adaptor.AddChild(root_0, char_literal542_tree);
						}
						DebugLocation(763, 27);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(763, 37);
						char_literal543=(IToken)Match(input,56,Follow._56_in_primary5647); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal543_tree = (object)adaptor.Create(char_literal543);
						adaptor.AddChild(root_0, char_literal543_tree);
						}
						DebugLocation(763, 40);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						goto loop160;
					}
				}

				loop160:
					;

				} finally { DebugExitSubRule(160); }

				DebugLocation(763, 52);
				char_literal544=(IToken)Match(input,43,Follow._43_in_primary5652); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal544_tree = (object)adaptor.Create(char_literal544);
				adaptor.AddChild(root_0, char_literal544_tree);
				}
				DebugLocation(763, 56);
				string_literal545=(IToken)Match(input,66,Follow._66_in_primary5654); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal545_tree = (object)adaptor.Create(string_literal545);
				adaptor.AddChild(root_0, string_literal545_tree);
				}
				DebugLocation(763, 64);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("class");
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// JavaJava.g3:764:9: 'void' '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(764, 9);
				string_literal546=(IToken)Match(input,105,Follow._105_in_primary5666); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal546_tree = (object)adaptor.Create(string_literal546);
				adaptor.AddChild(root_0, string_literal546_tree);
				}
				DebugLocation(764, 15);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("void");
				}
				DebugLocation(764, 72);
				char_literal547=(IToken)Match(input,43,Follow._43_in_primary5669); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal547_tree = (object)adaptor.Create(char_literal547);
				adaptor.AddChild(root_0, char_literal547_tree);
				}
				DebugLocation(764, 76);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(764, 86);
				string_literal548=(IToken)Match(input,66,Follow._66_in_primary5673); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal548_tree = (object)adaptor.Create(string_literal548);
				adaptor.AddChild(root_0, string_literal548_tree);
				}
				DebugLocation(764, 93);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("class");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("primary", 124);
			LeaveRule("primary", 124);
			LeaveRule_primary();
			if (state.backtracking > 0) { Memoize(input, 124, primary_StartIndex); }

		}
		DebugLocation(765, 4);
		} finally { DebugExitRule(GrammarFileName, "primary"); }
		return retval;

	}
	// $ANTLR end "primary"

	partial void EnterRule_identifierSuffix();
	partial void LeaveRule_identifierSuffix();
	// $ANTLR start "identifierSuffix"
	// JavaJava.g3:767:1: identifierSuffix : ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' explicitGenericInvocation | '.' 'this' | '.' 'super' arguments | '.' 'new' innerCreator );
	[GrammarRule("identifierSuffix")]
	private AstParserRuleReturnScope<object, IToken> identifierSuffix()
	{
		EnterRule_identifierSuffix();
		EnterRule("identifierSuffix", 125);
		TraceIn("identifierSuffix", 125);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int identifierSuffix_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal549 = default(IToken);
		IToken char_literal550 = default(IToken);
		IToken char_literal551 = default(IToken);
		IToken string_literal552 = default(IToken);
		IToken char_literal553 = default(IToken);
		IToken char_literal555 = default(IToken);
		IToken char_literal557 = default(IToken);
		IToken string_literal558 = default(IToken);
		IToken char_literal559 = default(IToken);
		IToken char_literal561 = default(IToken);
		IToken string_literal562 = default(IToken);
		IToken char_literal563 = default(IToken);
		IToken string_literal564 = default(IToken);
		IToken char_literal566 = default(IToken);
		IToken string_literal567 = default(IToken);
		AstParserRuleReturnScope<object, IToken> expression554 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arguments556 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> explicitGenericInvocation560 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arguments565 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> innerCreator568 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal549_tree = default(object);
		object char_literal550_tree = default(object);
		object char_literal551_tree = default(object);
		object string_literal552_tree = default(object);
		object char_literal553_tree = default(object);
		object char_literal555_tree = default(object);
		object char_literal557_tree = default(object);
		object string_literal558_tree = default(object);
		object char_literal559_tree = default(object);
		object char_literal561_tree = default(object);
		object string_literal562_tree = default(object);
		object char_literal563_tree = default(object);
		object string_literal564_tree = default(object);
		object char_literal566_tree = default(object);
		object string_literal567_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "identifierSuffix");
		DebugLocation(767, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 125)) { return retval; }

			// JavaJava.g3:768:5: ( ( '[' ']' )+ '.' 'class' | ( '[' expression ']' )+ | arguments | '.' 'class' | '.' explicitGenericInvocation | '.' 'this' | '.' 'super' arguments | '.' 'new' innerCreator )
			int alt164=8;
			try { DebugEnterDecision(164, false);
			switch (input.LA(1))
			{
			case 55:
				{
				int LA164_2 = input.LA(2);

				if ((LA164_2==56))
				{
					alt164 = 1;
				}
				else if (((LA164_2>=CharacterLiteral && LA164_2<=DecimalLiteral)||LA164_2==FloatingPointLiteral||(LA164_2>=HexLiteral && LA164_2<=Identifier)||(LA164_2>=OctalLiteral && LA164_2<=StringLiteral)||LA164_2==25||LA164_2==32||(LA164_2>=36 && LA164_2<=37)||(LA164_2>=40 && LA164_2<=41)||LA164_2==60||LA164_2==62||LA164_2==65||LA164_2==70||LA164_2==73||LA164_2==76||LA164_2==82||LA164_2==84||(LA164_2>=86 && LA164_2<=87)||LA164_2==93||LA164_2==96||LA164_2==99||LA164_2==103||LA164_2==105||LA164_2==113))
				{
					alt164 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 164, 1, input, 2);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 32:
				{
				alt164 = 3;
				}
				break;
			case 43:
				{
				switch (input.LA(2))
				{
				case 66:
					{
					alt164 = 4;
					}
					break;
				case 49:
					{
					alt164 = 5;
					}
					break;
				case 99:
					{
					alt164 = 6;
					}
					break;
				case 96:
					{
					alt164 = 7;
					}
					break;
				case 86:
					{
					alt164 = 8;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 164, 3, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 164, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(164); }
			switch (alt164)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:768:9: ( '[' ']' )+ '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(768, 9);
				// JavaJava.g3:768:9: ( '[' ']' )+
				int cnt162=0;
				try { DebugEnterSubRule(162);
				while (true)
				{
					int alt162=2;
					try { DebugEnterDecision(162, false);
					int LA162_1 = input.LA(1);

					if ((LA162_1==55))
					{
						alt162 = 1;
					}


					} finally { DebugExitDecision(162); }
					switch (alt162)
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:768:10: '[' ']'
						{
						DebugLocation(768, 10);
						char_literal549=(IToken)Match(input,55,Follow._55_in_identifierSuffix5694); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal549_tree = (object)adaptor.Create(char_literal549);
						adaptor.AddChild(root_0, char_literal549_tree);
						}
						DebugLocation(768, 14);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(768, 24);
						char_literal550=(IToken)Match(input,56,Follow._56_in_identifierSuffix5698); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal550_tree = (object)adaptor.Create(char_literal550);
						adaptor.AddChild(root_0, char_literal550_tree);
						}
						DebugLocation(768, 28);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						if (cnt162 >= 1)
							goto loop162;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee162 = new EarlyExitException( 162, input );
						DebugRecognitionException(eee162);
						throw eee162;
					}
					cnt162++;
				}
				loop162:
					;

				} finally { DebugExitSubRule(162); }

				DebugLocation(768, 40);
				char_literal551=(IToken)Match(input,43,Follow._43_in_identifierSuffix5704); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal551_tree = (object)adaptor.Create(char_literal551);
				adaptor.AddChild(root_0, char_literal551_tree);
				}
				DebugLocation(768, 44);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(768, 54);
				string_literal552=(IToken)Match(input,66,Follow._66_in_identifierSuffix5708); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal552_tree = (object)adaptor.Create(string_literal552);
				adaptor.AddChild(root_0, string_literal552_tree);
				}
				DebugLocation(768, 61);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("class");
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:769:9: ( '[' expression ']' )+
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(769, 9);
				// JavaJava.g3:769:9: ( '[' expression ']' )+
				int cnt163=0;
				try { DebugEnterSubRule(163);
				while (true)
				{
					int alt163=2;
					try { DebugEnterDecision(163, false);
					int LA163_1 = input.LA(1);

					if ((LA163_1==55))
					{
						int LA163_2 = input.LA(2);

						if ((EvaluatePredicate(synpred249_JavaJava_fragment)))
						{
							alt163 = 1;
						}


					}


					} finally { DebugExitDecision(163); }
					switch (alt163)
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:769:10: '[' expression ']'
						{
						DebugLocation(769, 10);
						char_literal553=(IToken)Match(input,55,Follow._55_in_identifierSuffix5720); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal553_tree = (object)adaptor.Create(char_literal553);
						adaptor.AddChild(root_0, char_literal553_tree);
						}
						DebugLocation(769, 14);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(769, 24);
						PushFollow(Follow._expression_in_identifierSuffix5724);
						expression554=expression();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, expression554.Tree);
						DebugLocation(769, 35);
						char_literal555=(IToken)Match(input,56,Follow._56_in_identifierSuffix5726); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal555_tree = (object)adaptor.Create(char_literal555);
						adaptor.AddChild(root_0, char_literal555_tree);
						}
						DebugLocation(769, 39);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						if (cnt163 >= 1)
							goto loop163;

						if (state.backtracking>0) {state.failed=true; return retval;}
						EarlyExitException eee163 = new EarlyExitException( 163, input );
						DebugRecognitionException(eee163);
						throw eee163;
					}
					cnt163++;
				}
				loop163:
					;

				} finally { DebugExitSubRule(163); }


				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:770:9: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(770, 9);
				PushFollow(Follow._arguments_in_identifierSuffix5741);
				arguments556=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments556.Tree);

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:771:9: '.' 'class'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(771, 9);
				char_literal557=(IToken)Match(input,43,Follow._43_in_identifierSuffix5752); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal557_tree = (object)adaptor.Create(char_literal557);
				adaptor.AddChild(root_0, char_literal557_tree);
				}
				DebugLocation(771, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(771, 23);
				string_literal558=(IToken)Match(input,66,Follow._66_in_identifierSuffix5756); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal558_tree = (object)adaptor.Create(string_literal558);
				adaptor.AddChild(root_0, string_literal558_tree);
				}
				DebugLocation(771, 30);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("class");
				}

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:772:9: '.' explicitGenericInvocation
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(772, 9);
				char_literal559=(IToken)Match(input,43,Follow._43_in_identifierSuffix5767); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal559_tree = (object)adaptor.Create(char_literal559);
				adaptor.AddChild(root_0, char_literal559_tree);
				}
				DebugLocation(772, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(772, 23);
				PushFollow(Follow._explicitGenericInvocation_in_identifierSuffix5771);
				explicitGenericInvocation560=explicitGenericInvocation();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, explicitGenericInvocation560.Tree);

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// JavaJava.g3:773:9: '.' 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(773, 9);
				char_literal561=(IToken)Match(input,43,Follow._43_in_identifierSuffix5781); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal561_tree = (object)adaptor.Create(char_literal561);
				adaptor.AddChild(root_0, char_literal561_tree);
				}
				DebugLocation(773, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(773, 23);
				string_literal562=(IToken)Match(input,99,Follow._99_in_identifierSuffix5785); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal562_tree = (object)adaptor.Create(string_literal562);
				adaptor.AddChild(root_0, string_literal562_tree);
				}
				DebugLocation(773, 29);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("this");
				}

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// JavaJava.g3:774:9: '.' 'super' arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(774, 9);
				char_literal563=(IToken)Match(input,43,Follow._43_in_identifierSuffix5796); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal563_tree = (object)adaptor.Create(char_literal563);
				adaptor.AddChild(root_0, char_literal563_tree);
				}
				DebugLocation(774, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(774, 23);
				string_literal564=(IToken)Match(input,96,Follow._96_in_identifierSuffix5800); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal564_tree = (object)adaptor.Create(string_literal564);
				adaptor.AddChild(root_0, string_literal564_tree);
				}
				DebugLocation(774, 31);
				PushFollow(Follow._arguments_in_identifierSuffix5802);
				arguments565=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments565.Tree);
				DebugLocation(774, 41);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("super");
				}

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// JavaJava.g3:775:9: '.' 'new' innerCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(775, 9);
				char_literal566=(IToken)Match(input,43,Follow._43_in_identifierSuffix5814); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal566_tree = (object)adaptor.Create(char_literal566);
				adaptor.AddChild(root_0, char_literal566_tree);
				}
				DebugLocation(775, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(775, 23);
				string_literal567=(IToken)Match(input,86,Follow._86_in_identifierSuffix5818); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal567_tree = (object)adaptor.Create(string_literal567);
				adaptor.AddChild(root_0, string_literal567_tree);
				}
				DebugLocation(775, 29);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("new");
				}
				DebugLocation(775, 84);
				PushFollow(Follow._innerCreator_in_identifierSuffix5821);
				innerCreator568=innerCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, innerCreator568.Tree);

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("identifierSuffix", 125);
			LeaveRule("identifierSuffix", 125);
			LeaveRule_identifierSuffix();
			if (state.backtracking > 0) { Memoize(input, 125, identifierSuffix_StartIndex); }

		}
		DebugLocation(776, 4);
		} finally { DebugExitRule(GrammarFileName, "identifierSuffix"); }
		return retval;

	}
	// $ANTLR end "identifierSuffix"

	partial void EnterRule_creator();
	partial void LeaveRule_creator();
	// $ANTLR start "creator"
	// JavaJava.g3:778:1: creator : ( nonWildcardTypeArguments createdName classCreatorRest | createdName ( arrayCreatorRest | classCreatorRest ) );
	[GrammarRule("creator")]
	private AstParserRuleReturnScope<object, IToken> creator()
	{
		EnterRule_creator();
		EnterRule("creator", 126);
		TraceIn("creator", 126);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int creator_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> nonWildcardTypeArguments569 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> createdName570 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classCreatorRest571 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> createdName572 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arrayCreatorRest573 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classCreatorRest574 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "creator");
		DebugLocation(778, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 126)) { return retval; }

			// JavaJava.g3:779:5: ( nonWildcardTypeArguments createdName classCreatorRest | createdName ( arrayCreatorRest | classCreatorRest ) )
			int alt166=2;
			try { DebugEnterDecision(166, false);
			int LA166_1 = input.LA(1);

			if ((LA166_1==49))
			{
				alt166 = 1;
			}
			else if ((LA166_1==Identifier||LA166_1==60||LA166_1==62||LA166_1==65||LA166_1==70||LA166_1==76||LA166_1==82||LA166_1==84||LA166_1==93))
			{
				alt166 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 166, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(166); }
			switch (alt166)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:779:9: nonWildcardTypeArguments createdName classCreatorRest
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(779, 9);
				PushFollow(Follow._nonWildcardTypeArguments_in_creator5840);
				nonWildcardTypeArguments569=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments569.Tree);
				DebugLocation(779, 34);
				PushFollow(Follow._createdName_in_creator5842);
				createdName570=createdName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, createdName570.Tree);
				DebugLocation(779, 46);
				PushFollow(Follow._classCreatorRest_in_creator5844);
				classCreatorRest571=classCreatorRest();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest571.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:780:9: createdName ( arrayCreatorRest | classCreatorRest )
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(780, 9);
				PushFollow(Follow._createdName_in_creator5854);
				createdName572=createdName();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, createdName572.Tree);
				DebugLocation(780, 21);
				// JavaJava.g3:780:21: ( arrayCreatorRest | classCreatorRest )
				int alt165=2;
				try { DebugEnterSubRule(165);
				try { DebugEnterDecision(165, false);
				int LA165_1 = input.LA(1);

				if ((LA165_1==55))
				{
					alt165 = 1;
				}
				else if ((LA165_1==32))
				{
					alt165 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return retval;}
					NoViableAltException nvae = new NoViableAltException("", 165, 0, input, 1);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				} finally { DebugExitDecision(165); }
				switch (alt165)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:780:22: arrayCreatorRest
					{
					DebugLocation(780, 22);
					PushFollow(Follow._arrayCreatorRest_in_creator5857);
					arrayCreatorRest573=arrayCreatorRest();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arrayCreatorRest573.Tree);

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// JavaJava.g3:780:41: classCreatorRest
					{
					DebugLocation(780, 41);
					PushFollow(Follow._classCreatorRest_in_creator5861);
					classCreatorRest574=classCreatorRest();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest574.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(165); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("creator", 126);
			LeaveRule("creator", 126);
			LeaveRule_creator();
			if (state.backtracking > 0) { Memoize(input, 126, creator_StartIndex); }

		}
		DebugLocation(781, 4);
		} finally { DebugExitRule(GrammarFileName, "creator"); }
		return retval;

	}
	// $ANTLR end "creator"

	partial void EnterRule_createdName();
	partial void LeaveRule_createdName();
	// $ANTLR start "createdName"
	// JavaJava.g3:783:1: createdName : ( classOrInterfaceType | primitiveType );
	[GrammarRule("createdName")]
	private AstParserRuleReturnScope<object, IToken> createdName()
	{
		EnterRule_createdName();
		EnterRule("createdName", 127);
		TraceIn("createdName", 127);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int createdName_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> classOrInterfaceType575 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> primitiveType576 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "createdName");
		DebugLocation(783, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 127)) { return retval; }

			// JavaJava.g3:784:5: ( classOrInterfaceType | primitiveType )
			int alt167=2;
			try { DebugEnterDecision(167, false);
			int LA167_1 = input.LA(1);

			if ((LA167_1==Identifier))
			{
				alt167 = 1;
			}
			else if ((LA167_1==60||LA167_1==62||LA167_1==65||LA167_1==70||LA167_1==76||LA167_1==82||LA167_1==84||LA167_1==93))
			{
				alt167 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 167, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(167); }
			switch (alt167)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:784:8: classOrInterfaceType
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(784, 8);
				if (state.backtracking == 0)
				{
					constructorcall=true;
				}
				DebugLocation(784, 33);
				PushFollow(Follow._classOrInterfaceType_in_createdName5883);
				classOrInterfaceType575=classOrInterfaceType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classOrInterfaceType575.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:785:9: primitiveType
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(785, 9);
				PushFollow(Follow._primitiveType_in_createdName5893);
				primitiveType576=primitiveType();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, primitiveType576.Tree);
				DebugLocation(785, 23);
				if (state.backtracking == 0)
				{
					primitive = true;
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("createdName", 127);
			LeaveRule("createdName", 127);
			LeaveRule_createdName();
			if (state.backtracking > 0) { Memoize(input, 127, createdName_StartIndex); }

		}
		DebugLocation(786, 4);
		} finally { DebugExitRule(GrammarFileName, "createdName"); }
		return retval;

	}
	// $ANTLR end "createdName"

	partial void EnterRule_innerCreator();
	partial void LeaveRule_innerCreator();
	// $ANTLR start "innerCreator"
	// JavaJava.g3:788:1: innerCreator : ( nonWildcardTypeArguments )? Identifier classCreatorRest ;
	[GrammarRule("innerCreator")]
	private AstParserRuleReturnScope<object, IToken> innerCreator()
	{
		EnterRule_innerCreator();
		EnterRule("innerCreator", 128);
		TraceIn("innerCreator", 128);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int innerCreator_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier578 = default(IToken);
		AstParserRuleReturnScope<object, IToken> nonWildcardTypeArguments577 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classCreatorRest579 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier578_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "innerCreator");
		DebugLocation(788, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 128)) { return retval; }

			// JavaJava.g3:789:5: ( ( nonWildcardTypeArguments )? Identifier classCreatorRest )
			DebugEnterAlt(1);
			// JavaJava.g3:789:9: ( nonWildcardTypeArguments )? Identifier classCreatorRest
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(789, 9);
			// JavaJava.g3:789:9: ( nonWildcardTypeArguments )?
			int alt168=2;
			try { DebugEnterSubRule(168);
			try { DebugEnterDecision(168, false);
			int LA168_1 = input.LA(1);

			if ((LA168_1==49))
			{
				alt168 = 1;
			}
			} finally { DebugExitDecision(168); }
			switch (alt168)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:789:9: nonWildcardTypeArguments
				{
				DebugLocation(789, 9);
				PushFollow(Follow._nonWildcardTypeArguments_in_innerCreator5918);
				nonWildcardTypeArguments577=nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments577.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(168); }

			DebugLocation(789, 35);
			Identifier578=(IToken)Match(input,Identifier,Follow._Identifier_in_innerCreator5921); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier578_tree = (object)adaptor.Create(Identifier578);
			adaptor.AddChild(root_0, Identifier578_tree);
			}
			DebugLocation(789, 46);
			PushFollow(Follow._classCreatorRest_in_innerCreator5923);
			classCreatorRest579=classCreatorRest();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, classCreatorRest579.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("innerCreator", 128);
			LeaveRule("innerCreator", 128);
			LeaveRule_innerCreator();
			if (state.backtracking > 0) { Memoize(input, 128, innerCreator_StartIndex); }

		}
		DebugLocation(790, 4);
		} finally { DebugExitRule(GrammarFileName, "innerCreator"); }
		return retval;

	}
	// $ANTLR end "innerCreator"

	partial void EnterRule_arrayCreatorRest();
	partial void LeaveRule_arrayCreatorRest();
	// $ANTLR start "arrayCreatorRest"
	// JavaJava.g3:792:1: arrayCreatorRest : '[' ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* ) ;
	[GrammarRule("arrayCreatorRest")]
	private AstParserRuleReturnScope<object, IToken> arrayCreatorRest()
	{
		EnterRule_arrayCreatorRest();
		EnterRule("arrayCreatorRest", 129);
		TraceIn("arrayCreatorRest", 129);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int arrayCreatorRest_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal580 = default(IToken);
		IToken char_literal581 = default(IToken);
		IToken char_literal582 = default(IToken);
		IToken char_literal583 = default(IToken);
		IToken char_literal586 = default(IToken);
		IToken char_literal587 = default(IToken);
		IToken char_literal589 = default(IToken);
		IToken char_literal590 = default(IToken);
		IToken char_literal591 = default(IToken);
		AstParserRuleReturnScope<object, IToken> arrayInitializer584 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression585 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression588 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal580_tree = default(object);
		object char_literal581_tree = default(object);
		object char_literal582_tree = default(object);
		object char_literal583_tree = default(object);
		object char_literal586_tree = default(object);
		object char_literal587_tree = default(object);
		object char_literal589_tree = default(object);
		object char_literal590_tree = default(object);
		object char_literal591_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arrayCreatorRest");
		DebugLocation(792, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 129)) { return retval; }

			// JavaJava.g3:793:5: ( '[' ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* ) )
			DebugEnterAlt(1);
			// JavaJava.g3:793:9: '[' ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* )
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(793, 9);
			char_literal580=(IToken)Match(input,55,Follow._55_in_arrayCreatorRest5942); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal580_tree = (object)adaptor.Create(char_literal580);
			adaptor.AddChild(root_0, char_literal580_tree);
			}
			DebugLocation(793, 12);
			if (state.backtracking == 0)
			{
				s("[");
			}
			DebugLocation(794, 9);
			// JavaJava.g3:794:9: ( ']' ( '[' ']' )* arrayInitializer | expression ']' ( '[' expression ']' )* ( '[' ']' )* )
			int alt172=2;
			try { DebugEnterSubRule(172);
			try { DebugEnterDecision(172, false);
			int LA172_1 = input.LA(1);

			if ((LA172_1==56))
			{
				alt172 = 1;
			}
			else if (((LA172_1>=CharacterLiteral && LA172_1<=DecimalLiteral)||LA172_1==FloatingPointLiteral||(LA172_1>=HexLiteral && LA172_1<=Identifier)||(LA172_1>=OctalLiteral && LA172_1<=StringLiteral)||LA172_1==25||LA172_1==32||(LA172_1>=36 && LA172_1<=37)||(LA172_1>=40 && LA172_1<=41)||LA172_1==60||LA172_1==62||LA172_1==65||LA172_1==70||LA172_1==73||LA172_1==76||LA172_1==82||LA172_1==84||(LA172_1>=86 && LA172_1<=87)||LA172_1==93||LA172_1==96||LA172_1==99||LA172_1==103||LA172_1==105||LA172_1==113))
			{
				alt172 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 172, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(172); }
			switch (alt172)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:794:13: ']' ( '[' ']' )* arrayInitializer
				{
				DebugLocation(794, 13);
				char_literal581=(IToken)Match(input,56,Follow._56_in_arrayCreatorRest5957); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal581_tree = (object)adaptor.Create(char_literal581);
				adaptor.AddChild(root_0, char_literal581_tree);
				}
				DebugLocation(794, 17);
				// JavaJava.g3:794:17: ( '[' ']' )*
				try { DebugEnterSubRule(169);
				while (true)
				{
					int alt169=2;
					try { DebugEnterDecision(169, false);
					int LA169_1 = input.LA(1);

					if ((LA169_1==55))
					{
						alt169 = 1;
					}


					} finally { DebugExitDecision(169); }
					switch ( alt169 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:794:18: '[' ']'
						{
						DebugLocation(794, 18);
						char_literal582=(IToken)Match(input,55,Follow._55_in_arrayCreatorRest5960); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal582_tree = (object)adaptor.Create(char_literal582);
						adaptor.AddChild(root_0, char_literal582_tree);
						}
						DebugLocation(794, 21);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(794, 31);
						char_literal583=(IToken)Match(input,56,Follow._56_in_arrayCreatorRest5963); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal583_tree = (object)adaptor.Create(char_literal583);
						adaptor.AddChild(root_0, char_literal583_tree);
						}
						DebugLocation(794, 35);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						goto loop169;
					}
				}

				loop169:
					;

				} finally { DebugExitSubRule(169); }

				DebugLocation(794, 47);
				PushFollow(Follow._arrayInitializer_in_arrayCreatorRest5969);
				arrayInitializer584=arrayInitializer();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arrayInitializer584.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:795:13: expression ']' ( '[' expression ']' )* ( '[' ']' )*
				{
				DebugLocation(795, 13);
				PushFollow(Follow._expression_in_arrayCreatorRest5983);
				expression585=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression585.Tree);
				DebugLocation(795, 24);
				char_literal586=(IToken)Match(input,56,Follow._56_in_arrayCreatorRest5985); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal586_tree = (object)adaptor.Create(char_literal586);
				adaptor.AddChild(root_0, char_literal586_tree);
				}
				DebugLocation(795, 28);
				if (state.backtracking == 0)
				{
					s("]");
				}
				DebugLocation(795, 38);
				// JavaJava.g3:795:38: ( '[' expression ']' )*
				try { DebugEnterSubRule(170);
				while (true)
				{
					int alt170=2;
					try { DebugEnterDecision(170, false);
					int LA170_1 = input.LA(1);

					if ((LA170_1==55))
					{
						int LA170_2 = input.LA(2);

						if ((EvaluatePredicate(synpred262_JavaJava_fragment)))
						{
							alt170 = 1;
						}


					}


					} finally { DebugExitDecision(170); }
					switch ( alt170 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:795:39: '[' expression ']'
						{
						DebugLocation(795, 39);
						char_literal587=(IToken)Match(input,55,Follow._55_in_arrayCreatorRest5990); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal587_tree = (object)adaptor.Create(char_literal587);
						adaptor.AddChild(root_0, char_literal587_tree);
						}
						DebugLocation(795, 42);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(795, 52);
						PushFollow(Follow._expression_in_arrayCreatorRest5993);
						expression588=expression();
						PopFollow();
						if (state.failed) return retval;
						if (state.backtracking == 0) adaptor.AddChild(root_0, expression588.Tree);
						DebugLocation(795, 63);
						char_literal589=(IToken)Match(input,56,Follow._56_in_arrayCreatorRest5995); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal589_tree = (object)adaptor.Create(char_literal589);
						adaptor.AddChild(root_0, char_literal589_tree);
						}
						DebugLocation(795, 67);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						goto loop170;
					}
				}

				loop170:
					;

				} finally { DebugExitSubRule(170); }

				DebugLocation(795, 79);
				// JavaJava.g3:795:79: ( '[' ']' )*
				try { DebugEnterSubRule(171);
				while (true)
				{
					int alt171=2;
					try { DebugEnterDecision(171, false);
					int LA171_1 = input.LA(1);

					if ((LA171_1==55))
					{
						int LA171_2 = input.LA(2);

						if ((LA171_2==56))
						{
							alt171 = 1;
						}


					}


					} finally { DebugExitDecision(171); }
					switch ( alt171 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:795:80: '[' ']'
						{
						DebugLocation(795, 80);
						char_literal590=(IToken)Match(input,55,Follow._55_in_arrayCreatorRest6002); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal590_tree = (object)adaptor.Create(char_literal590);
						adaptor.AddChild(root_0, char_literal590_tree);
						}
						DebugLocation(795, 83);
						if (state.backtracking == 0)
						{
							s("[");
						}
						DebugLocation(795, 93);
						char_literal591=(IToken)Match(input,56,Follow._56_in_arrayCreatorRest6005); if (state.failed) return retval;
						if (state.backtracking == 0) {
						char_literal591_tree = (object)adaptor.Create(char_literal591);
						adaptor.AddChild(root_0, char_literal591_tree);
						}
						DebugLocation(795, 96);
						if (state.backtracking == 0)
						{
							s("]");
						}

						}
						break;

					default:
						goto loop171;
					}
				}

				loop171:
					;

				} finally { DebugExitSubRule(171); }


				}
				break;

			}
			} finally { DebugExitSubRule(172); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arrayCreatorRest", 129);
			LeaveRule("arrayCreatorRest", 129);
			LeaveRule_arrayCreatorRest();
			if (state.backtracking > 0) { Memoize(input, 129, arrayCreatorRest_StartIndex); }

		}
		DebugLocation(797, 4);
		} finally { DebugExitRule(GrammarFileName, "arrayCreatorRest"); }
		return retval;

	}
	// $ANTLR end "arrayCreatorRest"

	partial void EnterRule_classCreatorRest();
	partial void LeaveRule_classCreatorRest();
	// $ANTLR start "classCreatorRest"
	// JavaJava.g3:799:1: classCreatorRest : arguments ( classBody )? ;
	[GrammarRule("classCreatorRest")]
	private AstParserRuleReturnScope<object, IToken> classCreatorRest()
	{
		EnterRule_classCreatorRest();
		EnterRule("classCreatorRest", 130);
		TraceIn("classCreatorRest", 130);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int classCreatorRest_StartIndex = input.Index;

		object root_0 = default(object);

		AstParserRuleReturnScope<object, IToken> arguments592 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> classBody593 = default(AstParserRuleReturnScope<object, IToken>);

		try { DebugEnterRule(GrammarFileName, "classCreatorRest");
		DebugLocation(799, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 130)) { return retval; }

			// JavaJava.g3:800:5: ( arguments ( classBody )? )
			DebugEnterAlt(1);
			// JavaJava.g3:800:8: arguments ( classBody )?
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(800, 8);
			if (state.backtracking == 0)
			{
				constructorcall=false;
			}
			DebugLocation(800, 33);
			PushFollow(Follow._arguments_in_classCreatorRest6038);
			arguments592=arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, arguments592.Tree);
			DebugLocation(800, 43);
			// JavaJava.g3:800:43: ( classBody )?
			int alt173=2;
			try { DebugEnterSubRule(173);
			try { DebugEnterDecision(173, false);
			int LA173_1 = input.LA(1);

			if ((LA173_1==108))
			{
				alt173 = 1;
			}
			} finally { DebugExitDecision(173); }
			switch (alt173)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:800:43: classBody
				{
				DebugLocation(800, 43);
				PushFollow(Follow._classBody_in_classCreatorRest6040);
				classBody593=classBody();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, classBody593.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(173); }


			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("classCreatorRest", 130);
			LeaveRule("classCreatorRest", 130);
			LeaveRule_classCreatorRest();
			if (state.backtracking > 0) { Memoize(input, 130, classCreatorRest_StartIndex); }

		}
		DebugLocation(801, 4);
		} finally { DebugExitRule(GrammarFileName, "classCreatorRest"); }
		return retval;

	}
	// $ANTLR end "classCreatorRest"

	partial void EnterRule_explicitGenericInvocation();
	partial void LeaveRule_explicitGenericInvocation();
	// $ANTLR start "explicitGenericInvocation"
	// JavaJava.g3:803:1: explicitGenericInvocation : nonWildcardTypeArguments Identifier arguments ;
	[GrammarRule("explicitGenericInvocation")]
	private AstParserRuleReturnScope<object, IToken> explicitGenericInvocation()
	{
		EnterRule_explicitGenericInvocation();
		EnterRule("explicitGenericInvocation", 131);
		TraceIn("explicitGenericInvocation", 131);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int explicitGenericInvocation_StartIndex = input.Index;

		object root_0 = default(object);

		IToken Identifier595 = default(IToken);
		AstParserRuleReturnScope<object, IToken> nonWildcardTypeArguments594 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arguments596 = default(AstParserRuleReturnScope<object, IToken>);

		object Identifier595_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "explicitGenericInvocation");
		DebugLocation(803, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 131)) { return retval; }

			// JavaJava.g3:804:5: ( nonWildcardTypeArguments Identifier arguments )
			DebugEnterAlt(1);
			// JavaJava.g3:804:9: nonWildcardTypeArguments Identifier arguments
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(804, 9);
			PushFollow(Follow._nonWildcardTypeArguments_in_explicitGenericInvocation6064);
			nonWildcardTypeArguments594=nonWildcardTypeArguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, nonWildcardTypeArguments594.Tree);
			DebugLocation(804, 34);
			Identifier595=(IToken)Match(input,Identifier,Follow._Identifier_in_explicitGenericInvocation6066); if (state.failed) return retval;
			if (state.backtracking == 0) {
			Identifier595_tree = (object)adaptor.Create(Identifier595);
			adaptor.AddChild(root_0, Identifier595_tree);
			}
			DebugLocation(804, 44);
			if (state.backtracking == 0)
			{
				if(primitive) id((Identifier595!=null?Identifier595.Text:default(string)));
			}
			DebugLocation(804, 82);
			PushFollow(Follow._arguments_in_explicitGenericInvocation6069);
			arguments596=arguments();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, arguments596.Tree);

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("explicitGenericInvocation", 131);
			LeaveRule("explicitGenericInvocation", 131);
			LeaveRule_explicitGenericInvocation();
			if (state.backtracking > 0) { Memoize(input, 131, explicitGenericInvocation_StartIndex); }

		}
		DebugLocation(805, 4);
		} finally { DebugExitRule(GrammarFileName, "explicitGenericInvocation"); }
		return retval;

	}
	// $ANTLR end "explicitGenericInvocation"

	partial void EnterRule_nonWildcardTypeArguments();
	partial void LeaveRule_nonWildcardTypeArguments();
	// $ANTLR start "nonWildcardTypeArguments"
	// JavaJava.g3:807:1: nonWildcardTypeArguments : '<' typeList '>' ;
	[GrammarRule("nonWildcardTypeArguments")]
	private AstParserRuleReturnScope<object, IToken> nonWildcardTypeArguments()
	{
		EnterRule_nonWildcardTypeArguments();
		EnterRule("nonWildcardTypeArguments", 132);
		TraceIn("nonWildcardTypeArguments", 132);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int nonWildcardTypeArguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal597 = default(IToken);
		IToken char_literal599 = default(IToken);
		AstParserRuleReturnScope<object, IToken> typeList598 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal597_tree = default(object);
		object char_literal599_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "nonWildcardTypeArguments");
		DebugLocation(807, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 132)) { return retval; }

			// JavaJava.g3:808:5: ( '<' typeList '>' )
			DebugEnterAlt(1);
			// JavaJava.g3:808:9: '<' typeList '>'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(808, 9);
			char_literal597=(IToken)Match(input,49,Follow._49_in_nonWildcardTypeArguments6092); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal597_tree = (object)adaptor.Create(char_literal597);
			adaptor.AddChild(root_0, char_literal597_tree);
			}
			DebugLocation(808, 13);
			if (state.backtracking == 0)
			{
				s("<");
			}
			DebugLocation(808, 23);
			PushFollow(Follow._typeList_in_nonWildcardTypeArguments6096);
			typeList598=typeList();
			PopFollow();
			if (state.failed) return retval;
			if (state.backtracking == 0) adaptor.AddChild(root_0, typeList598.Tree);
			DebugLocation(808, 32);
			char_literal599=(IToken)Match(input,52,Follow._52_in_nonWildcardTypeArguments6098); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal599_tree = (object)adaptor.Create(char_literal599);
			adaptor.AddChild(root_0, char_literal599_tree);
			}
			DebugLocation(808, 36);
			if (state.backtracking == 0)
			{
				s(">");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("nonWildcardTypeArguments", 132);
			LeaveRule("nonWildcardTypeArguments", 132);
			LeaveRule_nonWildcardTypeArguments();
			if (state.backtracking > 0) { Memoize(input, 132, nonWildcardTypeArguments_StartIndex); }

		}
		DebugLocation(809, 4);
		} finally { DebugExitRule(GrammarFileName, "nonWildcardTypeArguments"); }
		return retval;

	}
	// $ANTLR end "nonWildcardTypeArguments"

	partial void EnterRule_selector();
	partial void LeaveRule_selector();
	// $ANTLR start "selector"
	// JavaJava.g3:811:1: selector : ( '.' Identifier ( arguments )? | '.' 'this' | '.' 'super' superSuffix | '.' 'new' innerCreator | '[' expression ']' );
	[GrammarRule("selector")]
	private AstParserRuleReturnScope<object, IToken> selector()
	{
		EnterRule_selector();
		EnterRule("selector", 133);
		TraceIn("selector", 133);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int selector_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal600 = default(IToken);
		IToken Identifier601 = default(IToken);
		IToken char_literal603 = default(IToken);
		IToken string_literal604 = default(IToken);
		IToken char_literal605 = default(IToken);
		IToken string_literal606 = default(IToken);
		IToken char_literal608 = default(IToken);
		IToken string_literal609 = default(IToken);
		IToken char_literal611 = default(IToken);
		IToken char_literal613 = default(IToken);
		AstParserRuleReturnScope<object, IToken> arguments602 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> superSuffix607 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> innerCreator610 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> expression612 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal600_tree = default(object);
		object Identifier601_tree = default(object);
		object char_literal603_tree = default(object);
		object string_literal604_tree = default(object);
		object char_literal605_tree = default(object);
		object string_literal606_tree = default(object);
		object char_literal608_tree = default(object);
		object string_literal609_tree = default(object);
		object char_literal611_tree = default(object);
		object char_literal613_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "selector");
		DebugLocation(811, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 133)) { return retval; }

			// JavaJava.g3:812:5: ( '.' Identifier ( arguments )? | '.' 'this' | '.' 'super' superSuffix | '.' 'new' innerCreator | '[' expression ']' )
			int alt175=5;
			try { DebugEnterDecision(175, false);
			int LA175_1 = input.LA(1);

			if ((LA175_1==43))
			{
				switch (input.LA(2))
				{
				case Identifier:
					{
					alt175 = 1;
					}
					break;
				case 99:
					{
					alt175 = 2;
					}
					break;
				case 96:
					{
					alt175 = 3;
					}
					break;
				case 86:
					{
					alt175 = 4;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae = new NoViableAltException("", 175, 1, input, 2);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

			}
			else if ((LA175_1==55))
			{
				alt175 = 5;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 175, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(175); }
			switch (alt175)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:812:9: '.' Identifier ( arguments )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(812, 9);
				char_literal600=(IToken)Match(input,43,Follow._43_in_selector6123); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal600_tree = (object)adaptor.Create(char_literal600);
				adaptor.AddChild(root_0, char_literal600_tree);
				}
				DebugLocation(812, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(812, 23);
				Identifier601=(IToken)Match(input,Identifier,Follow._Identifier_in_selector6127); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier601_tree = (object)adaptor.Create(Identifier601);
				adaptor.AddChild(root_0, Identifier601_tree);
				}
				DebugLocation(812, 35);
				if (state.backtracking == 0)
				{
					if(primitive) id((Identifier601!=null?Identifier601.Text:default(string)));
				}
				DebugLocation(812, 73);
				// JavaJava.g3:812:73: ( arguments )?
				int alt174=2;
				try { DebugEnterSubRule(174);
				try { DebugEnterDecision(174, false);
				int LA174_1 = input.LA(1);

				if ((LA174_1==32))
				{
					alt174 = 1;
				}
				} finally { DebugExitDecision(174); }
				switch (alt174)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:812:73: arguments
					{
					DebugLocation(812, 73);
					PushFollow(Follow._arguments_in_selector6132);
					arguments602=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments602.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(174); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:813:9: '.' 'this'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(813, 9);
				char_literal603=(IToken)Match(input,43,Follow._43_in_selector6143); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal603_tree = (object)adaptor.Create(char_literal603);
				adaptor.AddChild(root_0, char_literal603_tree);
				}
				DebugLocation(813, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(813, 23);
				string_literal604=(IToken)Match(input,99,Follow._99_in_selector6147); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal604_tree = (object)adaptor.Create(string_literal604);
				adaptor.AddChild(root_0, string_literal604_tree);
				}
				DebugLocation(813, 30);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("this");
				}

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// JavaJava.g3:814:9: '.' 'super' superSuffix
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(814, 9);
				char_literal605=(IToken)Match(input,43,Follow._43_in_selector6159); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal605_tree = (object)adaptor.Create(char_literal605);
				adaptor.AddChild(root_0, char_literal605_tree);
				}
				DebugLocation(814, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(814, 23);
				string_literal606=(IToken)Match(input,96,Follow._96_in_selector6163); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal606_tree = (object)adaptor.Create(string_literal606);
				adaptor.AddChild(root_0, string_literal606_tree);
				}
				DebugLocation(814, 31);
				PushFollow(Follow._superSuffix_in_selector6165);
				superSuffix607=superSuffix();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, superSuffix607.Tree);
				DebugLocation(814, 43);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("super");
				}

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// JavaJava.g3:815:9: '.' 'new' innerCreator
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(815, 9);
				char_literal608=(IToken)Match(input,43,Follow._43_in_selector6177); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal608_tree = (object)adaptor.Create(char_literal608);
				adaptor.AddChild(root_0, char_literal608_tree);
				}
				DebugLocation(815, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(815, 23);
				string_literal609=(IToken)Match(input,86,Follow._86_in_selector6181); if (state.failed) return retval;
				if (state.backtracking == 0) {
				string_literal609_tree = (object)adaptor.Create(string_literal609);
				adaptor.AddChild(root_0, string_literal609_tree);
				}
				DebugLocation(815, 30);
				if (state.backtracking == 0)
				{
					keywordCount++;JavaMetrics.UniqueKeywords.Add("new");
				}
				DebugLocation(815, 86);
				PushFollow(Follow._innerCreator_in_selector6186);
				innerCreator610=innerCreator();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, innerCreator610.Tree);

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// JavaJava.g3:816:9: '[' expression ']'
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(816, 9);
				char_literal611=(IToken)Match(input,55,Follow._55_in_selector6196); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal611_tree = (object)adaptor.Create(char_literal611);
				adaptor.AddChild(root_0, char_literal611_tree);
				}
				DebugLocation(816, 13);
				if (state.backtracking == 0)
				{
					s("[");
				}
				DebugLocation(816, 23);
				PushFollow(Follow._expression_in_selector6200);
				expression612=expression();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expression612.Tree);
				DebugLocation(816, 34);
				char_literal613=(IToken)Match(input,56,Follow._56_in_selector6202); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal613_tree = (object)adaptor.Create(char_literal613);
				adaptor.AddChild(root_0, char_literal613_tree);
				}
				DebugLocation(816, 38);
				if (state.backtracking == 0)
				{
					s("]");
				}

				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("selector", 133);
			LeaveRule("selector", 133);
			LeaveRule_selector();
			if (state.backtracking > 0) { Memoize(input, 133, selector_StartIndex); }

		}
		DebugLocation(817, 4);
		} finally { DebugExitRule(GrammarFileName, "selector"); }
		return retval;

	}
	// $ANTLR end "selector"

	partial void EnterRule_superSuffix();
	partial void LeaveRule_superSuffix();
	// $ANTLR start "superSuffix"
	// JavaJava.g3:819:1: superSuffix : ( arguments | '.' Identifier ( arguments )? );
	[GrammarRule("superSuffix")]
	private AstParserRuleReturnScope<object, IToken> superSuffix()
	{
		EnterRule_superSuffix();
		EnterRule("superSuffix", 134);
		TraceIn("superSuffix", 134);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int superSuffix_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal615 = default(IToken);
		IToken Identifier616 = default(IToken);
		AstParserRuleReturnScope<object, IToken> arguments614 = default(AstParserRuleReturnScope<object, IToken>);
		AstParserRuleReturnScope<object, IToken> arguments617 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal615_tree = default(object);
		object Identifier616_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "superSuffix");
		DebugLocation(819, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 134)) { return retval; }

			// JavaJava.g3:820:5: ( arguments | '.' Identifier ( arguments )? )
			int alt177=2;
			try { DebugEnterDecision(177, false);
			int LA177_1 = input.LA(1);

			if ((LA177_1==32))
			{
				alt177 = 1;
			}
			else if ((LA177_1==43))
			{
				alt177 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae = new NoViableAltException("", 177, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(177); }
			switch (alt177)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:820:9: arguments
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(820, 9);
				PushFollow(Follow._arguments_in_superSuffix6227);
				arguments614=arguments();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, arguments614.Tree);

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:821:9: '.' Identifier ( arguments )?
				{
				root_0 = (object)adaptor.Nil();

				DebugLocation(821, 9);
				char_literal615=(IToken)Match(input,43,Follow._43_in_superSuffix6237); if (state.failed) return retval;
				if (state.backtracking == 0) {
				char_literal615_tree = (object)adaptor.Create(char_literal615);
				adaptor.AddChild(root_0, char_literal615_tree);
				}
				DebugLocation(821, 13);
				if (state.backtracking == 0)
				{
					s(".");
				}
				DebugLocation(821, 23);
				Identifier616=(IToken)Match(input,Identifier,Follow._Identifier_in_superSuffix6241); if (state.failed) return retval;
				if (state.backtracking == 0) {
				Identifier616_tree = (object)adaptor.Create(Identifier616);
				adaptor.AddChild(root_0, Identifier616_tree);
				}
				DebugLocation(821, 34);
				if (state.backtracking == 0)
				{
					if(primitive) id((Identifier616!=null?Identifier616.Text:default(string)));
				}
				DebugLocation(821, 72);
				// JavaJava.g3:821:72: ( arguments )?
				int alt176=2;
				try { DebugEnterSubRule(176);
				try { DebugEnterDecision(176, false);
				int LA176_1 = input.LA(1);

				if ((LA176_1==32))
				{
					alt176 = 1;
				}
				} finally { DebugExitDecision(176); }
				switch (alt176)
				{
				case 1:
					DebugEnterAlt(1);
					// JavaJava.g3:821:72: arguments
					{
					DebugLocation(821, 72);
					PushFollow(Follow._arguments_in_superSuffix6245);
					arguments617=arguments();
					PopFollow();
					if (state.failed) return retval;
					if (state.backtracking == 0) adaptor.AddChild(root_0, arguments617.Tree);

					}
					break;

				}
				} finally { DebugExitSubRule(176); }


				}
				break;

			}
			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("superSuffix", 134);
			LeaveRule("superSuffix", 134);
			LeaveRule_superSuffix();
			if (state.backtracking > 0) { Memoize(input, 134, superSuffix_StartIndex); }

		}
		DebugLocation(822, 4);
		} finally { DebugExitRule(GrammarFileName, "superSuffix"); }
		return retval;

	}
	// $ANTLR end "superSuffix"

	partial void EnterRule_arguments();
	partial void LeaveRule_arguments();
	// $ANTLR start "arguments"
	// JavaJava.g3:824:1: arguments : '(' ( expressionList )? ')' ;
	[GrammarRule("arguments")]
	private AstParserRuleReturnScope<object, IToken> arguments()
	{
		EnterRule_arguments();
		EnterRule("arguments", 135);
		TraceIn("arguments", 135);
		AstParserRuleReturnScope<object, IToken> retval = new AstParserRuleReturnScope<object, IToken>();
		retval.Start = (IToken)input.LT(1);
		int arguments_StartIndex = input.Index;

		object root_0 = default(object);

		IToken char_literal618 = default(IToken);
		IToken char_literal620 = default(IToken);
		AstParserRuleReturnScope<object, IToken> expressionList619 = default(AstParserRuleReturnScope<object, IToken>);

		object char_literal618_tree = default(object);
		object char_literal620_tree = default(object);
		try { DebugEnterRule(GrammarFileName, "arguments");
		DebugLocation(824, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 135)) { return retval; }

			// JavaJava.g3:825:5: ( '(' ( expressionList )? ')' )
			DebugEnterAlt(1);
			// JavaJava.g3:825:9: '(' ( expressionList )? ')'
			{
			root_0 = (object)adaptor.Nil();

			DebugLocation(825, 9);
			char_literal618=(IToken)Match(input,32,Follow._32_in_arguments6265); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal618_tree = (object)adaptor.Create(char_literal618);
			adaptor.AddChild(root_0, char_literal618_tree);
			}
			DebugLocation(825, 13);
			if (state.backtracking == 0)
			{
				s("(");
			}
			DebugLocation(825, 22);
			// JavaJava.g3:825:22: ( expressionList )?
			int alt178=2;
			try { DebugEnterSubRule(178);
			try { DebugEnterDecision(178, false);
			int LA178_1 = input.LA(1);

			if (((LA178_1>=CharacterLiteral && LA178_1<=DecimalLiteral)||LA178_1==FloatingPointLiteral||(LA178_1>=HexLiteral && LA178_1<=Identifier)||(LA178_1>=OctalLiteral && LA178_1<=StringLiteral)||LA178_1==25||LA178_1==32||(LA178_1>=36 && LA178_1<=37)||(LA178_1>=40 && LA178_1<=41)||LA178_1==60||LA178_1==62||LA178_1==65||LA178_1==70||LA178_1==73||LA178_1==76||LA178_1==82||LA178_1==84||(LA178_1>=86 && LA178_1<=87)||LA178_1==93||LA178_1==96||LA178_1==99||LA178_1==103||LA178_1==105||LA178_1==113))
			{
				alt178 = 1;
			}
			} finally { DebugExitDecision(178); }
			switch (alt178)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:825:22: expressionList
				{
				DebugLocation(825, 22);
				PushFollow(Follow._expressionList_in_arguments6268);
				expressionList619=expressionList();
				PopFollow();
				if (state.failed) return retval;
				if (state.backtracking == 0) adaptor.AddChild(root_0, expressionList619.Tree);

				}
				break;

			}
			} finally { DebugExitSubRule(178); }

			DebugLocation(825, 38);
			char_literal620=(IToken)Match(input,33,Follow._33_in_arguments6271); if (state.failed) return retval;
			if (state.backtracking == 0) {
			char_literal620_tree = (object)adaptor.Create(char_literal620);
			adaptor.AddChild(root_0, char_literal620_tree);
			}
			DebugLocation(825, 41);
			if (state.backtracking == 0)
			{
				s(")");
			}

			}

			retval.Stop = (IToken)input.LT(-1);

			if (state.backtracking == 0) {
			retval.Tree = (object)adaptor.RulePostProcessing(root_0);
			adaptor.SetTokenBoundaries(retval.Tree, retval.Start, retval.Stop);
			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
			retval.Tree = (object)adaptor.ErrorNode(input, retval.Start, input.LT(-1), re);

		}
		finally
		{
			TraceOut("arguments", 135);
			LeaveRule("arguments", 135);
			LeaveRule_arguments();
			if (state.backtracking > 0) { Memoize(input, 135, arguments_StartIndex); }

		}
		DebugLocation(826, 4);
		} finally { DebugExitRule(GrammarFileName, "arguments"); }
		return retval;

	}
	// $ANTLR end "arguments"

	partial void EnterRule_synpred5_JavaJava_fragment();
	partial void LeaveRule_synpred5_JavaJava_fragment();

	// $ANTLR start synpred5_JavaJava
	private void synpred5_JavaJava_fragment()
	{
		EnterRule_synpred5_JavaJava_fragment();
		EnterRule("synpred5_JavaJava_fragment", 140);
		TraceIn("synpred5_JavaJava_fragment", 140);
		try
		{
			// JavaJava.g3:78:9: ( annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* ) )
			DebugEnterAlt(1);
			// JavaJava.g3:78:9: annotations ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* )
			{
			DebugLocation(78, 9);
			PushFollow(Follow._annotations_in_synpred5_JavaJava75);
			annotations();
			PopFollow();
			if (state.failed) return;
			DebugLocation(79, 9);
			// JavaJava.g3:79:9: ( packageDeclaration ( importDeclaration )* ( typeDeclaration )* | classOrInterfaceDeclaration ( typeDeclaration )* )
			int alt184=2;
			try { DebugEnterSubRule(184);
			try { DebugEnterDecision(184, false);
			int LA184_1 = input.LA(1);

			if ((LA184_1==88))
			{
				alt184 = 1;
			}
			else if ((LA184_1==ENUM||LA184_1==54||LA184_1==59||LA184_1==66||LA184_1==74||LA184_1==83||(LA184_1>=89 && LA184_1<=91)||(LA184_1>=94 && LA184_1<=95)))
			{
				alt184 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 184, 0, input, 1);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(184); }
			switch (alt184)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:79:13: packageDeclaration ( importDeclaration )* ( typeDeclaration )*
				{
				DebugLocation(79, 13);
				PushFollow(Follow._packageDeclaration_in_synpred5_JavaJava89);
				packageDeclaration();
				PopFollow();
				if (state.failed) return;
				DebugLocation(79, 32);
				// JavaJava.g3:79:32: ( importDeclaration )*
				try { DebugEnterSubRule(181);
				while (true)
				{
					int alt181=2;
					try { DebugEnterDecision(181, false);
					int LA181_1 = input.LA(1);

					if ((LA181_1==80))
					{
						alt181 = 1;
					}


					} finally { DebugExitDecision(181); }
					switch ( alt181 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:79:32: importDeclaration
						{
						DebugLocation(79, 32);
						PushFollow(Follow._importDeclaration_in_synpred5_JavaJava91);
						importDeclaration();
						PopFollow();
						if (state.failed) return;

						}
						break;

					default:
						goto loop181;
					}
				}

				loop181:
					;

				} finally { DebugExitSubRule(181); }

				DebugLocation(79, 51);
				// JavaJava.g3:79:51: ( typeDeclaration )*
				try { DebugEnterSubRule(182);
				while (true)
				{
					int alt182=2;
					try { DebugEnterDecision(182, false);
					int LA182_1 = input.LA(1);

					if ((LA182_1==ENUM||LA182_1==48||LA182_1==54||LA182_1==59||LA182_1==66||LA182_1==74||LA182_1==83||(LA182_1>=89 && LA182_1<=91)||(LA182_1>=94 && LA182_1<=95)))
					{
						alt182 = 1;
					}


					} finally { DebugExitDecision(182); }
					switch ( alt182 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:79:51: typeDeclaration
						{
						DebugLocation(79, 51);
						PushFollow(Follow._typeDeclaration_in_synpred5_JavaJava94);
						typeDeclaration();
						PopFollow();
						if (state.failed) return;

						}
						break;

					default:
						goto loop182;
					}
				}

				loop182:
					;

				} finally { DebugExitSubRule(182); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// JavaJava.g3:80:13: classOrInterfaceDeclaration ( typeDeclaration )*
				{
				DebugLocation(80, 13);
				PushFollow(Follow._classOrInterfaceDeclaration_in_synpred5_JavaJava109);
				classOrInterfaceDeclaration();
				PopFollow();
				if (state.failed) return;
				DebugLocation(80, 41);
				// JavaJava.g3:80:41: ( typeDeclaration )*
				try { DebugEnterSubRule(183);
				while (true)
				{
					int alt183=2;
					try { DebugEnterDecision(183, false);
					int LA183_1 = input.LA(1);

					if ((LA183_1==ENUM||LA183_1==48||LA183_1==54||LA183_1==59||LA183_1==66||LA183_1==74||LA183_1==83||(LA183_1>=89 && LA183_1<=91)||(LA183_1>=94 && LA183_1<=95)))
					{
						alt183 = 1;
					}


					} finally { DebugExitDecision(183); }
					switch ( alt183 )
					{
					case 1:
						DebugEnterAlt(1);
						// JavaJava.g3:80:41: typeDeclaration
						{
						DebugLocation(80, 41);
						PushFollow(Follow._typeDeclaration_in_synpred5_JavaJava111);
						typeDeclaration();
						PopFollow();
						if (state.failed) return;

						}
						break;

					default:
						goto loop183;
					}
				}

				loop183:
					;

				} finally { DebugExitSubRule(183); }


				}
				break;

			}
			} finally { DebugExitSubRule(184); }


			}

		}
		finally
		{
			TraceOut("synpred5_JavaJava_fragment", 140);
			LeaveRule("synpred5_JavaJava_fragment", 140);
			LeaveRule_synpred5_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred5_JavaJava

	partial void EnterRule_synpred113_JavaJava_fragment();
	partial void LeaveRule_synpred113_JavaJava_fragment();

	// $ANTLR start synpred113_JavaJava
	private void synpred113_JavaJava_fragment()
	{
		EnterRule_synpred113_JavaJava_fragment();
		EnterRule("synpred113_JavaJava_fragment", 248);
		TraceIn("synpred113_JavaJava_fragment", 248);
		try
		{
			// JavaJava.g3:413:22: ( explicitConstructorInvocation )
			DebugEnterAlt(1);
			// JavaJava.g3:413:22: explicitConstructorInvocation
			{
			DebugLocation(413, 22);
			PushFollow(Follow._explicitConstructorInvocation_in_synpred113_JavaJava2726);
			explicitConstructorInvocation();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred113_JavaJava_fragment", 248);
			LeaveRule("synpred113_JavaJava_fragment", 248);
			LeaveRule_synpred113_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred113_JavaJava

	partial void EnterRule_synpred117_JavaJava_fragment();
	partial void LeaveRule_synpred117_JavaJava_fragment();

	// $ANTLR start synpred117_JavaJava
	private void synpred117_JavaJava_fragment()
	{
		EnterRule_synpred117_JavaJava_fragment();
		EnterRule("synpred117_JavaJava_fragment", 252);
		TraceIn("synpred117_JavaJava_fragment", 252);
		try
		{
			// JavaJava.g3:417:9: ( ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';' )
			DebugEnterAlt(1);
			// JavaJava.g3:417:9: ( nonWildcardTypeArguments )? ( 'this' | 'super' ) arguments ';'
			{
			DebugLocation(417, 9);
			// JavaJava.g3:417:9: ( nonWildcardTypeArguments )?
			int alt192=2;
			try { DebugEnterSubRule(192);
			try { DebugEnterDecision(192, false);
			int LA192_1 = input.LA(1);

			if ((LA192_1==49))
			{
				alt192 = 1;
			}
			} finally { DebugExitDecision(192); }
			switch (alt192)
			{
			case 1:
				DebugEnterAlt(1);
				// JavaJava.g3:417:9: nonWildcardTypeArguments
				{
				DebugLocation(417, 9);
				PushFollow(Follow._nonWildcardTypeArguments_in_synpred117_JavaJava2753);
				nonWildcardTypeArguments();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(192); }

			DebugLocation(417, 35);
			if (input.LA(1)==96||input.LA(1)==99)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}

			DebugLocation(417, 168);
			PushFollow(Follow._arguments_in_synpred117_JavaJava2767);
			arguments();
			PopFollow();
			if (state.failed) return;
			DebugLocation(417, 178);
			Match(input,48,Follow._48_in_synpred117_JavaJava2769); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred117_JavaJava_fragment", 252);
			LeaveRule("synpred117_JavaJava_fragment", 252);
			LeaveRule_synpred117_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred117_JavaJava

	partial void EnterRule_synpred128_JavaJava_fragment();
	partial void LeaveRule_synpred128_JavaJava_fragment();

	// $ANTLR start synpred128_JavaJava
	private void synpred128_JavaJava_fragment()
	{
		EnterRule_synpred128_JavaJava_fragment();
		EnterRule("synpred128_JavaJava_fragment", 263);
		TraceIn("synpred128_JavaJava_fragment", 263);
		try
		{
			// JavaJava.g3:449:9: ( annotation )
			DebugEnterAlt(1);
			// JavaJava.g3:449:9: annotation
			{
			DebugLocation(449, 9);
			PushFollow(Follow._annotation_in_synpred128_JavaJava3015);
			annotation();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred128_JavaJava_fragment", 263);
			LeaveRule("synpred128_JavaJava_fragment", 263);
			LeaveRule_synpred128_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred128_JavaJava

	partial void EnterRule_synpred151_JavaJava_fragment();
	partial void LeaveRule_synpred151_JavaJava_fragment();

	// $ANTLR start synpred151_JavaJava
	private void synpred151_JavaJava_fragment()
	{
		EnterRule_synpred151_JavaJava_fragment();
		EnterRule("synpred151_JavaJava_fragment", 286);
		TraceIn("synpred151_JavaJava_fragment", 286);
		try
		{
			// JavaJava.g3:522:10: ( localVariableDeclarationStatement )
			DebugEnterAlt(1);
			// JavaJava.g3:522:10: localVariableDeclarationStatement
			{
			DebugLocation(522, 10);
			PushFollow(Follow._localVariableDeclarationStatement_in_synpred151_JavaJava3581);
			localVariableDeclarationStatement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred151_JavaJava_fragment", 286);
			LeaveRule("synpred151_JavaJava_fragment", 286);
			LeaveRule_synpred151_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred151_JavaJava

	partial void EnterRule_synpred152_JavaJava_fragment();
	partial void LeaveRule_synpred152_JavaJava_fragment();

	// $ANTLR start synpred152_JavaJava
	private void synpred152_JavaJava_fragment()
	{
		EnterRule_synpred152_JavaJava_fragment();
		EnterRule("synpred152_JavaJava_fragment", 287);
		TraceIn("synpred152_JavaJava_fragment", 287);
		try
		{
			// JavaJava.g3:523:9: ( classOrInterfaceDeclaration )
			DebugEnterAlt(1);
			// JavaJava.g3:523:9: classOrInterfaceDeclaration
			{
			DebugLocation(523, 9);
			PushFollow(Follow._classOrInterfaceDeclaration_in_synpred152_JavaJava3591);
			classOrInterfaceDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred152_JavaJava_fragment", 287);
			LeaveRule("synpred152_JavaJava_fragment", 287);
			LeaveRule_synpred152_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred152_JavaJava

	partial void EnterRule_synpred157_JavaJava_fragment();
	partial void LeaveRule_synpred157_JavaJava_fragment();

	// $ANTLR start synpred157_JavaJava
	private void synpred157_JavaJava_fragment()
	{
		EnterRule_synpred157_JavaJava_fragment();
		EnterRule("synpred157_JavaJava_fragment", 292);
		TraceIn("synpred157_JavaJava_fragment", 292);
		try
		{
			// JavaJava.g3:542:115: ( 'else' statement )
			DebugEnterAlt(1);
			// JavaJava.g3:542:115: 'else' statement
			{
			DebugLocation(542, 115);
			Match(input,71,Follow._71_in_synpred157_JavaJava3742); if (state.failed) return;
			DebugLocation(542, 179);
			PushFollow(Follow._statement_in_synpred157_JavaJava3746);
			statement();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred157_JavaJava_fragment", 292);
			LeaveRule("synpred157_JavaJava_fragment", 292);
			LeaveRule_synpred157_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred157_JavaJava

	partial void EnterRule_synpred162_JavaJava_fragment();
	partial void LeaveRule_synpred162_JavaJava_fragment();

	// $ANTLR start synpred162_JavaJava
	private void synpred162_JavaJava_fragment()
	{
		EnterRule_synpred162_JavaJava_fragment();
		EnterRule("synpred162_JavaJava_fragment", 297);
		TraceIn("synpred162_JavaJava_fragment", 297);
		try
		{
			// JavaJava.g3:547:11: ( catches 'finally' block )
			DebugEnterAlt(1);
			// JavaJava.g3:547:11: catches 'finally' block
			{
			DebugLocation(547, 11);
			PushFollow(Follow._catches_in_synpred162_JavaJava3836);
			catches();
			PopFollow();
			if (state.failed) return;
			DebugLocation(547, 19);
			Match(input,75,Follow._75_in_synpred162_JavaJava3838); if (state.failed) return;
			DebugLocation(547, 88);
			PushFollow(Follow._block_in_synpred162_JavaJava3841);
			block();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred162_JavaJava_fragment", 297);
			LeaveRule("synpred162_JavaJava_fragment", 297);
			LeaveRule_synpred162_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred162_JavaJava

	partial void EnterRule_synpred163_JavaJava_fragment();
	partial void LeaveRule_synpred163_JavaJava_fragment();

	// $ANTLR start synpred163_JavaJava
	private void synpred163_JavaJava_fragment()
	{
		EnterRule_synpred163_JavaJava_fragment();
		EnterRule("synpred163_JavaJava_fragment", 298);
		TraceIn("synpred163_JavaJava_fragment", 298);
		try
		{
			// JavaJava.g3:548:11: ( catches )
			DebugEnterAlt(1);
			// JavaJava.g3:548:11: catches
			{
			DebugLocation(548, 11);
			PushFollow(Follow._catches_in_synpred163_JavaJava3853);
			catches();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred163_JavaJava_fragment", 298);
			LeaveRule("synpred163_JavaJava_fragment", 298);
			LeaveRule_synpred163_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred163_JavaJava

	partial void EnterRule_synpred178_JavaJava_fragment();
	partial void LeaveRule_synpred178_JavaJava_fragment();

	// $ANTLR start synpred178_JavaJava
	private void synpred178_JavaJava_fragment()
	{
		EnterRule_synpred178_JavaJava_fragment();
		EnterRule("synpred178_JavaJava_fragment", 313);
		TraceIn("synpred178_JavaJava_fragment", 313);
		try
		{
			// JavaJava.g3:583:9: ( switchLabel )
			DebugEnterAlt(1);
			// JavaJava.g3:583:9: switchLabel
			{
			DebugLocation(583, 9);
			PushFollow(Follow._switchLabel_in_synpred178_JavaJava4176);
			switchLabel();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred178_JavaJava_fragment", 313);
			LeaveRule("synpred178_JavaJava_fragment", 313);
			LeaveRule_synpred178_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred178_JavaJava

	partial void EnterRule_synpred180_JavaJava_fragment();
	partial void LeaveRule_synpred180_JavaJava_fragment();

	// $ANTLR start synpred180_JavaJava
	private void synpred180_JavaJava_fragment()
	{
		EnterRule_synpred180_JavaJava_fragment();
		EnterRule("synpred180_JavaJava_fragment", 315);
		TraceIn("synpred180_JavaJava_fragment", 315);
		try
		{
			// JavaJava.g3:587:9: ( 'case' constantExpression ':' )
			DebugEnterAlt(1);
			// JavaJava.g3:587:9: 'case' constantExpression ':'
			{
			DebugLocation(587, 9);
			Match(input,63,Follow._63_in_synpred180_JavaJava4203); if (state.failed) return;
			DebugLocation(587, 78);
			PushFollow(Follow._constantExpression_in_synpred180_JavaJava4206);
			constantExpression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(587, 97);
			Match(input,47,Follow._47_in_synpred180_JavaJava4208); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred180_JavaJava_fragment", 315);
			LeaveRule("synpred180_JavaJava_fragment", 315);
			LeaveRule_synpred180_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred180_JavaJava

	partial void EnterRule_synpred181_JavaJava_fragment();
	partial void LeaveRule_synpred181_JavaJava_fragment();

	// $ANTLR start synpred181_JavaJava
	private void synpred181_JavaJava_fragment()
	{
		EnterRule_synpred181_JavaJava_fragment();
		EnterRule("synpred181_JavaJava_fragment", 316);
		TraceIn("synpred181_JavaJava_fragment", 316);
		try
		{
			// JavaJava.g3:588:9: ( 'case' enumConstantName ':' )
			DebugEnterAlt(1);
			// JavaJava.g3:588:9: 'case' enumConstantName ':'
			{
			DebugLocation(588, 9);
			Match(input,63,Follow._63_in_synpred181_JavaJava4218); if (state.failed) return;
			DebugLocation(588, 79);
			PushFollow(Follow._enumConstantName_in_synpred181_JavaJava4222);
			enumConstantName();
			PopFollow();
			if (state.failed) return;
			DebugLocation(588, 96);
			Match(input,47,Follow._47_in_synpred181_JavaJava4224); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred181_JavaJava_fragment", 316);
			LeaveRule("synpred181_JavaJava_fragment", 316);
			LeaveRule_synpred181_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred181_JavaJava

	partial void EnterRule_synpred182_JavaJava_fragment();
	partial void LeaveRule_synpred182_JavaJava_fragment();

	// $ANTLR start synpred182_JavaJava
	private void synpred182_JavaJava_fragment()
	{
		EnterRule_synpred182_JavaJava_fragment();
		EnterRule("synpred182_JavaJava_fragment", 317);
		TraceIn("synpred182_JavaJava_fragment", 317);
		try
		{
			// JavaJava.g3:594:9: ( enhancedForControl )
			DebugEnterAlt(1);
			// JavaJava.g3:594:9: enhancedForControl
			{
			DebugLocation(594, 9);
			PushFollow(Follow._enhancedForControl_in_synpred182_JavaJava4269);
			enhancedForControl();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred182_JavaJava_fragment", 317);
			LeaveRule("synpred182_JavaJava_fragment", 317);
			LeaveRule_synpred182_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred182_JavaJava

	partial void EnterRule_synpred186_JavaJava_fragment();
	partial void LeaveRule_synpred186_JavaJava_fragment();

	// $ANTLR start synpred186_JavaJava
	private void synpred186_JavaJava_fragment()
	{
		EnterRule_synpred186_JavaJava_fragment();
		EnterRule("synpred186_JavaJava_fragment", 321);
		TraceIn("synpred186_JavaJava_fragment", 321);
		try
		{
			// JavaJava.g3:599:9: ( localVariableDeclaration )
			DebugEnterAlt(1);
			// JavaJava.g3:599:9: localVariableDeclaration
			{
			DebugLocation(599, 9);
			PushFollow(Follow._localVariableDeclaration_in_synpred186_JavaJava4309);
			localVariableDeclaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred186_JavaJava_fragment", 321);
			LeaveRule("synpred186_JavaJava_fragment", 321);
			LeaveRule_synpred186_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred186_JavaJava

	partial void EnterRule_synpred188_JavaJava_fragment();
	partial void LeaveRule_synpred188_JavaJava_fragment();

	// $ANTLR start synpred188_JavaJava
	private void synpred188_JavaJava_fragment()
	{
		EnterRule_synpred188_JavaJava_fragment();
		EnterRule("synpred188_JavaJava_fragment", 323);
		TraceIn("synpred188_JavaJava_fragment", 323);
		try
		{
			// JavaJava.g3:630:32: ( assignmentOperator expression )
			DebugEnterAlt(1);
			// JavaJava.g3:630:32: assignmentOperator expression
			{
			DebugLocation(630, 32);
			PushFollow(Follow._assignmentOperator_in_synpred188_JavaJava4500);
			assignmentOperator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(630, 51);
			PushFollow(Follow._expression_in_synpred188_JavaJava4502);
			expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred188_JavaJava_fragment", 323);
			LeaveRule("synpred188_JavaJava_fragment", 323);
			LeaveRule_synpred188_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred188_JavaJava

	partial void EnterRule_synpred198_JavaJava_fragment();
	partial void LeaveRule_synpred198_JavaJava_fragment();

	// $ANTLR start synpred198_JavaJava
	private void synpred198_JavaJava_fragment()
	{
		EnterRule_synpred198_JavaJava_fragment();
		EnterRule("synpred198_JavaJava_fragment", 333);
		TraceIn("synpred198_JavaJava_fragment", 333);
		try
		{
			// JavaJava.g3:643:9: ( '<' '<' '=' )
			DebugEnterAlt(1);
			// JavaJava.g3:643:10: '<' '<' '='
			{
			DebugLocation(643, 10);
			Match(input,49,Follow._49_in_synpred198_JavaJava4620); if (state.failed) return;
			DebugLocation(643, 14);
			Match(input,49,Follow._49_in_synpred198_JavaJava4622); if (state.failed) return;
			DebugLocation(643, 18);
			Match(input,50,Follow._50_in_synpred198_JavaJava4624); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred198_JavaJava_fragment", 333);
			LeaveRule("synpred198_JavaJava_fragment", 333);
			LeaveRule_synpred198_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred198_JavaJava

	partial void EnterRule_synpred199_JavaJava_fragment();
	partial void LeaveRule_synpred199_JavaJava_fragment();

	// $ANTLR start synpred199_JavaJava
	private void synpred199_JavaJava_fragment()
	{
		EnterRule_synpred199_JavaJava_fragment();
		EnterRule("synpred199_JavaJava_fragment", 334);
		TraceIn("synpred199_JavaJava_fragment", 334);
		try
		{
			// JavaJava.g3:648:9: ( '>' '>' '>' '=' )
			DebugEnterAlt(1);
			// JavaJava.g3:648:10: '>' '>' '>' '='
			{
			DebugLocation(648, 10);
			Match(input,52,Follow._52_in_synpred199_JavaJava4660); if (state.failed) return;
			DebugLocation(648, 14);
			Match(input,52,Follow._52_in_synpred199_JavaJava4662); if (state.failed) return;
			DebugLocation(648, 18);
			Match(input,52,Follow._52_in_synpred199_JavaJava4664); if (state.failed) return;
			DebugLocation(648, 22);
			Match(input,50,Follow._50_in_synpred199_JavaJava4666); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred199_JavaJava_fragment", 334);
			LeaveRule("synpred199_JavaJava_fragment", 334);
			LeaveRule_synpred199_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred199_JavaJava

	partial void EnterRule_synpred200_JavaJava_fragment();
	partial void LeaveRule_synpred200_JavaJava_fragment();

	// $ANTLR start synpred200_JavaJava
	private void synpred200_JavaJava_fragment()
	{
		EnterRule_synpred200_JavaJava_fragment();
		EnterRule("synpred200_JavaJava_fragment", 335);
		TraceIn("synpred200_JavaJava_fragment", 335);
		try
		{
			// JavaJava.g3:655:9: ( '>' '>' '=' )
			DebugEnterAlt(1);
			// JavaJava.g3:655:10: '>' '>' '='
			{
			DebugLocation(655, 10);
			Match(input,52,Follow._52_in_synpred200_JavaJava4705); if (state.failed) return;
			DebugLocation(655, 14);
			Match(input,52,Follow._52_in_synpred200_JavaJava4707); if (state.failed) return;
			DebugLocation(655, 18);
			Match(input,50,Follow._50_in_synpred200_JavaJava4709); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred200_JavaJava_fragment", 335);
			LeaveRule("synpred200_JavaJava_fragment", 335);
			LeaveRule_synpred200_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred200_JavaJava

	partial void EnterRule_synpred211_JavaJava_fragment();
	partial void LeaveRule_synpred211_JavaJava_fragment();

	// $ANTLR start synpred211_JavaJava
	private void synpred211_JavaJava_fragment()
	{
		EnterRule_synpred211_JavaJava_fragment();
		EnterRule("synpred211_JavaJava_fragment", 346);
		TraceIn("synpred211_JavaJava_fragment", 346);
		try
		{
			// JavaJava.g3:699:9: ( '<' '=' )
			DebugEnterAlt(1);
			// JavaJava.g3:699:10: '<' '='
			{
			DebugLocation(699, 10);
			Match(input,49,Follow._49_in_synpred211_JavaJava5029); if (state.failed) return;
			DebugLocation(699, 14);
			Match(input,50,Follow._50_in_synpred211_JavaJava5031); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred211_JavaJava_fragment", 346);
			LeaveRule("synpred211_JavaJava_fragment", 346);
			LeaveRule_synpred211_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred211_JavaJava

	partial void EnterRule_synpred212_JavaJava_fragment();
	partial void LeaveRule_synpred212_JavaJava_fragment();

	// $ANTLR start synpred212_JavaJava
	private void synpred212_JavaJava_fragment()
	{
		EnterRule_synpred212_JavaJava_fragment();
		EnterRule("synpred212_JavaJava_fragment", 347);
		TraceIn("synpred212_JavaJava_fragment", 347);
		try
		{
			// JavaJava.g3:702:9: ( '>' '=' )
			DebugEnterAlt(1);
			// JavaJava.g3:702:10: '>' '='
			{
			DebugLocation(702, 10);
			Match(input,52,Follow._52_in_synpred212_JavaJava5063); if (state.failed) return;
			DebugLocation(702, 14);
			Match(input,50,Follow._50_in_synpred212_JavaJava5065); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred212_JavaJava_fragment", 347);
			LeaveRule("synpred212_JavaJava_fragment", 347);
			LeaveRule_synpred212_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred212_JavaJava

	partial void EnterRule_synpred215_JavaJava_fragment();
	partial void LeaveRule_synpred215_JavaJava_fragment();

	// $ANTLR start synpred215_JavaJava
	private void synpred215_JavaJava_fragment()
	{
		EnterRule_synpred215_JavaJava_fragment();
		EnterRule("synpred215_JavaJava_fragment", 350);
		TraceIn("synpred215_JavaJava_fragment", 350);
		try
		{
			// JavaJava.g3:714:9: ( '<' '<' )
			DebugEnterAlt(1);
			// JavaJava.g3:714:10: '<' '<'
			{
			DebugLocation(714, 10);
			Match(input,49,Follow._49_in_synpred215_JavaJava5158); if (state.failed) return;
			DebugLocation(714, 14);
			Match(input,49,Follow._49_in_synpred215_JavaJava5160); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred215_JavaJava_fragment", 350);
			LeaveRule("synpred215_JavaJava_fragment", 350);
			LeaveRule_synpred215_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred215_JavaJava

	partial void EnterRule_synpred216_JavaJava_fragment();
	partial void LeaveRule_synpred216_JavaJava_fragment();

	// $ANTLR start synpred216_JavaJava
	private void synpred216_JavaJava_fragment()
	{
		EnterRule_synpred216_JavaJava_fragment();
		EnterRule("synpred216_JavaJava_fragment", 351);
		TraceIn("synpred216_JavaJava_fragment", 351);
		try
		{
			// JavaJava.g3:717:9: ( '>' '>' '>' )
			DebugEnterAlt(1);
			// JavaJava.g3:717:10: '>' '>' '>'
			{
			DebugLocation(717, 10);
			Match(input,52,Follow._52_in_synpred216_JavaJava5192); if (state.failed) return;
			DebugLocation(717, 14);
			Match(input,52,Follow._52_in_synpred216_JavaJava5194); if (state.failed) return;
			DebugLocation(717, 18);
			Match(input,52,Follow._52_in_synpred216_JavaJava5196); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred216_JavaJava_fragment", 351);
			LeaveRule("synpred216_JavaJava_fragment", 351);
			LeaveRule_synpred216_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred216_JavaJava

	partial void EnterRule_synpred217_JavaJava_fragment();
	partial void LeaveRule_synpred217_JavaJava_fragment();

	// $ANTLR start synpred217_JavaJava
	private void synpred217_JavaJava_fragment()
	{
		EnterRule_synpred217_JavaJava_fragment();
		EnterRule("synpred217_JavaJava_fragment", 352);
		TraceIn("synpred217_JavaJava_fragment", 352);
		try
		{
			// JavaJava.g3:722:9: ( '>' '>' )
			DebugEnterAlt(1);
			// JavaJava.g3:722:10: '>' '>'
			{
			DebugLocation(722, 10);
			Match(input,52,Follow._52_in_synpred217_JavaJava5232); if (state.failed) return;
			DebugLocation(722, 14);
			Match(input,52,Follow._52_in_synpred217_JavaJava5234); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred217_JavaJava_fragment", 352);
			LeaveRule("synpred217_JavaJava_fragment", 352);
			LeaveRule_synpred217_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred217_JavaJava

	partial void EnterRule_synpred229_JavaJava_fragment();
	partial void LeaveRule_synpred229_JavaJava_fragment();

	// $ANTLR start synpred229_JavaJava
	private void synpred229_JavaJava_fragment()
	{
		EnterRule_synpred229_JavaJava_fragment();
		EnterRule("synpred229_JavaJava_fragment", 364);
		TraceIn("synpred229_JavaJava_fragment", 364);
		try
		{
			// JavaJava.g3:747:9: ( castExpression )
			DebugEnterAlt(1);
			// JavaJava.g3:747:9: castExpression
			{
			DebugLocation(747, 9);
			PushFollow(Follow._castExpression_in_synpred229_JavaJava5451);
			castExpression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred229_JavaJava_fragment", 364);
			LeaveRule("synpred229_JavaJava_fragment", 364);
			LeaveRule_synpred229_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred229_JavaJava

	partial void EnterRule_synpred233_JavaJava_fragment();
	partial void LeaveRule_synpred233_JavaJava_fragment();

	// $ANTLR start synpred233_JavaJava
	private void synpred233_JavaJava_fragment()
	{
		EnterRule_synpred233_JavaJava_fragment();
		EnterRule("synpred233_JavaJava_fragment", 368);
		TraceIn("synpred233_JavaJava_fragment", 368);
		try
		{
			// JavaJava.g3:752:8: ( '(' primitiveType ')' unaryExpression )
			DebugEnterAlt(1);
			// JavaJava.g3:752:8: '(' primitiveType ')' unaryExpression
			{
			DebugLocation(752, 8);
			Match(input,32,Follow._32_in_synpred233_JavaJava5493); if (state.failed) return;
			DebugLocation(752, 21);
			PushFollow(Follow._primitiveType_in_synpred233_JavaJava5496);
			primitiveType();
			PopFollow();
			if (state.failed) return;
			DebugLocation(752, 35);
			Match(input,33,Follow._33_in_synpred233_JavaJava5498); if (state.failed) return;
			DebugLocation(752, 39);
			PushFollow(Follow._unaryExpression_in_synpred233_JavaJava5500);
			unaryExpression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred233_JavaJava_fragment", 368);
			LeaveRule("synpred233_JavaJava_fragment", 368);
			LeaveRule_synpred233_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred233_JavaJava

	partial void EnterRule_synpred234_JavaJava_fragment();
	partial void LeaveRule_synpred234_JavaJava_fragment();

	// $ANTLR start synpred234_JavaJava
	private void synpred234_JavaJava_fragment()
	{
		EnterRule_synpred234_JavaJava_fragment();
		EnterRule("synpred234_JavaJava_fragment", 369);
		TraceIn("synpred234_JavaJava_fragment", 369);
		try
		{
			// JavaJava.g3:753:22: ( type )
			DebugEnterAlt(1);
			// JavaJava.g3:753:22: type
			{
			DebugLocation(753, 22);
			PushFollow(Follow._type_in_synpred234_JavaJava5513);
			type();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred234_JavaJava_fragment", 369);
			LeaveRule("synpred234_JavaJava_fragment", 369);
			LeaveRule_synpred234_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred234_JavaJava

	partial void EnterRule_synpred236_JavaJava_fragment();
	partial void LeaveRule_synpred236_JavaJava_fragment();

	// $ANTLR start synpred236_JavaJava
	private void synpred236_JavaJava_fragment()
	{
		EnterRule_synpred236_JavaJava_fragment();
		EnterRule("synpred236_JavaJava_fragment", 371);
		TraceIn("synpred236_JavaJava_fragment", 371);
		try
		{
			// JavaJava.g3:758:73: ( '.' Identifier )
			DebugEnterAlt(1);
			// JavaJava.g3:758:73: '.' Identifier
			{
			DebugLocation(758, 73);
			Match(input,43,Follow._43_in_synpred236_JavaJava5555); if (state.failed) return;
			DebugLocation(758, 87);
			Match(input,Identifier,Follow._Identifier_in_synpred236_JavaJava5559); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred236_JavaJava_fragment", 371);
			LeaveRule("synpred236_JavaJava_fragment", 371);
			LeaveRule_synpred236_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred236_JavaJava

	partial void EnterRule_synpred237_JavaJava_fragment();
	partial void LeaveRule_synpred237_JavaJava_fragment();

	// $ANTLR start synpred237_JavaJava
	private void synpred237_JavaJava_fragment()
	{
		EnterRule_synpred237_JavaJava_fragment();
		EnterRule("synpred237_JavaJava_fragment", 372);
		TraceIn("synpred237_JavaJava_fragment", 372);
		try
		{
			// JavaJava.g3:758:100: ( identifierSuffix )
			DebugEnterAlt(1);
			// JavaJava.g3:758:100: identifierSuffix
			{
			DebugLocation(758, 100);
			PushFollow(Follow._identifierSuffix_in_synpred237_JavaJava5563);
			identifierSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred237_JavaJava_fragment", 372);
			LeaveRule("synpred237_JavaJava_fragment", 372);
			LeaveRule_synpred237_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred237_JavaJava

	partial void EnterRule_synpred242_JavaJava_fragment();
	partial void LeaveRule_synpred242_JavaJava_fragment();

	// $ANTLR start synpred242_JavaJava
	private void synpred242_JavaJava_fragment()
	{
		IToken I4 = default(IToken);

		EnterRule_synpred242_JavaJava_fragment();
		EnterRule("synpred242_JavaJava_fragment", 377);
		TraceIn("synpred242_JavaJava_fragment", 377);
		try
		{
			// JavaJava.g3:762:42: ( '.' I4= Identifier )
			DebugEnterAlt(1);
			// JavaJava.g3:762:42: '.' I4= Identifier
			{
			DebugLocation(762, 42);
			Match(input,43,Follow._43_in_synpred242_JavaJava5618); if (state.failed) return;
			DebugLocation(762, 58);
			I4=(IToken)Match(input,Identifier,Follow._Identifier_in_synpred242_JavaJava5624); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred242_JavaJava_fragment", 377);
			LeaveRule("synpred242_JavaJava_fragment", 377);
			LeaveRule_synpred242_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred242_JavaJava

	partial void EnterRule_synpred243_JavaJava_fragment();
	partial void LeaveRule_synpred243_JavaJava_fragment();

	// $ANTLR start synpred243_JavaJava
	private void synpred243_JavaJava_fragment()
	{
		EnterRule_synpred243_JavaJava_fragment();
		EnterRule("synpred243_JavaJava_fragment", 378);
		TraceIn("synpred243_JavaJava_fragment", 378);
		try
		{
			// JavaJava.g3:762:73: ( identifierSuffix )
			DebugEnterAlt(1);
			// JavaJava.g3:762:73: identifierSuffix
			{
			DebugLocation(762, 73);
			PushFollow(Follow._identifierSuffix_in_synpred243_JavaJava5629);
			identifierSuffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred243_JavaJava_fragment", 378);
			LeaveRule("synpred243_JavaJava_fragment", 378);
			LeaveRule_synpred243_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred243_JavaJava

	partial void EnterRule_synpred249_JavaJava_fragment();
	partial void LeaveRule_synpred249_JavaJava_fragment();

	// $ANTLR start synpred249_JavaJava
	private void synpred249_JavaJava_fragment()
	{
		EnterRule_synpred249_JavaJava_fragment();
		EnterRule("synpred249_JavaJava_fragment", 384);
		TraceIn("synpred249_JavaJava_fragment", 384);
		try
		{
			// JavaJava.g3:769:10: ( '[' expression ']' )
			DebugEnterAlt(1);
			// JavaJava.g3:769:10: '[' expression ']'
			{
			DebugLocation(769, 10);
			Match(input,55,Follow._55_in_synpred249_JavaJava5720); if (state.failed) return;
			DebugLocation(769, 24);
			PushFollow(Follow._expression_in_synpred249_JavaJava5724);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(769, 35);
			Match(input,56,Follow._56_in_synpred249_JavaJava5726); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred249_JavaJava_fragment", 384);
			LeaveRule("synpred249_JavaJava_fragment", 384);
			LeaveRule_synpred249_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred249_JavaJava

	partial void EnterRule_synpred262_JavaJava_fragment();
	partial void LeaveRule_synpred262_JavaJava_fragment();

	// $ANTLR start synpred262_JavaJava
	private void synpred262_JavaJava_fragment()
	{
		EnterRule_synpred262_JavaJava_fragment();
		EnterRule("synpred262_JavaJava_fragment", 397);
		TraceIn("synpred262_JavaJava_fragment", 397);
		try
		{
			// JavaJava.g3:795:39: ( '[' expression ']' )
			DebugEnterAlt(1);
			// JavaJava.g3:795:39: '[' expression ']'
			{
			DebugLocation(795, 39);
			Match(input,55,Follow._55_in_synpred262_JavaJava5990); if (state.failed) return;
			DebugLocation(795, 52);
			PushFollow(Follow._expression_in_synpred262_JavaJava5993);
			expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(795, 63);
			Match(input,56,Follow._56_in_synpred262_JavaJava5995); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred262_JavaJava_fragment", 397);
			LeaveRule("synpred262_JavaJava_fragment", 397);
			LeaveRule_synpred262_JavaJava_fragment();
		}
	}
	// $ANTLR end synpred262_JavaJava
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region DFA
	private DFA128 dfa128;
	private DFA154 dfa154;

	protected override void InitDFAs()
	{
		base.InitDFAs();
		dfa128 = new DFA128( this, SpecialStateTransition128 );
		dfa154 = new DFA154( this, SpecialStateTransition154 );
	}

	private class DFA128 : DFA
	{
		private const string DFA128_eotS =
			"\x10C\xFFFF";
		private const string DFA128_eofS =
			"\x10C\xFFFF";
		private const string DFA128_minS =
			"\x1\x6\xB\xF\x15\xFFFF\xC\xF\x1\x6\x1\xF\x1\x6\x1\x27\x1D\xFFFF\x1\x38"+
			"\x1\x27\x1\xFFFF\x1\x38\x1\x27\x1\xFFFF\x1\x38\x1\x27\x1\xFFFF\x1\x38"+
			"\x1\x27\x1\xFFFF\x1\x38\x1\x27\x1\xFFFF\x1\x38\x1\x27\x1\xFFFF\x1\x38"+
			"\x1\x27\x1\xFFFF\x1\x38\x1\x27\x1\xFFFF\x2D\x0\x2\xFFFF\xA\x0\x14\xFFFF"+
			"\x1\x0\x5\xFFFF\x1\x0\x22\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5"+
			"\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1"+
			"\x0\x5\xFFFF";
		private const string DFA128_maxS =
			"\x1\x71\x1\x5D\x1\xF\x1\x6F\x8\x37\x15\xFFFF\x9\x37\x1\x5D\x1\xF\x1\x5D"+
			"\x1\x71\x1\x63\x1\x71\x1\x37\x1D\xFFFF\x1\x38\x1\x37\x1\xFFFF\x1\x38"+
			"\x1\x37\x1\xFFFF\x1\x38\x1\x37\x1\xFFFF\x1\x38\x1\x37\x1\xFFFF\x1\x38"+
			"\x1\x37\x1\xFFFF\x1\x38\x1\x37\x1\xFFFF\x1\x38\x1\x37\x1\xFFFF\x1\x38"+
			"\x1\x37\x1\xFFFF\x2D\x0\x2\xFFFF\xA\x0\x14\xFFFF\x1\x0\x5\xFFFF\x1\x0"+
			"\x22\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF"+
			"\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF\x1\x0\x5\xFFFF";
		private const string DFA128_acceptS =
			"\xC\xFFFF\x1\x2\xCA\xFFFF\x1\x1\x34\xFFFF";
		private const string DFA128_specialS =
			"\x66\xFFFF\x1\x0\x1\x1\x1\x2\x1\x3\x1\x4\x1\x5\x1\x6\x1\x7\x1\x8\x1\x9"+
			"\x1\xA\x1\xB\x1\xC\x1\xD\x1\xE\x1\xF\x1\x10\x1\x11\x1\x12\x1\x13\x1\x14"+
			"\x1\x15\x1\x16\x1\x17\x1\x18\x1\x19\x1\x1A\x1\x1B\x1\x1C\x1\x1D\x1\x1E"+
			"\x1\x1F\x1\x20\x1\x21\x1\x22\x1\x23\x1\x24\x1\x25\x1\x26\x1\x27\x1\x28"+
			"\x1\x29\x1\x2A\x1\x2B\x1\x2C\x2\xFFFF\x1\x2D\x1\x2E\x1\x2F\x1\x30\x1"+
			"\x31\x1\x32\x1\x33\x1\x34\x1\x35\x1\x36\x14\xFFFF\x1\x37\x5\xFFFF\x1"+
			"\x38\x22\xFFFF\x1\x39\x5\xFFFF\x1\x3A\x5\xFFFF\x1\x3B\x5\xFFFF\x1\x3C"+
			"\x5\xFFFF\x1\x3D\x5\xFFFF\x1\x3E\x5\xFFFF\x1\x3F\x5\xFFFF\x1\x40\x5\xFFFF}>";
		private static readonly string[] DFA128_transitionS =
			{
				"\x2\xC\x4\xFFFF\x1\xC\x1\xFFFF\x1\xC\x1\x3\x5\xFFFF\x2\xC\x2\xFFFF\x1"+
				"\xC\x6\xFFFF\x1\xC\x3\xFFFF\x2\xC\x2\xFFFF\x2\xC\x6\xFFFF\x1\xC\x5\xFFFF"+
				"\x1\x2\x5\xFFFF\x1\x4\x1\xFFFF\x1\x6\x2\xFFFF\x1\x5\x4\xFFFF\x1\xB\x2"+
				"\xFFFF\x1\xC\x1\x1\x1\xFFFF\x1\xA\x5\xFFFF\x1\x8\x1\xFFFF\x1\x9\x1\xFFFF"+
				"\x2\xC\x5\xFFFF\x1\x7\x2\xFFFF\x1\xC\x2\xFFFF\x1\xC\x3\xFFFF\x1\xC\x1"+
				"\xFFFF\x1\xC\x7\xFFFF\x1\xC",
				"\x1\x21\x26\xFFFF\x1\x2B\x5\xFFFF\x1\x22\x1\xFFFF\x1\x24\x2\xFFFF\x1"+
				"\x23\x4\xFFFF\x1\x29\x3\xFFFF\x1\x2A\x1\xFFFF\x1\x28\x5\xFFFF\x1\x26"+
				"\x1\xFFFF\x1\x27\x8\xFFFF\x1\x25",
				"\x1\x2C",
				"\x1\x30\xA\xFFFF\x7\xC\x1\xFFFF\x9\xC\x1\x2E\x1\xFFFF\x2\xC\x1\xFFFF"+
				"\x1\xC\x1\x2D\x4\xC\x1\xFFFF\x1\x2F\x1\xFFFF\x2\xC\x16\xFFFF\x1\xC\x1B"+
				"\xFFFF\x3\xC",
				"\x1\x4F\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x4E",
				"\x1\x52\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x51",
				"\x1\x55\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x54",
				"\x1\x58\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x57",
				"\x1\x5B\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x5A",
				"\x1\x5E\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x5D",
				"\x1\x61\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x60",
				"\x1\x64\x1B\xFFFF\x1\xC\xB\xFFFF\x1\x63",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\x69\x1B\xFFFF\x1\x67\x5\xFFFF\x1\x66\x5\xFFFF\x1\x68",
				"\x1\x6B\x27\xFFFF\x1\x6A",
				"\x1\x6D\x27\xFFFF\x1\x6C",
				"\x1\x6F\x27\xFFFF\x1\x6E",
				"\x1\x71\x27\xFFFF\x1\x70",
				"\x1\x73\x27\xFFFF\x1\x72",
				"\x1\x75\x27\xFFFF\x1\x74",
				"\x1\x77\x27\xFFFF\x1\x76",
				"\x1\x79\x27\xFFFF\x1\x78",
				"\x1\x7A\x26\xFFFF\x1\x84\x5\xFFFF\x1\x7B\x1\xFFFF\x1\x7D\x2\xFFFF\x1"+
				"\x7C\x4\xFFFF\x1\x82\x3\xFFFF\x1\x83\x1\xFFFF\x1\x81\x5\xFFFF\x1\x7F"+
				"\x1\xFFFF\x1\x80\x8\xFFFF\x1\x7E",
				"\x1\x85",
				"\x1\x88\x10\xFFFF\x1\x87\xA\xFFFF\x1\x86\xA\xFFFF\x1\x92\x5\xFFFF\x1"+
				"\x89\x1\xFFFF\x1\x8B\x2\xFFFF\x1\x8A\x4\xFFFF\x1\x90\x3\xFFFF\x1\x91"+
				"\x1\xFFFF\x1\x8F\x5\xFFFF\x1\x8D\x1\xFFFF\x1\x8E\x8\xFFFF\x1\x8C",
				"\x2\xC\x4\xFFFF\x1\xC\x1\xFFFF\x1\xC\x1\x95\x5\xFFFF\x2\xC\x2\xFFFF"+
				"\x1\xC\x6\xFFFF\x1\xC\x3\xFFFF\x2\xC\x2\xFFFF\x2\xC\x7\xFFFF\x2\xC\x2"+
				"\xFFFF\x1\x9E\x6\xFFFF\x1\x96\x1\xFFFF\x1\x98\x2\xFFFF\x1\x97\x4\xFFFF"+
				"\x1\x9D\x2\xFFFF\x1\xC\x2\xFFFF\x1\x9C\x5\xFFFF\x1\x9A\x1\xFFFF\x1\x9B"+
				"\x1\xFFFF\x2\xC\x5\xFFFF\x1\x99\x2\xFFFF\x1\xC\x2\xFFFF\x1\xC\x3\xFFFF"+
				"\x1\xC\x1\xFFFF\x1\xC\x7\xFFFF\x1\xC",
				"\x1\xB3\x21\xFFFF\x1\xC\x10\xFFFF\x1\xC\x13\xFFFF\x1\xC\x9\xFFFF\x1"+
				"\xC\x2\xFFFF\x1\xC",
				"\x2\xC\x4\xFFFF\x1\xC\x1\xFFFF\x2\xC\x5\xFFFF\x2\xC\x2\xFFFF\x1\xC\x6"+
				"\xFFFF\x1\xC\x3\xFFFF\x2\xC\x2\xFFFF\x2\xC\xE\xFFFF\x1\xB9\x3\xFFFF"+
				"\x1\xC\x1\xFFFF\x1\xC\x2\xFFFF\x1\xC\x4\xFFFF\x1\xC\x2\xFFFF\x1\xC\x2"+
				"\xFFFF\x1\xC\x5\xFFFF\x1\xC\x1\xFFFF\x1\xC\x1\xFFFF\x2\xC\x5\xFFFF\x1"+
				"\xC\x2\xFFFF\x1\xC\x2\xFFFF\x1\xC\x3\xFFFF\x1\xC\x1\xFFFF\x1\xC\x7\xFFFF"+
				"\x1\xC",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xDC",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\xE2",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\xE8",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\xEE",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\xF4",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\xFA",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\x100",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\x106",
				"\x1\xC\x7\xFFFF\x1\xD7\x1\xC\x1\xFFFF\x1\xC\x4\xFFFF\x1\xC",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA128_eot = DFA.UnpackEncodedString(DFA128_eotS);
		private static readonly short[] DFA128_eof = DFA.UnpackEncodedString(DFA128_eofS);
		private static readonly char[] DFA128_min = DFA.UnpackEncodedStringToUnsignedChars(DFA128_minS);
		private static readonly char[] DFA128_max = DFA.UnpackEncodedStringToUnsignedChars(DFA128_maxS);
		private static readonly short[] DFA128_accept = DFA.UnpackEncodedString(DFA128_acceptS);
		private static readonly short[] DFA128_special = DFA.UnpackEncodedString(DFA128_specialS);
		private static readonly short[][] DFA128_transition;

		static DFA128()
		{
			int numStates = DFA128_transitionS.Length;
			DFA128_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA128_transition[i] = DFA.UnpackEncodedString(DFA128_transitionS[i]);
			}
		}

		public DFA128( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 128;
			this.eot = DFA128_eot;
			this.eof = DFA128_eof;
			this.min = DFA128_min;
			this.max = DFA128_max;
			this.accept = DFA128_accept;
			this.special = DFA128_special;
			this.transition = DFA128_transition;
		}

		public override string Description { get { return "592:1: forControl options {k=3; } : ( enhancedForControl | ( forInit )? ';' ( expression )? ';' ( forUpdate )? );"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition128(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA128_1 = input.LA(1);
		int index128_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 1:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 2:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 3:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 4:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 5:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 6:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 7:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 8:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 9:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 10:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 11:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 12:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 13:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 14:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 15:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 16:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 17:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 18:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 19:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 20:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 21:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 22:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 23:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 24:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 25:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 26:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 27:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 28:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 29:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 30:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 31:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 32:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 33:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 34:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 35:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 36:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 37:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 38:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 39:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 40:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 41:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 42:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 43:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 44:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 45:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 46:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 47:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 48:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 49:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 50:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 51:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 52:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 53:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 54:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 55:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 56:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 57:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 58:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 59:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 60:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 61:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 62:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 63:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}
		case 64:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred182_JavaJava_fragment))) {s = 215;}

				else if ((true)) {s = 12;}

				input.Seek(index128_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 128, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA154 : DFA
	{
		private const string DFA154_eotS =
			"\xE\xFFFF";
		private const string DFA154_eofS =
			"\xE\xFFFF";
		private const string DFA154_minS =
			"\x1\x6\x1\x0\x8\x21\x2\xFFFF\x1\x38\x1\x21";
		private const string DFA154_maxS =
			"\x1\x71\x1\x0\x8\x37\x2\xFFFF\x1\x38\x1\x37";
		private const string DFA154_acceptS =
			"\xA\xFFFF\x1\x2\x1\x1\x2\xFFFF";
		private const string DFA154_specialS =
			"\x1\xFFFF\x1\x0\xC\xFFFF}>";
		private static readonly string[] DFA154_transitionS =
			{
				"\x2\xA\x4\xFFFF\x1\xA\x1\xFFFF\x1\xA\x1\x1\x5\xFFFF\x2\xA\x2\xFFFF\x1"+
				"\xA\x6\xFFFF\x1\xA\x3\xFFFF\x2\xA\x2\xFFFF\x2\xA\x12\xFFFF\x1\x2\x1"+
				"\xFFFF\x1\x4\x2\xFFFF\x1\x3\x4\xFFFF\x1\x9\x2\xFFFF\x1\xA\x2\xFFFF\x1"+
				"\x8\x5\xFFFF\x1\x6\x1\xFFFF\x1\x7\x1\xFFFF\x2\xA\x5\xFFFF\x1\x5\x2\xFFFF"+
				"\x1\xA\x2\xFFFF\x1\xA\x3\xFFFF\x1\xA\x1\xFFFF\x1\xA\x7\xFFFF\x1\xA",
				"\x1\xFFFF",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC",
				"",
				"",
				"\x1\xD",
				"\x1\xB\x9\xFFFF\x1\xA\xB\xFFFF\x1\xC"
			};

		private static readonly short[] DFA154_eot = DFA.UnpackEncodedString(DFA154_eotS);
		private static readonly short[] DFA154_eof = DFA.UnpackEncodedString(DFA154_eofS);
		private static readonly char[] DFA154_min = DFA.UnpackEncodedStringToUnsignedChars(DFA154_minS);
		private static readonly char[] DFA154_max = DFA.UnpackEncodedStringToUnsignedChars(DFA154_maxS);
		private static readonly short[] DFA154_accept = DFA.UnpackEncodedString(DFA154_acceptS);
		private static readonly short[] DFA154_special = DFA.UnpackEncodedString(DFA154_specialS);
		private static readonly short[][] DFA154_transition;

		static DFA154()
		{
			int numStates = DFA154_transitionS.Length;
			DFA154_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA154_transition[i] = DFA.UnpackEncodedString(DFA154_transitionS[i]);
			}
		}

		public DFA154( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 154;
			this.eot = DFA154_eot;
			this.eof = DFA154_eof;
			this.min = DFA154_min;
			this.max = DFA154_max;
			this.accept = DFA154_accept;
			this.special = DFA154_special;
			this.transition = DFA154_transition;
		}

		public override string Description { get { return "753:21: ( type | expression )"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition154(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		s = -1;
		int LA154_1 = input.LA(1);
		int index154_1 = input.Index;
		switch (_s)
		{
		case 0:
			{
				input.Rewind();
				if ((EvaluatePredicate(synpred234_JavaJava_fragment))) {s = 11;}

				else if ((true)) {s = 10;}

				input.Seek(index154_1);
				break;
			}

		default:
			break;
		}

		if (s >= 0)
			return s;

		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 154, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}

	#endregion DFA

	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _annotations_in_compilationUnit75 = new BitSet(new ulong[]{0x840000000000100UL,0xCF080404UL});
		public static readonly BitSet _packageDeclaration_in_compilationUnit89 = new BitSet(new ulong[]{0x841000000000102UL,0xCE090404UL});
		public static readonly BitSet _importDeclaration_in_compilationUnit91 = new BitSet(new ulong[]{0x841000000000102UL,0xCE090404UL});
		public static readonly BitSet _typeDeclaration_in_compilationUnit94 = new BitSet(new ulong[]{0x841000000000102UL,0xCE080404UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_compilationUnit109 = new BitSet(new ulong[]{0x841000000000102UL,0xCE080404UL});
		public static readonly BitSet _typeDeclaration_in_compilationUnit111 = new BitSet(new ulong[]{0x841000000000102UL,0xCE080404UL});
		public static readonly BitSet _packageDeclaration_in_compilationUnit132 = new BitSet(new ulong[]{0x841000000000102UL,0xCE090404UL});
		public static readonly BitSet _importDeclaration_in_compilationUnit135 = new BitSet(new ulong[]{0x841000000000102UL,0xCE090404UL});
		public static readonly BitSet _typeDeclaration_in_compilationUnit138 = new BitSet(new ulong[]{0x841000000000102UL,0xCE080404UL});
		public static readonly BitSet _88_in_packageDeclaration158 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedName_in_packageDeclaration161 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_packageDeclaration163 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _80_in_importDeclaration188 = new BitSet(new ulong[]{0x8000UL,0x40000000UL});
		public static readonly BitSet _94_in_importDeclaration192 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedName_in_importDeclaration195 = new BitSet(new ulong[]{0x1080000000000UL});
		public static readonly BitSet _43_in_importDeclaration200 = new BitSet(new ulong[]{0x400000000UL});
		public static readonly BitSet _34_in_importDeclaration204 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_importDeclaration210 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_typeDeclaration235 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_typeDeclaration245 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceModifiers_in_classOrInterfaceDeclaration269 = new BitSet(new ulong[]{0x40000000000100UL,0x80004UL});
		public static readonly BitSet _classDeclaration_in_classOrInterfaceDeclaration272 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_classOrInterfaceDeclaration276 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceModifier_in_classOrInterfaceModifiers300 = new BitSet(new ulong[]{0x840000000000002UL,0xCE000400UL});
		public static readonly BitSet _annotation_in_classOrInterfaceModifier320 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _91_in_classOrInterfaceModifier333 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _90_in_classOrInterfaceModifier349 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _89_in_classOrInterfaceModifier362 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_classOrInterfaceModifier377 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _94_in_classOrInterfaceModifier391 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_classOrInterfaceModifier407 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _95_in_classOrInterfaceModifier424 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifier_in_modifiers447 = new BitSet(new ulong[]{0x840000000000002UL,0x444CE200400UL});
		public static readonly BitSet _normalClassDeclaration_in_classDeclaration467 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_classDeclaration477 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _66_in_normalClassDeclaration500 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_normalClassDeclaration502 = new BitSet(new ulong[]{0x2000000000000UL,0x100000008100UL});
		public static readonly BitSet _typeParameters_in_normalClassDeclaration507 = new BitSet(new ulong[]{0x0UL,0x100000008100UL});
		public static readonly BitSet _72_in_normalClassDeclaration519 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_normalClassDeclaration522 = new BitSet(new ulong[]{0x0UL,0x100000008000UL});
		public static readonly BitSet _79_in_normalClassDeclaration536 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _typeList_in_normalClassDeclaration540 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _classBody_in_normalClassDeclaration553 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_typeParameters576 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _typeParameter_in_typeParameters579 = new BitSet(new ulong[]{0x10008000000000UL});
		public static readonly BitSet _39_in_typeParameters582 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _typeParameter_in_typeParameters585 = new BitSet(new ulong[]{0x10008000000000UL});
		public static readonly BitSet _52_in_typeParameters589 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_typeParameter614 = new BitSet(new ulong[]{0x2UL,0x100UL});
		public static readonly BitSet _72_in_typeParameter616 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _typeBound_in_typeParameter619 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeBound648 = new BitSet(new ulong[]{0x40000002UL});
		public static readonly BitSet _30_in_typeBound651 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_typeBound653 = new BitSet(new ulong[]{0x40000002UL});
		public static readonly BitSet _ENUM_in_enumDeclaration674 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_enumDeclaration676 = new BitSet(new ulong[]{0x0UL,0x100000008000UL});
		public static readonly BitSet _79_in_enumDeclaration679 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _typeList_in_enumDeclaration683 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _enumBody_in_enumDeclaration687 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_enumBody706 = new BitSet(new ulong[]{0x41008000008000UL,0x1000000000000UL});
		public static readonly BitSet _enumConstants_in_enumBody710 = new BitSet(new ulong[]{0x1008000000000UL,0x1000000000000UL});
		public static readonly BitSet _39_in_enumBody713 = new BitSet(new ulong[]{0x1000000000000UL,0x1000000000000UL});
		public static readonly BitSet _enumBodyDeclarations_in_enumBody716 = new BitSet(new ulong[]{0x0UL,0x1000000000000UL});
		public static readonly BitSet _112_in_enumBody719 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumConstant_in_enumConstants740 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_enumConstants743 = new BitSet(new ulong[]{0x40000000008000UL});
		public static readonly BitSet _enumConstant_in_enumConstants747 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _annotations_in_enumConstant772 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_enumConstant775 = new BitSet(new ulong[]{0x100000002UL,0x100000000000UL});
		public static readonly BitSet _arguments_in_enumConstant777 = new BitSet(new ulong[]{0x2UL,0x100000000000UL});
		public static readonly BitSet _classBody_in_enumConstant780 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_enumBodyDeclarations804 = new BitSet(new ulong[]{0x5843000000008102UL,0x1644EE3C1446UL});
		public static readonly BitSet _classBodyDeclaration_in_enumBodyDeclarations807 = new BitSet(new ulong[]{0x5843000000008102UL,0x1644EE3C1446UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_interfaceDeclaration832 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_interfaceDeclaration842 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _83_in_normalInterfaceDeclaration865 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_normalInterfaceDeclaration869 = new BitSet(new ulong[]{0x2000000000000UL,0x100000000100UL});
		public static readonly BitSet _typeParameters_in_normalInterfaceDeclaration873 = new BitSet(new ulong[]{0x0UL,0x100000000100UL});
		public static readonly BitSet _72_in_normalInterfaceDeclaration877 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _typeList_in_normalInterfaceDeclaration880 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _interfaceBody_in_normalInterfaceDeclaration884 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeList907 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_typeList910 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_typeList914 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _108_in_classBody939 = new BitSet(new ulong[]{0x5843000000008100UL,0x11644EE3C1446UL});
		public static readonly BitSet _classBodyDeclaration_in_classBody943 = new BitSet(new ulong[]{0x5843000000008100UL,0x11644EE3C1446UL});
		public static readonly BitSet _112_in_classBody946 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_interfaceBody970 = new BitSet(new ulong[]{0x5843000000008100UL,0x10644EE3C1446UL});
		public static readonly BitSet _interfaceBodyDeclaration_in_interfaceBody973 = new BitSet(new ulong[]{0x5843000000008100UL,0x10644EE3C1446UL});
		public static readonly BitSet _112_in_interfaceBody976 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_classBodyDeclaration996 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _94_in_classBodyDeclaration1008 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _block_in_classBodyDeclaration1015 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_classBodyDeclaration1025 = new BitSet(new ulong[]{0x5042000000008100UL,0x200201C1046UL});
		public static readonly BitSet _memberDecl_in_classBodyDeclaration1027 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _genericMethodOrConstructorDecl_in_memberDecl1052 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _memberDeclaration_in_memberDecl1062 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _105_in_memberDecl1074 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_memberDecl1077 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _voidMethodDeclaratorRest_in_memberDecl1082 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_memberDecl1094 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _constructorDeclaratorRest_in_memberDecl1099 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_memberDecl1109 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_memberDecl1119 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_memberDeclaration1142 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _methodDeclaration_in_memberDeclaration1147 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _fieldDeclaration_in_memberDeclaration1155 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeParameters_in_genericMethodOrConstructorDecl1175 = new BitSet(new ulong[]{0x5000000000008000UL,0x20020141042UL});
		public static readonly BitSet _genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl1177 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_genericMethodOrConstructorRest1201 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _105_in_genericMethodOrConstructorRest1205 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_genericMethodOrConstructorRest1208 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _methodDeclaratorRest_in_genericMethodOrConstructorRest1212 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_genericMethodOrConstructorRest1222 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _constructorDeclaratorRest_in_genericMethodOrConstructorRest1226 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_methodDeclaration1245 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _methodDeclaratorRest_in_methodDeclaration1249 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableDeclarators_in_fieldDeclaration1267 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_fieldDeclaration1269 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_interfaceBodyDeclaration1297 = new BitSet(new ulong[]{0x5042000000008100UL,0x200201C1046UL});
		public static readonly BitSet _interfaceMemberDecl_in_interfaceBodyDeclaration1299 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_interfaceBodyDeclaration1309 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceMethodOrFieldDecl_in_interfaceMemberDecl1328 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceGenericMethodDecl_in_interfaceMemberDecl1338 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _105_in_interfaceMemberDecl1348 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_interfaceMemberDecl1351 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _voidInterfaceMethodDeclaratorRest_in_interfaceMemberDecl1355 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceDeclaration_in_interfaceMemberDecl1365 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classDeclaration_in_interfaceMemberDecl1375 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_interfaceMethodOrFieldDecl1398 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_interfaceMethodOrFieldDecl1400 = new BitSet(new ulong[]{0x84000100000000UL});
		public static readonly BitSet _interfaceMethodOrFieldRest_in_interfaceMethodOrFieldDecl1404 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constantDeclaratorsRest_in_interfaceMethodOrFieldRest1428 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_interfaceMethodOrFieldRest1430 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _interfaceMethodDeclaratorRest_in_interfaceMethodOrFieldRest1442 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _formalParameters_in_methodDeclaratorRest1465 = new BitSet(new ulong[]{0x81000000000000UL,0x102000000000UL});
		public static readonly BitSet _55_in_methodDeclaratorRest1468 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_methodDeclaratorRest1472 = new BitSet(new ulong[]{0x81000000000000UL,0x102000000000UL});
		public static readonly BitSet _101_in_methodDeclaratorRest1486 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedNameList_in_methodDeclaratorRest1490 = new BitSet(new ulong[]{0x1000000000000UL,0x100000000000UL});
		public static readonly BitSet _methodBody_in_methodDeclaratorRest1506 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_methodDeclaratorRest1520 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _formalParameters_in_voidMethodDeclaratorRest1553 = new BitSet(new ulong[]{0x1000000000000UL,0x102000000000UL});
		public static readonly BitSet _101_in_voidMethodDeclaratorRest1556 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedNameList_in_voidMethodDeclaratorRest1559 = new BitSet(new ulong[]{0x1000000000000UL,0x100000000000UL});
		public static readonly BitSet _methodBody_in_voidMethodDeclaratorRest1575 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_voidMethodDeclaratorRest1589 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _formalParameters_in_interfaceMethodDeclaratorRest1623 = new BitSet(new ulong[]{0x81000000000000UL,0x2000000000UL});
		public static readonly BitSet _55_in_interfaceMethodDeclaratorRest1626 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_interfaceMethodDeclaratorRest1630 = new BitSet(new ulong[]{0x81000000000000UL,0x2000000000UL});
		public static readonly BitSet _101_in_interfaceMethodDeclaratorRest1637 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedNameList_in_interfaceMethodDeclaratorRest1640 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_interfaceMethodDeclaratorRest1644 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _typeParameters_in_interfaceGenericMethodDecl1669 = new BitSet(new ulong[]{0x5000000000008000UL,0x20020141042UL});
		public static readonly BitSet _type_in_interfaceGenericMethodDecl1672 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _105_in_interfaceGenericMethodDecl1676 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_interfaceGenericMethodDecl1681 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl1693 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _formalParameters_in_voidInterfaceMethodDeclaratorRest1715 = new BitSet(new ulong[]{0x1000000000000UL,0x2000000000UL});
		public static readonly BitSet _101_in_voidInterfaceMethodDeclaratorRest1718 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedNameList_in_voidInterfaceMethodDeclaratorRest1721 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_voidInterfaceMethodDeclaratorRest1725 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _formalParameters_in_constructorDeclaratorRest1750 = new BitSet(new ulong[]{0x0UL,0x102000000000UL});
		public static readonly BitSet _101_in_constructorDeclaratorRest1753 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedNameList_in_constructorDeclaratorRest1757 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _constructorBody_in_constructorDeclaratorRest1761 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_constantDeclarator1780 = new BitSet(new ulong[]{0x84000000000000UL});
		public static readonly BitSet _constantDeclaratorRest_in_constantDeclarator1784 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableDeclarator_in_variableDeclarators1807 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_variableDeclarators1810 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _variableDeclarator_in_variableDeclarators1814 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _variableDeclaratorId_in_variableDeclarator1837 = new BitSet(new ulong[]{0x4000000000002UL});
		public static readonly BitSet _50_in_variableDeclarator1840 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2128920D41242UL});
		public static readonly BitSet _variableInitializer_in_variableDeclarator1842 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constantDeclaratorRest_in_constantDeclaratorsRest1867 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_constantDeclaratorsRest1870 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _constantDeclarator_in_constantDeclaratorsRest1874 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _55_in_constantDeclaratorRest1896 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_constantDeclaratorRest1900 = new BitSet(new ulong[]{0x84000000000000UL});
		public static readonly BitSet _50_in_constantDeclaratorRest1907 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2128920D41242UL});
		public static readonly BitSet _variableInitializer_in_constantDeclaratorRest1909 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_variableDeclaratorId1932 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _55_in_variableDeclaratorId1938 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_variableDeclaratorId1941 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _arrayInitializer_in_variableInitializer1964 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_variableInitializer1974 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_arrayInitializer2001 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x3128920D41242UL});
		public static readonly BitSet _variableInitializer_in_arrayInitializer2005 = new BitSet(new ulong[]{0x8000000000UL,0x1000000000000UL});
		public static readonly BitSet _39_in_arrayInitializer2008 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2128920D41242UL});
		public static readonly BitSet _variableInitializer_in_arrayInitializer2012 = new BitSet(new ulong[]{0x8000000000UL,0x1000000000000UL});
		public static readonly BitSet _39_in_arrayInitializer2017 = new BitSet(new ulong[]{0x0UL,0x1000000000000UL});
		public static readonly BitSet _112_in_arrayInitializer2024 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_modifier2044 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _91_in_modifier2054 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _90_in_modifier2067 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _89_in_modifier2079 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _94_in_modifier2091 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_modifier2104 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_modifier2116 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_modifier2129 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _98_in_modifier2144 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _102_in_modifier2156 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _106_in_modifier2170 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _95_in_modifier2183 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qualifiedName_in_packageOrTypeName2205 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_enumConstantName2224 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qualifiedName_in_typeName2245 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceType_in_type2259 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _55_in_type2262 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_type2266 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _primitiveType_in_type2276 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _55_in_type2280 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_type2284 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _Identifier_in_classOrInterfaceType2303 = new BitSet(new ulong[]{0x2080000000002UL});
		public static readonly BitSet _typeArguments_in_classOrInterfaceType2307 = new BitSet(new ulong[]{0x80000000002UL});
		public static readonly BitSet _43_in_classOrInterfaceType2311 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_classOrInterfaceType2315 = new BitSet(new ulong[]{0x2080000000002UL});
		public static readonly BitSet _typeArguments_in_classOrInterfaceType2317 = new BitSet(new ulong[]{0x80000000002UL});
		public static readonly BitSet _60_in_primitiveType2338 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _65_in_primitiveType2350 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _62_in_primitiveType2363 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _93_in_primitiveType2376 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _82_in_primitiveType2389 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _84_in_primitiveType2403 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _76_in_primitiveType2416 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _70_in_primitiveType2429 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _74_in_variableModifier2451 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_variableModifier2462 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_typeArguments2481 = new BitSet(new ulong[]{0x5020000000008000UL,0x20141042UL});
		public static readonly BitSet _typeArgument_in_typeArguments2485 = new BitSet(new ulong[]{0x10008000000000UL});
		public static readonly BitSet _39_in_typeArguments2488 = new BitSet(new ulong[]{0x5020000000008000UL,0x20141042UL});
		public static readonly BitSet _typeArgument_in_typeArguments2491 = new BitSet(new ulong[]{0x10008000000000UL});
		public static readonly BitSet _52_in_typeArguments2495 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_typeArgument2519 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _53_in_typeArgument2529 = new BitSet(new ulong[]{0x2UL,0x100000100UL});
		public static readonly BitSet _72_in_typeArgument2533 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _96_in_typeArgument2538 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_typeArgument2543 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _qualifiedName_in_qualifiedNameList2569 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_qualifiedNameList2572 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _qualifiedName_in_qualifiedNameList2576 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _32_in_formalParameters2597 = new BitSet(new ulong[]{0x5040000200008000UL,0x20141442UL});
		public static readonly BitSet _formalParameterDecls_in_formalParameters2601 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_formalParameters2604 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_formalParameterDecls2630 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_formalParameterDecls2632 = new BitSet(new ulong[]{0x100000008000UL});
		public static readonly BitSet _formalParameterDeclsRest_in_formalParameterDecls2634 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableDeclaratorId_in_formalParameterDeclsRest2659 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_formalParameterDeclsRest2662 = new BitSet(new ulong[]{0x5040000000008000UL,0x20141442UL});
		public static readonly BitSet _formalParameterDecls_in_formalParameterDeclsRest2666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _44_in_formalParameterDeclsRest2678 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _variableDeclaratorId_in_formalParameterDeclsRest2680 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _block_in_methodBody2702 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_constructorBody2723 = new BitSet(new ulong[]{0x784303310260D1D0UL,0x31B9FFEDC766EUL});
		public static readonly BitSet _explicitConstructorInvocation_in_constructorBody2726 = new BitSet(new ulong[]{0x784103310260D1D0UL,0x31B9FFEDC766EUL});
		public static readonly BitSet _blockStatement_in_constructorBody2729 = new BitSet(new ulong[]{0x784103310260D1D0UL,0x31B9FFEDC766EUL});
		public static readonly BitSet _112_in_constructorBody2732 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_explicitConstructorInvocation2753 = new BitSet(new ulong[]{0x0UL,0x900000000UL});
		public static readonly BitSet _99_in_explicitConstructorInvocation2757 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _96_in_explicitConstructorInvocation2762 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _arguments_in_explicitConstructorInvocation2767 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_explicitConstructorInvocation2769 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_in_explicitConstructorInvocation2781 = new BitSet(new ulong[]{0x80000000000UL});
		public static readonly BitSet _43_in_explicitConstructorInvocation2783 = new BitSet(new ulong[]{0x2000000000000UL,0x100000000UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_explicitConstructorInvocation2786 = new BitSet(new ulong[]{0x0UL,0x100000000UL});
		public static readonly BitSet _96_in_explicitConstructorInvocation2789 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _arguments_in_explicitConstructorInvocation2791 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_explicitConstructorInvocation2793 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_qualifiedName2817 = new BitSet(new ulong[]{0x80000000002UL});
		public static readonly BitSet _43_in_qualifiedName2822 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_qualifiedName2828 = new BitSet(new ulong[]{0x80000000002UL});
		public static readonly BitSet _integerLiteral_in_literal2857 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _FloatingPointLiteral_in_literal2867 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _CharacterLiteral_in_literal2880 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _StringLiteral_in_literal2893 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _boolLiteral_in_literal2905 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _87_in_literal2915 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _HexLiteral_in_integerLiteral2936 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _OctalLiteral_in_integerLiteral2948 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _DecimalLiteral_in_integerLiteral2960 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _103_in_boolLiteral2981 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _73_in_boolLiteral2993 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_annotations3015 = new BitSet(new ulong[]{0x40000000000002UL});
		public static readonly BitSet _54_in_annotation3035 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _annotationName_in_annotation3037 = new BitSet(new ulong[]{0x100000002UL});
		public static readonly BitSet _32_in_annotation3041 = new BitSet(new ulong[]{0x504003330260D0C0UL,0x2128920D41242UL});
		public static readonly BitSet _elementValuePairs_in_annotation3047 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _elementValue_in_annotation3051 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_annotation3056 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_annotationName3086 = new BitSet(new ulong[]{0x80000000002UL});
		public static readonly BitSet _43_in_annotationName3090 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_annotationName3094 = new BitSet(new ulong[]{0x80000000002UL});
		public static readonly BitSet _elementValuePair_in_elementValuePairs3115 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_elementValuePairs3118 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _elementValuePair_in_elementValuePairs3122 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _Identifier_in_elementValuePair3143 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_elementValuePair3147 = new BitSet(new ulong[]{0x504003310260D0C0UL,0x2128920D41242UL});
		public static readonly BitSet _elementValue_in_elementValuePair3151 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalExpression_in_elementValue3174 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_elementValue3184 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _elementValueArrayInitializer_in_elementValue3194 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_elementValueArrayInitializer3217 = new BitSet(new ulong[]{0x504003B10260D0C0UL,0x3128920D41242UL});
		public static readonly BitSet _elementValue_in_elementValueArrayInitializer3221 = new BitSet(new ulong[]{0x8000000000UL,0x1000000000000UL});
		public static readonly BitSet _39_in_elementValueArrayInitializer3224 = new BitSet(new ulong[]{0x504003310260D0C0UL,0x2128920D41242UL});
		public static readonly BitSet _elementValue_in_elementValueArrayInitializer3227 = new BitSet(new ulong[]{0x8000000000UL,0x1000000000000UL});
		public static readonly BitSet _39_in_elementValueArrayInitializer3234 = new BitSet(new ulong[]{0x0UL,0x1000000000000UL});
		public static readonly BitSet _112_in_elementValueArrayInitializer3239 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _54_in_annotationTypeDeclaration3263 = new BitSet(new ulong[]{0x0UL,0x80000UL});
		public static readonly BitSet _83_in_annotationTypeDeclaration3265 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_annotationTypeDeclaration3267 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _annotationTypeBody_in_annotationTypeDeclaration3271 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_annotationTypeBody3294 = new BitSet(new ulong[]{0x5840000000008100UL,0x10444EE3C1446UL});
		public static readonly BitSet _annotationTypeElementDeclaration_in_annotationTypeBody3298 = new BitSet(new ulong[]{0x5840000000008100UL,0x10444EE3C1446UL});
		public static readonly BitSet _112_in_annotationTypeBody3302 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _modifiers_in_annotationTypeElementDeclaration3326 = new BitSet(new ulong[]{0x5040000000008100UL,0x201C1046UL});
		public static readonly BitSet _annotationTypeElementRest_in_annotationTypeElementDeclaration3328 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_annotationTypeElementRest3351 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _annotationMethodOrConstantRest_in_annotationTypeElementRest3353 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_annotationTypeElementRest3355 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalClassDeclaration_in_annotationTypeElementRest3365 = new BitSet(new ulong[]{0x1000000000002UL});
		public static readonly BitSet _48_in_annotationTypeElementRest3367 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _normalInterfaceDeclaration_in_annotationTypeElementRest3378 = new BitSet(new ulong[]{0x1000000000002UL});
		public static readonly BitSet _48_in_annotationTypeElementRest3380 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumDeclaration_in_annotationTypeElementRest3391 = new BitSet(new ulong[]{0x1000000000002UL});
		public static readonly BitSet _48_in_annotationTypeElementRest3393 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationTypeDeclaration_in_annotationTypeElementRest3404 = new BitSet(new ulong[]{0x1000000000002UL});
		public static readonly BitSet _48_in_annotationTypeElementRest3406 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationMethodRest_in_annotationMethodOrConstantRest3430 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotationConstantRest_in_annotationMethodOrConstantRest3440 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_annotationMethodRest3463 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _32_in_annotationMethodRest3467 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_annotationMethodRest3472 = new BitSet(new ulong[]{0x2UL,0x10UL});
		public static readonly BitSet _defaultValue_in_annotationMethodRest3476 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableDeclarators_in_annotationConstantRest3500 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_defaultValue3523 = new BitSet(new ulong[]{0x504003310260D0C0UL,0x2128920D41242UL});
		public static readonly BitSet _elementValue_in_defaultValue3527 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _108_in_block3548 = new BitSet(new ulong[]{0x784103310260D1D0UL,0x31B9FFEDC766EUL});
		public static readonly BitSet _blockStatement_in_block3552 = new BitSet(new ulong[]{0x784103310260D1D0UL,0x31B9FFEDC766EUL});
		public static readonly BitSet _112_in_block3555 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclarationStatement_in_blockStatement3581 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_blockStatement3591 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_in_blockStatement3600 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_localVariableDeclarationStatement3625 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_localVariableDeclarationStatement3628 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_localVariableDeclaration3649 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_localVariableDeclaration3651 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _variableDeclarators_in_localVariableDeclaration3653 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifier_in_variableModifiers3678 = new BitSet(new ulong[]{0x40000000000002UL,0x400UL});
		public static readonly BitSet _block_in_statement3696 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _ASSERT_in_statement3706 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_statement3708 = new BitSet(new ulong[]{0x1800000000000UL});
		public static readonly BitSet _47_in_statement3711 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_statement3713 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_statement3717 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _78_in_statement3727 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _parExpression_in_statement3730 = new BitSet(new ulong[]{0x700103310260D0D0UL,0x21B9F30D4726AUL});
		public static readonly BitSet _statement_in_statement3732 = new BitSet(new ulong[]{0x2UL,0x80UL});
		public static readonly BitSet _71_in_statement3742 = new BitSet(new ulong[]{0x700103310260D0D0UL,0x21B9F30D4726AUL});
		public static readonly BitSet _statement_in_statement3746 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _77_in_statement3758 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _32_in_statement3762 = new BitSet(new ulong[]{0x504103310260D0C0UL,0x2028920D41642UL});
		public static readonly BitSet _forControl_in_statement3766 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_statement3768 = new BitSet(new ulong[]{0x700103310260D0D0UL,0x21B9F30D4726AUL});
		public static readonly BitSet _statement_in_statement3772 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _107_in_statement3782 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _parExpression_in_statement3785 = new BitSet(new ulong[]{0x700103310260D0D0UL,0x21B9F30D4726AUL});
		public static readonly BitSet _statement_in_statement3788 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _69_in_statement3798 = new BitSet(new ulong[]{0x700103310260D0D0UL,0x21B9F30D4726AUL});
		public static readonly BitSet _statement_in_statement3801 = new BitSet(new ulong[]{0x0UL,0x80000000000UL});
		public static readonly BitSet _107_in_statement3803 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _parExpression_in_statement3807 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_statement3809 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _104_in_statement3821 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _block_in_statement3824 = new BitSet(new ulong[]{0x0UL,0x801UL});
		public static readonly BitSet _catches_in_statement3836 = new BitSet(new ulong[]{0x0UL,0x800UL});
		public static readonly BitSet _75_in_statement3838 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _block_in_statement3841 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_statement3853 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _75_in_statement3867 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _block_in_statement3870 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _97_in_statement3890 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _parExpression_in_statement3894 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _108_in_statement3896 = new BitSet(new ulong[]{0x8000000000000000UL,0x1000000000010UL});
		public static readonly BitSet _switchBlockStatementGroups_in_statement3898 = new BitSet(new ulong[]{0x0UL,0x1000000000000UL});
		public static readonly BitSet _112_in_statement3900 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _98_in_statement3910 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _parExpression_in_statement3913 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _block_in_statement3915 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _92_in_statement3925 = new BitSet(new ulong[]{0x500103310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_statement3929 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_statement3932 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _100_in_statement3944 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_statement3947 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_statement3949 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _61_in_statement3961 = new BitSet(new ulong[]{0x1000000008000UL});
		public static readonly BitSet _Identifier_in_statement3964 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_statement3968 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _67_in_statement3980 = new BitSet(new ulong[]{0x1000000008000UL});
		public static readonly BitSet _Identifier_in_statement3984 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_statement3989 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _48_in_statement4001 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statementExpression_in_statement4013 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_statement4015 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_statement4028 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_statement4032 = new BitSet(new ulong[]{0x700103310260D0D0UL,0x21B9F30D4726AUL});
		public static readonly BitSet _statement_in_statement4034 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catchClause_in_catches4057 = new BitSet(new ulong[]{0x2UL,0x1UL});
		public static readonly BitSet _catchClause_in_catches4060 = new BitSet(new ulong[]{0x2UL,0x1UL});
		public static readonly BitSet _64_in_catchClause4085 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _32_in_catchClause4088 = new BitSet(new ulong[]{0x5040000000008000UL,0x20141442UL});
		public static readonly BitSet _formalParameter_in_catchClause4092 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_catchClause4094 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _block_in_catchClause4098 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_formalParameter4117 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_formalParameter4119 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _variableDeclaratorId_in_formalParameter4121 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switchBlockStatementGroup_in_switchBlockStatementGroups4149 = new BitSet(new ulong[]{0x8000000000000002UL,0x10UL});
		public static readonly BitSet _switchLabel_in_switchBlockStatementGroup4176 = new BitSet(new ulong[]{0xF84103310260D1D2UL,0x21B9FFEDC767EUL});
		public static readonly BitSet _blockStatement_in_switchBlockStatementGroup4179 = new BitSet(new ulong[]{0x784103310260D1D2UL,0x21B9FFEDC766EUL});
		public static readonly BitSet _63_in_switchLabel4203 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _constantExpression_in_switchLabel4206 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_switchLabel4208 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _63_in_switchLabel4218 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _enumConstantName_in_switchLabel4222 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_switchLabel4224 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_switchLabel4234 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_switchLabel4238 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enhancedForControl_in_forControl4269 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _forInit_in_forControl4279 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_forControl4282 = new BitSet(new ulong[]{0x500103310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_forControl4284 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_forControl4287 = new BitSet(new ulong[]{0x500003310260D0C2UL,0x2028920D41242UL});
		public static readonly BitSet _forUpdate_in_forControl4289 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_forInit4309 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expressionList_in_forInit4320 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _variableModifiers_in_enhancedForControl4343 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_enhancedForControl4345 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_enhancedForControl4347 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_enhancedForControl4351 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_enhancedForControl4353 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expressionList_in_forUpdate4372 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_parExpression4393 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_parExpression4396 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_parExpression4398 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expressionList4423 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _39_in_expressionList4426 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_expressionList4429 = new BitSet(new ulong[]{0x8000000002UL});
		public static readonly BitSet _expression_in_statementExpression4450 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_constantExpression4474 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalExpression_in_expression4497 = new BitSet(new ulong[]{0x416444890000002UL,0x400000000000UL});
		public static readonly BitSet _assignmentOperator_in_expression4500 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_expression4502 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _50_in_assignmentOperator4527 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _38_in_assignmentOperator4539 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _42_in_assignmentOperator4549 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _35_in_assignmentOperator4559 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _46_in_assignmentOperator4569 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _31_in_assignmentOperator4579 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _110_in_assignmentOperator4589 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _58_in_assignmentOperator4599 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _28_in_assignmentOperator4609 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_assignmentOperator4630 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_assignmentOperator4634 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_assignmentOperator4638 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_assignmentOperator4672 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_assignmentOperator4676 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_assignmentOperator4680 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_assignmentOperator4684 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_assignmentOperator4715 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_assignmentOperator4719 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_assignmentOperator4723 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalOrExpression_in_conditionalExpression4752 = new BitSet(new ulong[]{0x20000000000002UL});
		public static readonly BitSet _53_in_conditionalExpression4756 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_conditionalExpression4758 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_conditionalExpression4760 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_conditionalExpression4762 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditionalAndExpression_in_conditionalOrExpression4784 = new BitSet(new ulong[]{0x2UL,0x800000000000UL});
		public static readonly BitSet _111_in_conditionalOrExpression4788 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _conditionalAndExpression_in_conditionalOrExpression4792 = new BitSet(new ulong[]{0x2UL,0x800000000000UL});
		public static readonly BitSet _inclusiveOrExpression_in_conditionalAndExpression4814 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _29_in_conditionalAndExpression4818 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _inclusiveOrExpression_in_conditionalAndExpression4822 = new BitSet(new ulong[]{0x20000002UL});
		public static readonly BitSet _exclusiveOrExpression_in_inclusiveOrExpression4844 = new BitSet(new ulong[]{0x2UL,0x200000000000UL});
		public static readonly BitSet _109_in_inclusiveOrExpression4848 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _exclusiveOrExpression_in_inclusiveOrExpression4852 = new BitSet(new ulong[]{0x2UL,0x200000000000UL});
		public static readonly BitSet _andExpression_in_exclusiveOrExpression4874 = new BitSet(new ulong[]{0x200000000000002UL});
		public static readonly BitSet _57_in_exclusiveOrExpression4878 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _andExpression_in_exclusiveOrExpression4880 = new BitSet(new ulong[]{0x200000000000002UL});
		public static readonly BitSet _equalityExpression_in_andExpression4902 = new BitSet(new ulong[]{0x40000002UL});
		public static readonly BitSet _30_in_andExpression4906 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _equalityExpression_in_andExpression4910 = new BitSet(new ulong[]{0x40000002UL});
		public static readonly BitSet _instanceOfExpression_in_equalityExpression4932 = new BitSet(new ulong[]{0x8000004000002UL});
		public static readonly BitSet _51_in_equalityExpression4937 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _26_in_equalityExpression4942 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _instanceOfExpression_in_equalityExpression4947 = new BitSet(new ulong[]{0x8000004000002UL});
		public static readonly BitSet _relationalExpression_in_instanceOfExpression4969 = new BitSet(new ulong[]{0x2UL,0x20000UL});
		public static readonly BitSet _81_in_instanceOfExpression4972 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _type_in_instanceOfExpression4975 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _shiftExpression_in_relationalExpression4996 = new BitSet(new ulong[]{0x12000000000002UL});
		public static readonly BitSet _relationalOp_in_relationalExpression5000 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _shiftExpression_in_relationalExpression5002 = new BitSet(new ulong[]{0x12000000000002UL});
		public static readonly BitSet _49_in_relationalOp5037 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_relationalOp5041 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_relationalOp5071 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_relationalOp5075 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_relationalOp5096 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_relationalOp5108 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _additiveExpression_in_shiftExpression5129 = new BitSet(new ulong[]{0x12000000000002UL});
		public static readonly BitSet _shiftOp_in_shiftExpression5133 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _additiveExpression_in_shiftExpression5135 = new BitSet(new ulong[]{0x12000000000002UL});
		public static readonly BitSet _49_in_shiftOp5166 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_shiftOp5170 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_shiftOp5202 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_shiftOp5206 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_shiftOp5210 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_shiftOp5240 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_shiftOp5244 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _multiplicativeExpression_in_additiveExpression5274 = new BitSet(new ulong[]{0x11000000002UL});
		public static readonly BitSet _36_in_additiveExpression5279 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _40_in_additiveExpression5284 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _multiplicativeExpression_in_additiveExpression5289 = new BitSet(new ulong[]{0x11000000002UL});
		public static readonly BitSet _unaryExpression_in_multiplicativeExpression5311 = new BitSet(new ulong[]{0x200408000002UL});
		public static readonly BitSet _34_in_multiplicativeExpression5317 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _45_in_multiplicativeExpression5323 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _27_in_multiplicativeExpression5329 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_multiplicativeExpression5334 = new BitSet(new ulong[]{0x200408000002UL});
		public static readonly BitSet _36_in_unaryExpression5360 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression5362 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _40_in_unaryExpression5372 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression5374 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _37_in_unaryExpression5384 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression5386 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _41_in_unaryExpression5396 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_unaryExpression5398 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unaryExpressionNotPlusMinus_in_unaryExpression5408 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _113_in_unaryExpressionNotPlusMinus5427 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_unaryExpressionNotPlusMinus5429 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _25_in_unaryExpressionNotPlusMinus5439 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_unaryExpressionNotPlusMinus5441 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _castExpression_in_unaryExpressionNotPlusMinus5451 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_in_unaryExpressionNotPlusMinus5461 = new BitSet(new ulong[]{0x800A2000000002UL});
		public static readonly BitSet _selector_in_unaryExpressionNotPlusMinus5463 = new BitSet(new ulong[]{0x800A2000000002UL});
		public static readonly BitSet _37_in_unaryExpressionNotPlusMinus5467 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _41_in_unaryExpressionNotPlusMinus5471 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_castExpression5493 = new BitSet(new ulong[]{0x5000000000000000UL,0x20141042UL});
		public static readonly BitSet _primitiveType_in_castExpression5496 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_castExpression5498 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_castExpression5500 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_castExpression5509 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _type_in_castExpression5513 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _expression_in_castExpression5517 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_castExpression5520 = new BitSet(new ulong[]{0x500000010260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpressionNotPlusMinus_in_castExpression5522 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _parExpression_in_primary5541 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _99_in_primary5551 = new BitSet(new ulong[]{0x80080100000002UL});
		public static readonly BitSet _43_in_primary5555 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_primary5559 = new BitSet(new ulong[]{0x80080100000002UL});
		public static readonly BitSet _identifierSuffix_in_primary5563 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _96_in_primary5575 = new BitSet(new ulong[]{0x80100000000UL});
		public static readonly BitSet _superSuffix_in_primary5578 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _literal_in_primary5588 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _86_in_primary5598 = new BitSet(new ulong[]{0x5002000000008000UL,0x20141042UL});
		public static readonly BitSet _creator_in_primary5601 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _Identifier_in_primary5613 = new BitSet(new ulong[]{0x80080100000002UL});
		public static readonly BitSet _43_in_primary5618 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_primary5624 = new BitSet(new ulong[]{0x80080100000002UL});
		public static readonly BitSet _identifierSuffix_in_primary5629 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primitiveType_in_primary5641 = new BitSet(new ulong[]{0x80080000000000UL});
		public static readonly BitSet _55_in_primary5644 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_primary5647 = new BitSet(new ulong[]{0x80080000000000UL});
		public static readonly BitSet _43_in_primary5652 = new BitSet(new ulong[]{0x0UL,0x4UL});
		public static readonly BitSet _66_in_primary5654 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _105_in_primary5666 = new BitSet(new ulong[]{0x80000000000UL});
		public static readonly BitSet _43_in_primary5669 = new BitSet(new ulong[]{0x0UL,0x4UL});
		public static readonly BitSet _66_in_primary5673 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_identifierSuffix5694 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_identifierSuffix5698 = new BitSet(new ulong[]{0x80080000000000UL});
		public static readonly BitSet _43_in_identifierSuffix5704 = new BitSet(new ulong[]{0x0UL,0x4UL});
		public static readonly BitSet _66_in_identifierSuffix5708 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_identifierSuffix5720 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_identifierSuffix5724 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_identifierSuffix5726 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _arguments_in_identifierSuffix5741 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_identifierSuffix5752 = new BitSet(new ulong[]{0x0UL,0x4UL});
		public static readonly BitSet _66_in_identifierSuffix5756 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_identifierSuffix5767 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _explicitGenericInvocation_in_identifierSuffix5771 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_identifierSuffix5781 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _99_in_identifierSuffix5785 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_identifierSuffix5796 = new BitSet(new ulong[]{0x0UL,0x100000000UL});
		public static readonly BitSet _96_in_identifierSuffix5800 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _arguments_in_identifierSuffix5802 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_identifierSuffix5814 = new BitSet(new ulong[]{0x0UL,0x400000UL});
		public static readonly BitSet _86_in_identifierSuffix5818 = new BitSet(new ulong[]{0x2000000008000UL});
		public static readonly BitSet _innerCreator_in_identifierSuffix5821 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_creator5840 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _createdName_in_creator5842 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _classCreatorRest_in_creator5844 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _createdName_in_creator5854 = new BitSet(new ulong[]{0x80000100000000UL});
		public static readonly BitSet _arrayCreatorRest_in_creator5857 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classCreatorRest_in_creator5861 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceType_in_createdName5883 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primitiveType_in_createdName5893 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_innerCreator5918 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_innerCreator5921 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _classCreatorRest_in_innerCreator5923 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_arrayCreatorRest5942 = new BitSet(new ulong[]{0x510003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _56_in_arrayCreatorRest5957 = new BitSet(new ulong[]{0x80000000000000UL,0x100000000000UL});
		public static readonly BitSet _55_in_arrayCreatorRest5960 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_arrayCreatorRest5963 = new BitSet(new ulong[]{0x80000000000000UL,0x100000000000UL});
		public static readonly BitSet _arrayInitializer_in_arrayCreatorRest5969 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_arrayCreatorRest5983 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_arrayCreatorRest5985 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _55_in_arrayCreatorRest5990 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_arrayCreatorRest5993 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_arrayCreatorRest5995 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _55_in_arrayCreatorRest6002 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_arrayCreatorRest6005 = new BitSet(new ulong[]{0x80000000000002UL});
		public static readonly BitSet _arguments_in_classCreatorRest6038 = new BitSet(new ulong[]{0x2UL,0x100000000000UL});
		public static readonly BitSet _classBody_in_classCreatorRest6040 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_explicitGenericInvocation6064 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_explicitGenericInvocation6066 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _arguments_in_explicitGenericInvocation6069 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_nonWildcardTypeArguments6092 = new BitSet(new ulong[]{0x5000000000008000UL,0x20141042UL});
		public static readonly BitSet _typeList_in_nonWildcardTypeArguments6096 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_nonWildcardTypeArguments6098 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_selector6123 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_selector6127 = new BitSet(new ulong[]{0x100000002UL});
		public static readonly BitSet _arguments_in_selector6132 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_selector6143 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _99_in_selector6147 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_selector6159 = new BitSet(new ulong[]{0x0UL,0x100000000UL});
		public static readonly BitSet _96_in_selector6163 = new BitSet(new ulong[]{0x80100000000UL});
		public static readonly BitSet _superSuffix_in_selector6165 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_selector6177 = new BitSet(new ulong[]{0x0UL,0x400000UL});
		public static readonly BitSet _86_in_selector6181 = new BitSet(new ulong[]{0x2000000008000UL});
		public static readonly BitSet _innerCreator_in_selector6186 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_selector6196 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_selector6200 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_selector6202 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _arguments_in_superSuffix6227 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_superSuffix6237 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_superSuffix6241 = new BitSet(new ulong[]{0x100000002UL});
		public static readonly BitSet _arguments_in_superSuffix6245 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_arguments6265 = new BitSet(new ulong[]{0x500003330260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expressionList_in_arguments6268 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_arguments6271 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotations_in_synpred5_JavaJava75 = new BitSet(new ulong[]{0x840000000000100UL,0xCF080404UL});
		public static readonly BitSet _packageDeclaration_in_synpred5_JavaJava89 = new BitSet(new ulong[]{0x841000000000102UL,0xCE090404UL});
		public static readonly BitSet _importDeclaration_in_synpred5_JavaJava91 = new BitSet(new ulong[]{0x841000000000102UL,0xCE090404UL});
		public static readonly BitSet _typeDeclaration_in_synpred5_JavaJava94 = new BitSet(new ulong[]{0x841000000000102UL,0xCE080404UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_synpred5_JavaJava109 = new BitSet(new ulong[]{0x841000000000102UL,0xCE080404UL});
		public static readonly BitSet _typeDeclaration_in_synpred5_JavaJava111 = new BitSet(new ulong[]{0x841000000000102UL,0xCE080404UL});
		public static readonly BitSet _explicitConstructorInvocation_in_synpred113_JavaJava2726 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _nonWildcardTypeArguments_in_synpred117_JavaJava2753 = new BitSet(new ulong[]{0x0UL,0x900000000UL});
		public static readonly BitSet _set_in_synpred117_JavaJava2756 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _arguments_in_synpred117_JavaJava2767 = new BitSet(new ulong[]{0x1000000000000UL});
		public static readonly BitSet _48_in_synpred117_JavaJava2769 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _annotation_in_synpred128_JavaJava3015 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclarationStatement_in_synpred151_JavaJava3581 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _classOrInterfaceDeclaration_in_synpred152_JavaJava3591 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _71_in_synpred157_JavaJava3742 = new BitSet(new ulong[]{0x700103310260D0D0UL,0x21B9F30D4726AUL});
		public static readonly BitSet _statement_in_synpred157_JavaJava3746 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_synpred162_JavaJava3836 = new BitSet(new ulong[]{0x0UL,0x800UL});
		public static readonly BitSet _75_in_synpred162_JavaJava3838 = new BitSet(new ulong[]{0x0UL,0x100000000000UL});
		public static readonly BitSet _block_in_synpred162_JavaJava3841 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _catches_in_synpred163_JavaJava3853 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _switchLabel_in_synpred178_JavaJava4176 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _63_in_synpred180_JavaJava4203 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _constantExpression_in_synpred180_JavaJava4206 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_synpred180_JavaJava4208 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _63_in_synpred181_JavaJava4218 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _enumConstantName_in_synpred181_JavaJava4222 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_synpred181_JavaJava4224 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enhancedForControl_in_synpred182_JavaJava4269 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _localVariableDeclaration_in_synpred186_JavaJava4309 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _assignmentOperator_in_synpred188_JavaJava4500 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_synpred188_JavaJava4502 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_synpred198_JavaJava4620 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_synpred198_JavaJava4622 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_synpred198_JavaJava4624 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_synpred199_JavaJava4660 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred199_JavaJava4662 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred199_JavaJava4664 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_synpred199_JavaJava4666 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_synpred200_JavaJava4705 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred200_JavaJava4707 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_synpred200_JavaJava4709 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_synpred211_JavaJava5029 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_synpred211_JavaJava5031 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_synpred212_JavaJava5063 = new BitSet(new ulong[]{0x4000000000000UL});
		public static readonly BitSet _50_in_synpred212_JavaJava5065 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _49_in_synpred215_JavaJava5158 = new BitSet(new ulong[]{0x2000000000000UL});
		public static readonly BitSet _49_in_synpred215_JavaJava5160 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_synpred216_JavaJava5192 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred216_JavaJava5194 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred216_JavaJava5196 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _52_in_synpred217_JavaJava5232 = new BitSet(new ulong[]{0x10000000000000UL});
		public static readonly BitSet _52_in_synpred217_JavaJava5234 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _castExpression_in_synpred229_JavaJava5451 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_synpred233_JavaJava5493 = new BitSet(new ulong[]{0x5000000000000000UL,0x20141042UL});
		public static readonly BitSet _primitiveType_in_synpred233_JavaJava5496 = new BitSet(new ulong[]{0x200000000UL});
		public static readonly BitSet _33_in_synpred233_JavaJava5498 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _unaryExpression_in_synpred233_JavaJava5500 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_in_synpred234_JavaJava5513 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_synpred236_JavaJava5555 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_synpred236_JavaJava5559 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifierSuffix_in_synpred237_JavaJava5563 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _43_in_synpred242_JavaJava5618 = new BitSet(new ulong[]{0x8000UL});
		public static readonly BitSet _Identifier_in_synpred242_JavaJava5624 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _identifierSuffix_in_synpred243_JavaJava5629 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_synpred249_JavaJava5720 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_synpred249_JavaJava5724 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_synpred249_JavaJava5726 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _55_in_synpred262_JavaJava5990 = new BitSet(new ulong[]{0x500003310260D0C0UL,0x2028920D41242UL});
		public static readonly BitSet _expression_in_synpred262_JavaJava5993 = new BitSet(new ulong[]{0x100000000000000UL});
		public static readonly BitSet _56_in_synpred262_JavaJava5995 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}
